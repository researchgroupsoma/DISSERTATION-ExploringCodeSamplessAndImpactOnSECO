event_id,event_type,event_repository,code_sample_event,event_created_at,event_payload,event_action,language
21452806769,PullRequestEvent,spring-projects/spring-framework,0.0,2022-04-25T12:59:13Z,"{'action': 'closed', 'number': 28265, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265', 'id': 895811358, 'node_id': 'PR_kwDOABGHUc41ZP8e', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28265', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28265.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28265.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265', 'number': 28265, 'state': 'closed', 'locked': False, 'title': 'add properties for allow/deny on ConfigurableWebBindingInitializer', 'user': {'login': 'tubbynl', 'id': 6532583, 'node_id': 'MDQ6VXNlcjY1MzI1ODM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6532583?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tubbynl', 'html_url': 'https://github.com/tubbynl', 'followers_url': 'https://api.github.com/users/tubbynl/followers', 'following_url': 'https://api.github.com/users/tubbynl/following{/other_user}', 'gists_url': 'https://api.github.com/users/tubbynl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tubbynl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tubbynl/subscriptions', 'organizations_url': 'https://api.github.com/users/tubbynl/orgs', 'repos_url': 'https://api.github.com/users/tubbynl/repos', 'events_url': 'https://api.github.com/users/tubbynl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tubbynl/received_events', 'type': 'User', 'site_admin': False}, 'body': ""to eventually implement them as configurable properties in WebProperties and into WebMvcAutoConfiguration and it's flux sibling if i can find it\r\n\r\nhttps://github.com/spring-projects/spring-boot/issues/30490"", 'created_at': '2022-03-31T12:25:38Z', 'updated_at': '2022-04-25T12:59:12Z', 'closed_at': '2022-04-25T12:59:12Z', 'merged_at': None, 'merge_commit_sha': '0082eb4cf1ef2a007965f10ef34633ddbc12ed0b', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1188511944, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTQ0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20declined', 'name': 'status: declined', 'color': 'fef2c0', 'default': False, 'description': ""A suggestion or change that we don't feel we should currently apply""}], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/047a98dab78b99d218a6df1e5591dde9a81321b3', 'head': {'label': 'tubbynl:main', 'ref': 'main', 'sha': '047a98dab78b99d218a6df1e5591dde9a81321b3', 'user': {'login': 'tubbynl', 'id': 6532583, 'node_id': 'MDQ6VXNlcjY1MzI1ODM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6532583?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tubbynl', 'html_url': 'https://github.com/tubbynl', 'followers_url': 'https://api.github.com/users/tubbynl/followers', 'following_url': 'https://api.github.com/users/tubbynl/following{/other_user}', 'gists_url': 'https://api.github.com/users/tubbynl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tubbynl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tubbynl/subscriptions', 'organizations_url': 'https://api.github.com/users/tubbynl/orgs', 'repos_url': 'https://api.github.com/users/tubbynl/repos', 'events_url': 'https://api.github.com/users/tubbynl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tubbynl/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 476195885, 'node_id': 'R_kgDOHGIsLQ', 'name': 'spring-framework', 'full_name': 'tubbynl/spring-framework', 'private': False, 'owner': {'login': 'tubbynl', 'id': 6532583, 'node_id': 'MDQ6VXNlcjY1MzI1ODM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6532583?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tubbynl', 'html_url': 'https://github.com/tubbynl', 'followers_url': 'https://api.github.com/users/tubbynl/followers', 'following_url': 'https://api.github.com/users/tubbynl/following{/other_user}', 'gists_url': 'https://api.github.com/users/tubbynl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tubbynl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tubbynl/subscriptions', 'organizations_url': 'https://api.github.com/users/tubbynl/orgs', 'repos_url': 'https://api.github.com/users/tubbynl/repos', 'events_url': 'https://api.github.com/users/tubbynl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tubbynl/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/tubbynl/spring-framework', 'description': 'Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/tubbynl/spring-framework', 'forks_url': 'https://api.github.com/repos/tubbynl/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/tubbynl/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/tubbynl/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/tubbynl/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/tubbynl/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/tubbynl/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/tubbynl/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/tubbynl/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/tubbynl/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/tubbynl/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/tubbynl/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/tubbynl/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/tubbynl/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/tubbynl/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/tubbynl/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/tubbynl/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/tubbynl/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/tubbynl/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/tubbynl/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/tubbynl/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/tubbynl/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/tubbynl/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/tubbynl/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/tubbynl/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/tubbynl/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/tubbynl/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/tubbynl/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/tubbynl/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/tubbynl/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/tubbynl/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/tubbynl/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/tubbynl/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/tubbynl/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/tubbynl/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/tubbynl/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/tubbynl/spring-framework/deployments', 'created_at': '2022-03-31T07:23:32Z', 'updated_at': '2022-03-31T11:43:40Z', 'pushed_at': '2022-03-31T13:09:33Z', 'git_url': 'git://github.com/tubbynl/spring-framework.git', 'ssh_url': 'git@github.com:tubbynl/spring-framework.git', 'clone_url': 'https://github.com/tubbynl/spring-framework.git', 'svn_url': 'https://github.com/tubbynl/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 173480, 'stargazers_count': 0, 'watchers_count': 0, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 0, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': 'afbff391d8299034cd98af968981504b6ca7b38c', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 1148753, 'node_id': 'MDEwOlJlcG9zaXRvcnkxMTQ4NzUz', 'name': 'spring-framework', 'full_name': 'spring-projects/spring-framework', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-framework', 'description': 'Spring Framework', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-framework/deployments', 'created_at': '2010-12-08T04:04:45Z', 'updated_at': '2022-04-25T12:49:14Z', 'pushed_at': '2022-04-25T09:03:03Z', 'git_url': 'git://github.com/spring-projects/spring-framework.git', 'ssh_url': 'git@github.com:spring-projects/spring-framework.git', 'clone_url': 'https://github.com/spring-projects/spring-framework.git', 'svn_url': 'https://github.com/spring-projects/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 173873, 'stargazers_count': 47374, 'watchers_count': 47374, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': True, 'forks_count': 33504, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1318, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['framework', 'spring', 'spring-framework'], 'visibility': 'public', 'forks': 33504, 'open_issues': 1318, 'watchers': 47374, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265'}, 'html': {'href': 'https://github.com/spring-projects/spring-framework/pull/28265'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/047a98dab78b99d218a6df1e5591dde9a81321b3'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': True, 'rebaseable': True, 'mergeable_state': 'unstable', 'merged_by': None, 'comments': 3, 'review_comments': 0, 'maintainer_can_modify': False, 'commits': 6, 'additions': 105, 'deletions': 0, 'changed_files': 2}}",closed,Java
21452800564,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T12:58:53Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/events', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28265', 'id': 1188001853, 'node_id': 'PR_kwDOABGHUc41ZP8e', 'number': 28265, 'title': 'add properties for allow/deny on ConfigurableWebBindingInitializer', 'user': {'login': 'tubbynl', 'id': 6532583, 'node_id': 'MDQ6VXNlcjY1MzI1ODM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6532583?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/tubbynl', 'html_url': 'https://github.com/tubbynl', 'followers_url': 'https://api.github.com/users/tubbynl/followers', 'following_url': 'https://api.github.com/users/tubbynl/following{/other_user}', 'gists_url': 'https://api.github.com/users/tubbynl/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/tubbynl/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/tubbynl/subscriptions', 'organizations_url': 'https://api.github.com/users/tubbynl/orgs', 'repos_url': 'https://api.github.com/users/tubbynl/repos', 'events_url': 'https://api.github.com/users/tubbynl/events{/privacy}', 'received_events_url': 'https://api.github.com/users/tubbynl/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-31T12:25:38Z', 'updated_at': '2022-04-25T12:58:52Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28265', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28265', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28265.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28265.patch', 'merged_at': None}, 'body': ""to eventually implement them as configurable properties in WebProperties and into WebMvcAutoConfiguration and it's flux sibling if i can find it\r\n\r\nhttps://github.com/spring-projects/spring-boot/issues/30490"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108536554', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28265#issuecomment-1108536554', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28265', 'id': 1108536554, 'node_id': 'IC_kwDOABGHUc5CEuzq', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T12:58:52Z', 'updated_at': '2022-04-25T12:58:52Z', 'author_association': 'CONTRIBUTOR', 'body': 'This will not serve the goals stated in https://github.com/spring-projects/spring-boot/issues/30490 because the same properties can be set on the DataBinder from an `@InitBinder` method in the controller or in the a `@ControllerAdvice` and that would override the values initially set.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108536554/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21452591107,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T12:47:58Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28252', 'id': 1186159867, 'node_id': 'I_kwDOABGHUc5Gs1z7', 'number': 28252, 'title': 'StompSubProtocolHandler - Authentication Logging', 'user': {'login': 'phil-applegate', 'id': 3941023, 'node_id': 'MDQ6VXNlcjM5NDEwMjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3941023?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/phil-applegate', 'html_url': 'https://github.com/phil-applegate', 'followers_url': 'https://api.github.com/users/phil-applegate/followers', 'following_url': 'https://api.github.com/users/phil-applegate/following{/other_user}', 'gists_url': 'https://api.github.com/users/phil-applegate/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/phil-applegate/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/phil-applegate/subscriptions', 'organizations_url': 'https://api.github.com/users/phil-applegate/orgs', 'repos_url': 'https://api.github.com/users/phil-applegate/repos', 'events_url': 'https://api.github.com/users/phil-applegate/events{/privacy}', 'received_events_url': 'https://api.github.com/users/phil-applegate/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511748, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzQ4', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-feedback', 'name': 'status: waiting-for-feedback', 'color': 'fef2c0', 'default': False, 'description': 'We need additional information before we can continue'}, {'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511784, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzg0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20messaging', 'name': 'in: messaging', 'color': 'e8f9de', 'default': False, 'description': 'Issues in messaging modules (jms, messaging)'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-03-30T09:29:46Z', 'updated_at': '2022-04-25T12:47:58Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects:** 5.3.17\r\n\r\n---\r\n\r\nAs part of #26026 the logging in StompSubProtocolHandler was improved to prevent the logging of exceptions pertaining to failed authentication. More specifically, this suppression applies to STOMP CONNECT messages as per (https://github.com/spring-projects/spring-framework/commit/bcd2b9a8a7d4e0b8b6615787122d5f2a2d3eb70c#diff-624b9c9ccd9db4e56263e34b3e865fdce34e9b1dd00a00f956f919ede789265fR337). \r\n\r\nGiven that Spring Security allows for access decisions to be made at the topic level when users Subscribe (using `MessageSecurityMetaDataSourceRegistry.simpSubscribeDestMatchers(String... patterns)`) should the logging suppression be enhanced to apply to both CONNECT and SUBSCRIBE messages? This will therefore suppress the error level logging when a user fails authentication when subscribing to a topic.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108526329', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28252#issuecomment-1108526329', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252', 'id': 1108526329, 'node_id': 'IC_kwDOABGHUc5CEsT5', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T12:47:58Z', 'updated_at': '2022-04-25T12:47:58Z', 'author_association': 'CONTRIBUTOR', 'body': '> This will therefore suppress the error level logging when a user fails authentication when subscribing to a topic.\r\n\r\nJust noticed this. Subscribing should trigger authorization, not authentication.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108526329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21452572282,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T12:46:59Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28252', 'id': 1186159867, 'node_id': 'I_kwDOABGHUc5Gs1z7', 'number': 28252, 'title': 'StompSubProtocolHandler - Authentication Logging', 'user': {'login': 'phil-applegate', 'id': 3941023, 'node_id': 'MDQ6VXNlcjM5NDEwMjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3941023?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/phil-applegate', 'html_url': 'https://github.com/phil-applegate', 'followers_url': 'https://api.github.com/users/phil-applegate/followers', 'following_url': 'https://api.github.com/users/phil-applegate/following{/other_user}', 'gists_url': 'https://api.github.com/users/phil-applegate/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/phil-applegate/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/phil-applegate/subscriptions', 'organizations_url': 'https://api.github.com/users/phil-applegate/orgs', 'repos_url': 'https://api.github.com/users/phil-applegate/repos', 'events_url': 'https://api.github.com/users/phil-applegate/events{/privacy}', 'received_events_url': 'https://api.github.com/users/phil-applegate/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-30T09:29:46Z', 'updated_at': '2022-04-25T12:46:59Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects:** 5.3.17\r\n\r\n---\r\n\r\nAs part of #26026 the logging in StompSubProtocolHandler was improved to prevent the logging of exceptions pertaining to failed authentication. More specifically, this suppression applies to STOMP CONNECT messages as per (https://github.com/spring-projects/spring-framework/commit/bcd2b9a8a7d4e0b8b6615787122d5f2a2d3eb70c#diff-624b9c9ccd9db4e56263e34b3e865fdce34e9b1dd00a00f956f919ede789265fR337). \r\n\r\nGiven that Spring Security allows for access decisions to be made at the topic level when users Subscribe (using `MessageSecurityMetaDataSourceRegistry.simpSubscribeDestMatchers(String... patterns)`) should the logging suppression be enhanced to apply to both CONNECT and SUBSCRIBE messages? This will therefore suppress the error level logging when a user fails authentication when subscribing to a topic.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108525345', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28252#issuecomment-1108525345', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28252', 'id': 1108525345, 'node_id': 'IC_kwDOABGHUc5CEsEh', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T12:46:59Z', 'updated_at': '2022-04-25T12:46:59Z', 'author_association': 'CONTRIBUTOR', 'body': 'For #26026 the concern was that a user that is not even authenticated could filling up the logs with stacktraces, while for a subscription to be sent, the user must have been authenticated already. Did you run into this from a specific use case or concern, and if so could you please elaborate? ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108525345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21450826193,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T11:09:07Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28227', 'id': 1179325864, 'node_id': 'I_kwDOABGHUc5GSxWo', 'number': 28227, 'title': 'RequestInfo combine not working if either info is null', 'user': {'login': 'ericlacher', 'id': 11710592, 'node_id': 'MDQ6VXNlcjExNzEwNTky', 'avatar_url': 'https://avatars.githubusercontent.com/u/11710592?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ericlacher', 'html_url': 'https://github.com/ericlacher', 'followers_url': 'https://api.github.com/users/ericlacher/followers', 'following_url': 'https://api.github.com/users/ericlacher/following{/other_user}', 'gists_url': 'https://api.github.com/users/ericlacher/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ericlacher/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ericlacher/subscriptions', 'organizations_url': 'https://api.github.com/users/ericlacher/orgs', 'repos_url': 'https://api.github.com/users/ericlacher/repos', 'events_url': 'https://api.github.com/users/ericlacher/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ericlacher/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-03-24T10:41:59Z', 'updated_at': '2022-04-25T11:09:06Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects:** 5.3.X\r\n\r\n### Motivation\r\n\r\nI am currently trying to implement a feature, which allows to use nested RequestMapping classes to assemble the path:\r\n\r\n```\r\n@RequestMapping(""/api/v1"")\r\nclass ApiV1 {}\r\n\r\n@RequestMapping(""/entity"")\r\n@RestController\r\nclass EntityController extends ApiV1 {}\r\n\r\n```\r\nso that endpoints defined in EntityController get path `/api/v1/entity..`.\r\n\r\n**If you do not like what I am trying to accomplish here, move to section ""The Bug"", as in my opinion this needs to get fixed either way.**\r\n\r\n### My Approaches\r\n\r\nI am trying to accomplish this by providing my own implementation of `RequestMappingHandlerMapping`.\r\n\r\n#### Override `resolveEmbeddedValuesInPatterns`\r\n\r\nMy initial thought was overriding the method which is assembling the path: [RequestMappingHandlerMapping.resolveEmbeddedValuesInPatterns(String[] patterns](https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java#L386)\r\n\r\nHowever, the only argument is the `String[] patterns` and I do not have the handler class available (**could this be changed?**)\r\n\r\n#### Override `getMappingForMethod`\r\n\r\nMy next attempt was overriding method [getMappingForMethod(Method method, Class<?> handlerType)](https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java#L283). My implementation would first call `super.getMappingForMethod` to receive a RequestMappingInfo, then iterate through the handlerType\'s superClasses and assembles the path according to the found `@RequestMapping` annotations:\r\n\r\n(Simplified, some error checking etc. is happening here as well)\r\n```\r\nprotected RequestMappingInfo getMappingForMethod(Method method, Class<?> handlerType) {\r\n    RequestMappingInfo methodMapping = super.getMappingForMethod(method, handlerType);\r\n    List<String> superclassUrlPatterns = new ArrayList<String>();\r\n    for (Class<?> clazz = handlerType; clazz != Object.class; clazz = clazz.getSuperclass()) {\r\n      // assemble url from found annotations \r\n          superclassUrlPatterns.add(...)\r\n    }\r\n    RequestMappingInfo superclassRequestMappingInfo = RequestMappingInfo\r\n          .paths(String.join("""", superclassUrlPatterns))\r\n          .build();\r\n\r\n   return superclassRequestMappingInfo.combine(methodMapping);\r\n   return methodMapping;\r\n  }\r\n```\r\nAs you can see, as I already have a `methodMapping` (which I cannot modify) from the super call, I need to assemble a new one (`superclassRequestMappingInfo`) and combine these two.\r\n\r\n### The Bug\r\n\r\nCombining does not work, as I am running into an [assertion error](https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfo.java#L165-L166). This is caused by\r\n[some if clauses](https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/RequestMappingInfo.java#L332-L338) which will only combine the two infos, if **both** are not null. In my opinion, combine should be done even if only **one** of both is not null. This can be safely done, as the called method is [doing additional checks](https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PathPatternsRequestCondition.java#L161-L169).\r\n\r\n### The fix\r\n\r\nUpdate: I locally tried to just change the `&&` to `||`, but this will fail later, due to `other` being null. What is working for me now is this (not very pretty) code:\r\n\r\n```\r\nPathPatternsRequestCondition pathPatterns = null;\r\nif(this.pathPatternsCondition != null && other.pathPatternsCondition == null){\r\n    pathPatterns = this.pathPatternsCondition;\r\n} else if(this.pathPatternsCondition == null && other.pathPatternsCondition != null){\r\n    pathPatterns = other.pathPatternsCondition;\r\n} else if(this.pathPatternsCondition != null && other.pathPatternsCondition != null){\r\n    pathPatterns = this.pathPatternsCondition.combine(other.pathPatternsCondition);\r\n}\r\n\r\nPatternsRequestCondition patterns = null;\r\nif(this.patternsCondition != null && other.patternsCondition == null){\r\n    patterns = this.patternsCondition;\r\n} else if(this.patternsCondition == null && other.patternsCondition != null){\r\n    patterns = other.patternsCondition;\r\n} else if(this.patternsCondition != null && other.patternsCondition != null){\r\n    patterns = this.patternsCondition.combine(other.patternsCondition);\r\n}\r\n```\r\n\r\n\r\n### Notes\r\n\r\nWhile I believe the mentioned `if` statements are a bug alone, my preferred way to accomplish my task would rather be to override `resolveEmbeddedValuesInPatterns` and have the **handler included as a parameter**. If this is not something you\'d consider, I can proceed with my 2nd approach as soon as the bug got fixed.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108428556', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28227#issuecomment-1108428556', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28227', 'id': 1108428556, 'node_id': 'IC_kwDOABGHUc5CEUcM', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T11:09:06Z', 'updated_at': '2022-04-25T11:09:06Z', 'author_association': 'CONTRIBUTOR', 'body': '> If you do not like what I am trying to accomplish here, move to section ""The Bug"", as in my opinion this needs to get fixed either way.\r\n\r\nPreferences aside, I\'m not sure it\'s a good idea to alter semantics this way on existing annotations. It would be more obvious to use [meta annotations](https://github.com/spring-projects/spring-framework/wiki/Spring-Annotation-Programming-Model#meta-annotations), e.g. `@ApiMapping` or something similar. This would make it more clear, but I would still consider alternatives, e.g. we support a [pathPrefix with a Class predicate](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-config-path-matching) or possibly placeholder for the API prefix in the request mapping.\r\n\r\nAs for the checks that both mappings should be `PathPattern` based or String pattern based, this is an illegal state check and it is their by design. A given `HandlerMapping` should be using one strategy or the other, not both.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108428556/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21450483838,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T10:48:53Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28223', 'id': 1178465408, 'node_id': 'I_kwDOABGHUc5GPfSA', 'number': 28223, 'title': 'request(converters): allow RequestParam conversion from null values.', 'user': {'login': 'codymikol', 'id': 13606342, 'node_id': 'MDQ6VXNlcjEzNjA2MzQy', 'avatar_url': 'https://avatars.githubusercontent.com/u/13606342?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/codymikol', 'html_url': 'https://github.com/codymikol', 'followers_url': 'https://api.github.com/users/codymikol/followers', 'following_url': 'https://api.github.com/users/codymikol/following{/other_user}', 'gists_url': 'https://api.github.com/users/codymikol/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/codymikol/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/codymikol/subscriptions', 'organizations_url': 'https://api.github.com/users/codymikol/orgs', 'repos_url': 'https://api.github.com/users/codymikol/repos', 'events_url': 'https://api.github.com/users/codymikol/events{/privacy}', 'received_events_url': 'https://api.github.com/users/codymikol/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-23T17:54:28Z', 'updated_at': '2022-04-25T10:48:53Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '<!--\r\n!!! For Security Vulnerabilities, please go to https://spring.io/security-policy !!!\r\n-->\r\n**Affects:**  Spring 5.3. 16 and below\r\n\r\nCurrently in Spring, there is only one class `Optional<T>` that can be populated by a null value when annotated with @RequestParam in a given RestControllerMapping.\r\n\r\nThis is allowed because within Spring a private method checks to see if the class of the type Optional and will immediately return an Optional.empty() when a null value is received.\r\n\r\nIn my case, I would like to use the class Option<T> from the arrow library so I can differentiate between an incoming request to query for null vs a request never being sent.\r\n\r\nthis allows me to do something like this\r\n\r\n@RequestMapping age: Option<Int?>\r\n\r\nWhere \r\n\r\n`Option.none()` is equivalent to not querying by age\r\n`Option.some(null)` is equivalent to querying for entries where age is null\r\n`Option.some(123)` is equivalent to querying for entries where age is 123\r\n\r\nThis allows me to dynamically build SQL predicates\r\n\r\nIn all cases except for Optional however, Spring will throw an exception if the parameter is not passed.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108408294', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28223#issuecomment-1108408294', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28223', 'id': 1108408294, 'node_id': 'IC_kwDOABGHUc5CEPfm', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T10:48:53Z', 'updated_at': '2022-04-25T10:48:53Z', 'author_association': 'CONTRIBUTOR', 'body': 'You should be able to register a custom converter for this. That should be checked before the `Optional` check in `TypeConverterDelegate`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108408294/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21450250768,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T10:34:44Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28220', 'id': 1177653961, 'node_id': 'I_kwDOABGHUc5GMZLJ', 'number': 28220, 'title': '@RequestParam with defaultValue of empty string on String parameter gives null but not empty String', 'user': {'login': 'Adamatoma', 'id': 56331604, 'node_id': 'MDQ6VXNlcjU2MzMxNjA0', 'avatar_url': 'https://avatars.githubusercontent.com/u/56331604?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Adamatoma', 'html_url': 'https://github.com/Adamatoma', 'followers_url': 'https://api.github.com/users/Adamatoma/followers', 'following_url': 'https://api.github.com/users/Adamatoma/following{/other_user}', 'gists_url': 'https://api.github.com/users/Adamatoma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Adamatoma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Adamatoma/subscriptions', 'organizations_url': 'https://api.github.com/users/Adamatoma/orgs', 'repos_url': 'https://api.github.com/users/Adamatoma/repos', 'events_url': 'https://api.github.com/users/Adamatoma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Adamatoma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-23T06:22:29Z', 'updated_at': '2022-04-25T10:34:44Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'I\'m using a @RequestParam on a String parameter, gives `defaultValue = """"`. When I call the api without this parameter, I suppose to get an empty value of String """" but got null in my case.\r\n\r\nExample that creates the bug:\r\n\r\n```\r\n@GetMapping\r\npublic String search(@RequestParam(defaultValue = """") String email) {\r\n    System.out.println(""Email should be an empty string if not provided: "" + email);\r\n    return email;\r\n}\r\n```\r\nWhen I call this api with no parameter, I got ""null"" in my console rather than """" (empty String value).', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108394124', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28220#issuecomment-1108394124', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28220', 'id': 1108394124, 'node_id': 'IC_kwDOABGHUc5CEMCM', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T10:34:44Z', 'updated_at': '2022-04-25T10:34:44Z', 'author_association': 'CONTRIBUTOR', 'body': 'I was not able to reproduce the issue. Please provide a sample that reproduces the issue.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108394124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21450133748,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T10:27:53Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28200', 'id': 1174239085, 'node_id': 'I_kwDOABGHUc5F_Xdt', 'number': 28200, 'title': 'Why required request headers e.g. strings - are not treated as missing if they are blank? ', 'user': {'login': 'memoricab', 'id': 7073672, 'node_id': 'MDQ6VXNlcjcwNzM2NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7073672?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/memoricab', 'html_url': 'https://github.com/memoricab', 'followers_url': 'https://api.github.com/users/memoricab/followers', 'following_url': 'https://api.github.com/users/memoricab/following{/other_user}', 'gists_url': 'https://api.github.com/users/memoricab/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/memoricab/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/memoricab/subscriptions', 'organizations_url': 'https://api.github.com/users/memoricab/orgs', 'repos_url': 'https://api.github.com/users/memoricab/repos', 'events_url': 'https://api.github.com/users/memoricab/events{/privacy}', 'received_events_url': 'https://api.github.com/users/memoricab/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511748, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzQ4', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-feedback', 'name': 'status: waiting-for-feedback', 'color': 'fef2c0', 'default': False, 'description': 'We need additional information before we can continue'}, {'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-19T11:03:29Z', 'updated_at': '2022-04-25T10:27:53Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello\r\n\r\nWhen I read the below comments I understand that if a header is blank it is treated as missing regardless of thinking of the Key-Value concept. \r\n\r\nFor example, when we request a string header, even it is a blank string the controller does not respond as a bad request.  \r\n\r\n\r\n` if the header is missing in the request`, maybe I am assuming for this condition that a blank string does not mean missing header?\r\nI wish we could somehow mention that regardless of the value it checks only the presence of the key of the header.\r\n\r\nhttps://github.com/spring-projects/spring-framework/blob/0cbea295178543d515bc4ce80ec152a1f8ddb2bc/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestHeader.java#L63-L71\r\n\r\n\r\nDisclosure:\r\nI am aware of Spring 5.3+, for type conversions it works very well, but in my case is without type conversion. i.e. requesting string header and no type conversion.  \r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108386735', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28200#issuecomment-1108386735', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200', 'id': 1108386735, 'node_id': 'IC_kwDOABGHUc5CEKOv', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T10:27:53Z', 'updated_at': '2022-04-25T10:27:53Z', 'author_association': 'CONTRIBUTOR', 'body': 'As to the question, why empty is not treated as missing, it really depends on your use case and perspective. There have been many discussions on the subject, and changing behavior will only lead to regressions for others.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108386735/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21450060614,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T10:23:39Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28200', 'id': 1174239085, 'node_id': 'I_kwDOABGHUc5F_Xdt', 'number': 28200, 'title': 'Why required request headers e.g. strings - are not treated as missing if they are blank? ', 'user': {'login': 'memoricab', 'id': 7073672, 'node_id': 'MDQ6VXNlcjcwNzM2NzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7073672?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/memoricab', 'html_url': 'https://github.com/memoricab', 'followers_url': 'https://api.github.com/users/memoricab/followers', 'following_url': 'https://api.github.com/users/memoricab/following{/other_user}', 'gists_url': 'https://api.github.com/users/memoricab/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/memoricab/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/memoricab/subscriptions', 'organizations_url': 'https://api.github.com/users/memoricab/orgs', 'repos_url': 'https://api.github.com/users/memoricab/repos', 'events_url': 'https://api.github.com/users/memoricab/events{/privacy}', 'received_events_url': 'https://api.github.com/users/memoricab/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-19T11:03:29Z', 'updated_at': '2022-04-25T10:23:39Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello\r\n\r\nWhen I read the below comments I understand that if a header is blank it is treated as missing regardless of thinking of the Key-Value concept. \r\n\r\nFor example, when we request a string header, even it is a blank string the controller does not respond as a bad request.  \r\n\r\n\r\n` if the header is missing in the request`, maybe I am assuming for this condition that a blank string does not mean missing header?\r\nI wish we could somehow mention that regardless of the value it checks only the presence of the key of the header.\r\n\r\nhttps://github.com/spring-projects/spring-framework/blob/0cbea295178543d515bc4ce80ec152a1f8ddb2bc/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestHeader.java#L63-L71\r\n\r\n\r\nDisclosure:\r\nI am aware of Spring 5.3+, for type conversions it works very well, but in my case is without type conversion. i.e. requesting string header and no type conversion.  \r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108382016', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28200#issuecomment-1108382016', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28200', 'id': 1108382016, 'node_id': 'IC_kwDOABGHUc5CEJFA', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T10:23:39Z', 'updated_at': '2022-04-25T10:23:39Z', 'author_association': 'CONTRIBUTOR', 'body': 'The header is indeed considered present but without a value. In the case where type conversion is required, it can ""hide"" the original empty value, and hence the change in 5.3 with #23939. We could improve the Javadoc for this.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108382016/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21449440433,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T09:49:17Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188/events', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28188', 'id': 1171243662, 'node_id': 'PR_kwDOABGHUc40i2Jy', 'number': 28188, 'title': 'Apply ""instanceof pattern matching"" in spring-core', 'user': {'login': 'diguage', 'id': 2121467, 'node_id': 'MDQ6VXNlcjIxMjE0Njc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2121467?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/diguage', 'html_url': 'https://github.com/diguage', 'followers_url': 'https://api.github.com/users/diguage/followers', 'following_url': 'https://api.github.com/users/diguage/following{/other_user}', 'gists_url': 'https://api.github.com/users/diguage/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/diguage/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/diguage/subscriptions', 'organizations_url': 'https://api.github.com/users/diguage/orgs', 'repos_url': 'https://api.github.com/users/diguage/repos', 'events_url': 'https://api.github.com/users/diguage/events{/privacy}', 'received_events_url': 'https://api.github.com/users/diguage/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-16T16:13:58Z', 'updated_at': '2022-04-25T09:49:17Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28188', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28188', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28188.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28188.patch', 'merged_at': None}, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108342183', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28188#issuecomment-1108342183', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28188', 'id': 1108342183, 'node_id': 'IC_kwDOABGHUc5CD_Wn', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T09:49:16Z', 'updated_at': '2022-04-25T09:49:16Z', 'author_association': 'CONTRIBUTOR', 'body': ""I'm not convinced this needs to be applied throughout. Especially where variables are used once."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108342183/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21448670270,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T09:07:59Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28164', 'id': 1166482947, 'node_id': 'I_kwDOABGHUc5Fhx4D', 'number': 28164, 'title': 'Support for Spring WebSession lifecycle tracking', 'user': {'login': 'jakshay21', 'id': 17300428, 'node_id': 'MDQ6VXNlcjE3MzAwNDI4', 'avatar_url': 'https://avatars.githubusercontent.com/u/17300428?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jakshay21', 'html_url': 'https://github.com/jakshay21', 'followers_url': 'https://api.github.com/users/jakshay21/followers', 'following_url': 'https://api.github.com/users/jakshay21/following{/other_user}', 'gists_url': 'https://api.github.com/users/jakshay21/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jakshay21/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jakshay21/subscriptions', 'organizations_url': 'https://api.github.com/users/jakshay21/orgs', 'repos_url': 'https://api.github.com/users/jakshay21/repos', 'events_url': 'https://api.github.com/users/jakshay21/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jakshay21/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-11T14:26:56Z', 'updated_at': '2022-04-25T09:07:59Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '<h2>TL; DR;</h2>\r\nAdd support for callbacks for tracking the lifecycle of a WebSession in WebSessionStore. \r\n\r\n<h2>Foreword</h2>\r\nWe had a use case to track journey of a WebSession. We wanted to track various aspects of it like when it was created, retrieved, saved, invalidated etc.\r\n\r\n<h2>Problem</h2> \r\nThe session expires based on - \r\n\r\n1. maxIdleTime limit reached, default is 30mins\r\n2. maxSessions limit reached, default is 10000\r\n3. invalidate was called\r\n\r\nWe wanted to distinguish the sessions which were removed due to inactivity for 30mins or maxSessions limit reached.\r\nCurrently there as no such hooks for any of the methods defined in WebSession interface to track the same.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108293929', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28164#issuecomment-1108293929', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28164', 'id': 1108293929, 'node_id': 'IC_kwDOABGHUc5CDzkp', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T09:07:59Z', 'updated_at': '2022-04-25T09:07:59Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for the request.\r\n\r\n`WebSessionManager` and related components are pluggable, so this would have to be done independent of the actual implementations, i.e. wrapping the `WebSessionStore` in `WebSessionManager` and the `WebSession` that that returns. This would allow intercepting create and retrieve on `WebSessionStore`, and `save` and `invalidate` on `WebSession`. I'll turn this into a feature request, but an application could do the same in the mean time.\r\n\r\nFor maxSessions, that's implementation specific but could be tracked by checking for errors from `save.\r\n\r\nFor maxIdleTime, which is also implementation specific, there isn't any good way to detect that. You can get the map of all sessions and for each check if it is expired but that's not ideal. It might require exposing a `WebSession` callback that notifies when a session is detected to be expired.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108293929/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21447690519,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T08:14:06Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28155', 'id': 1165292959, 'node_id': 'I_kwDOABGHUc5FdPWf', 'number': 28155, 'title': 'Request body deserialization failures are not captured by exception handlers in WebFlux', 'user': {'login': 'vy', 'id': 72137, 'node_id': 'MDQ6VXNlcjcyMTM3', 'avatar_url': 'https://avatars.githubusercontent.com/u/72137?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vy', 'html_url': 'https://github.com/vy', 'followers_url': 'https://api.github.com/users/vy/followers', 'following_url': 'https://api.github.com/users/vy/following{/other_user}', 'gists_url': 'https://api.github.com/users/vy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vy/subscriptions', 'organizations_url': 'https://api.github.com/users/vy/orgs', 'repos_url': 'https://api.github.com/users/vy/repos', 'events_url': 'https://api.github.com/users/vy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vy/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-10T14:24:06Z', 'updated_at': '2022-04-25T08:14:05Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects** versions from 5.3.15 to 6.0.0-20220310.112646-346. I have only tested it with these two versions, but I suspect the problem to exist in all 5.x versions.\r\n\r\n---\r\n<!--\r\nThanks for taking the time to create an issue. Please read the following:\r\n\r\n- Questions should be asked on Stack Overflow.\r\n- For bugs, specify affected versions and explain what you are trying to do.\r\n- For enhancements, provide context and describe the problem.\r\n\r\nIssue or Pull Request? Create only one, not both. GitHub treats them as the same.\r\nIf unsure, start with an issue, and if you submit a pull request later, the\r\nissue will be closed as superseded.\r\n-->\r\nWhen a `@RequestBody`-annotated argument fails to get resolved due to the an exception thrown in the constructor of the argument class, `@ExceptionHandler`s in `@RestControllerAdvice`s are not taken into account in WebFlux, whereas it works as expected in WebMVC.\r\n\r\nBelow, `CustomWebFluxTest.test()` fails, whereas `CustomWebMvcTest.test()` succeeds.\r\n\r\n```java\r\nimport com.fasterxml.jackson.annotation.JsonCreator;\r\nimport org.junit.jupiter.api.Nested;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.autoconfigure.EnableAutoConfiguration;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.boot.test.web.client.TestRestTemplate;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.Import;\r\nimport org.springframework.http.*;\r\nimport org.springframework.test.context.ContextConfiguration;\r\nimport org.springframework.test.web.reactive.server.WebTestClient;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.reactive.function.BodyInserters;\r\n\r\nimport java.util.Collections;\r\n\r\nimport static org.assertj.core.api.Assertions.assertThat;\r\n\r\npublic class CtorFailureTest {\r\n\r\n    @Nested\r\n    @SpringBootTest(\r\n            webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,\r\n            properties = {""spring.main.web-application-type=reactive""},\r\n            classes = {CustomConfiguration.class})\r\n    @ContextConfiguration(classes = CustomConfiguration.class)\r\n    class CustomWebFluxTest {\r\n\r\n        @Autowired\r\n        WebTestClient webTestClient;\r\n\r\n        @Test\r\n        void test() {\r\n            webTestClient\r\n                    .post()\r\n                    .uri(""/custom"")\r\n                    .contentType(MediaType.APPLICATION_JSON)\r\n                    .body(BodyInserters.fromValue(""{}""))\r\n                    .exchange()\r\n                    .expectStatus()\r\n                    .isEqualTo(HttpStatus.UNPROCESSABLE_ENTITY);\r\n        }\r\n\r\n    }\r\n\r\n    @Nested\r\n    @SpringBootTest(\r\n            webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,\r\n            classes = {CustomConfiguration.class})\r\n    class CustomWebMvcTest {\r\n\r\n        @Autowired\r\n        private TestRestTemplate restTemplate;\r\n\r\n        @Test\r\n        void test() {\r\n            HttpHeaders requestHeaders = new HttpHeaders();\r\n            requestHeaders.put(HttpHeaders.CONTENT_TYPE, Collections.singletonList(MediaType.APPLICATION_JSON_VALUE));\r\n            HttpEntity<String> requestEntity = new HttpEntity<>(""{}"", requestHeaders);\r\n            ResponseEntity<Void> responseEntity = restTemplate.exchange(""/custom"", HttpMethod.POST, requestEntity, Void.class);\r\n            assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.UNPROCESSABLE_ENTITY);\r\n        }\r\n\r\n    }\r\n\r\n    @Configuration\r\n    @EnableAutoConfiguration\r\n    @Import({CustomController.class, CustomAdvice.class})\r\n    static class CustomConfiguration {}\r\n\r\n    static final class CustomException extends RuntimeException {}\r\n\r\n    static final class CustomModel {\r\n\r\n        @JsonCreator\r\n        public CustomModel() {\r\n            throw new CustomException();\r\n        }\r\n\r\n    }\r\n\r\n    @RestController\r\n    static class CustomController {\r\n\r\n        @PostMapping(\r\n                path = ""/custom"",\r\n                consumes = {MediaType.APPLICATION_JSON_VALUE},\r\n                produces = {MediaType.APPLICATION_JSON_VALUE})\r\n        @ResponseStatus(HttpStatus.ACCEPTED)\r\n        void customResource(@RequestBody CustomModel ignored) {}\r\n\r\n    }\r\n\r\n    @RestControllerAdvice\r\n    static class CustomAdvice {\r\n\r\n        @ExceptionHandler\r\n        @ResponseStatus(HttpStatus.UNPROCESSABLE_ENTITY)\r\n        public void customHandler(CustomException ignored) {}\r\n\r\n    }\r\n\r\n}\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108228916', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28155#issuecomment-1108228916', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28155', 'id': 1108228916, 'node_id': 'IC_kwDOABGHUc5CDjs0', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T08:14:05Z', 'updated_at': '2022-04-25T08:14:05Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for the sample code. `CustomException` is a nested cause, more than a couple of levels deep. On the Spring MVC we unwrap all causes and provide those to the exception handler method. On the WebFlux side we only pass the first cause. It looks like we need to apply this change b587a16d460ad10a98874796c389b933ff85e457 on the WebFlux side too.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108228916/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21447630373,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T08:11:00Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830/events', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/27830', 'id': 1082980534, 'node_id': 'PR_kwDOABGHUc4v_Twv', 'number': 27830, 'title': 'Replace MockMultipartFile with MockStandardMultipartFile to avoid conversion error', 'user': {'login': 'binchoo', 'id': 15683098, 'node_id': 'MDQ6VXNlcjE1NjgzMDk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/15683098?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/binchoo', 'html_url': 'https://github.com/binchoo', 'followers_url': 'https://api.github.com/users/binchoo/followers', 'following_url': 'https://api.github.com/users/binchoo/following{/other_user}', 'gists_url': 'https://api.github.com/users/binchoo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/binchoo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/binchoo/subscriptions', 'organizations_url': 'https://api.github.com/users/binchoo/orgs', 'repos_url': 'https://api.github.com/users/binchoo/repos', 'events_url': 'https://api.github.com/users/binchoo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/binchoo/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2021-12-17T07:50:28Z', 'updated_at': '2022-04-25T08:10:59Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/27830', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/27830', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/27830.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/27830.patch', 'merged_at': None}, 'body': 'When a controller obtains files from multipart requests,\r\nthere is an inconsistency when `jakarta.servlet.http.Part` type is an attribute of an object or an argument of a handler method.\r\n\r\nIf a method has an object argument, and expects files to be saved to attributes of that argument, the attribute type should not be `Part`, but it would rather be `MultipartFile`.\r\n\r\nThis is because `StandardMultipartHttpServletRequest` wraps its `Part`s, whose filename exists, with `StandardMultipartFile`.\r\n`StandardMultipartFile` is an private class that implements `MultipartFile` class. So `Part` type attributes generate conversion errors.\r\n\r\nIn contrast, if the method has an argument type of `Part`, it can normally receive multipart files from the framework.\r\n\r\nMy idea is simply modifying `StandardMultipartFile` class to implement both `MultipartFile` and `Part`, so preventing conversion issues. Likewise I added new `MockStandardMultipartFile` class that replaces `MockMultipartFile` class. \r\n\r\n**Issues:** https://github.com/spring-projects/spring-framework/issues/27819 \r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108224880', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/27830#issuecomment-1108224880', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27830', 'id': 1108224880, 'node_id': 'IC_kwDOABGHUc5CDitw', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T08:10:59Z', 'updated_at': '2022-04-25T08:10:59Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for elaborating.\r\n\r\nWe do support `Part` for data binding, but only in fallback mode, when there is no `MultipartResolver` (this is in `ServletRequestDataBinder`). If you don't want to use `MultipartFile` you need to make sure that a `MultipartResolver` is not declared. \r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108224880/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21447559711,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-25T08:07:14Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28027', 'id': 1130001545, 'node_id': 'I_kwDOABGHUc5DWnSJ', 'number': 28027, 'title': 'Improve Logging for Sockettimeouts on Outgoing Flux', 'user': {'login': 'Richie94', 'id': 7793923, 'node_id': 'MDQ6VXNlcjc3OTM5MjM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7793923?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Richie94', 'html_url': 'https://github.com/Richie94', 'followers_url': 'https://api.github.com/users/Richie94/followers', 'following_url': 'https://api.github.com/users/Richie94/following{/other_user}', 'gists_url': 'https://api.github.com/users/Richie94/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Richie94/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Richie94/subscriptions', 'organizations_url': 'https://api.github.com/users/Richie94/orgs', 'repos_url': 'https://api.github.com/users/Richie94/repos', 'events_url': 'https://api.github.com/users/Richie94/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Richie94/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 4, 'created_at': '2022-02-10T12:42:24Z', 'updated_at': '2022-04-25T08:07:14Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We had a big fight finding a problem of Connection Prematurely Closed. We had a Producer which provided a Flux and the consumer was quite slow. After 60s the Flux showed a cancel event, because internally it got a SocketTimeout Exception which was not shown in info/warn log. \r\nFix for us in this case was to increase the connection-timeout. To find that our producer had an internal timeout issue was quite hard, so I would propose to be more verbose on SocketTimeouts on supplied Flux streams.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108220177', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28027#issuecomment-1108220177', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28027', 'id': 1108220177, 'node_id': 'IC_kwDOABGHUc5CDhkR', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T08:07:14Z', 'updated_at': '2022-04-25T08:07:14Z', 'author_association': 'CONTRIBUTOR', 'body': ""The overall scenario is more clear now. On Servlet containers in WebFlux, however, we call `AsyncContext.setTimeout(-1)`, i.e. the socket should never time out. So it's not clear what's causing the connection to close and that makes it challenging to think about where to add logging.\r\n\r\nHave you tried putting log statements in a `WebFilter` to determine what leads to the connection getting closed? If you are able to provide something that simulates the issue, we can also also take a look.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1108220177/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21445849345,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-25T06:12:01Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/354', 'id': 1206365776, 'node_id': 'I_kwDOEMJUCs5H565Q', 'number': 354, 'title': 'Update @ContextValue resolver to fail if value present in both local and main contexts', 'user': {'login': 'andimarek', 'id': 1706744, 'node_id': 'MDQ6VXNlcjE3MDY3NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1706744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andimarek', 'html_url': 'https://github.com/andimarek', 'followers_url': 'https://api.github.com/users/andimarek/followers', 'following_url': 'https://api.github.com/users/andimarek/following{/other_user}', 'gists_url': 'https://api.github.com/users/andimarek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andimarek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andimarek/subscriptions', 'organizations_url': 'https://api.github.com/users/andimarek/orgs', 'repos_url': 'https://api.github.com/users/andimarek/repos', 'events_url': 'https://api.github.com/users/andimarek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andimarek/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/9', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/9', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/9/labels', 'id': 7591976, 'node_id': 'MI_kwDOEMJUCs4Ac9go', 'number': 9, 'title': '1.0.0', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 2, 'state': 'open', 'created_at': '2022-01-20T08:37:10Z', 'updated_at': '2022-04-25T06:10:04Z', 'due_on': '2022-05-17T07:00:00Z', 'closed_at': None}, 'comments': 3, 'created_at': '2022-04-17T12:45:16Z', 'updated_at': '2022-04-25T06:12:01Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I am not really convinced that having the ContextValue annotation logic inspecting localContext and then graphqlContext is a good thing.\r\n\r\nI expect that the use cases for local context usage are different from using graphqlContext, which means mixing them both up is probably not the best solution.\r\n\r\nBut I am open to get convinced otherwise. :-) ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1108116918', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/354#issuecomment-1108116918', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354', 'id': 1108116918, 'node_id': 'IC_kwDOEMJUCs5CDIW2', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-25T06:12:01Z', 'updated_at': '2022-04-25T06:12:01Z', 'author_association': 'CONTRIBUTOR', 'body': '> if there are two values with the same value in both contexts\r\n\r\nI presume you mean ""with the same **name** in both contexts', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1108116918/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21394165876,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-21T09:57:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/343', 'id': 1184616029, 'node_id': 'I_kwDOEMJUCs5Gm85d', 'number': 343, 'title': ""Can't use Spring Security annotation when injecting DataLoader and returning a CompletableFuture"", 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/3', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3/labels', 'id': 6777656, 'node_id': 'MDk6TWlsZXN0b25lNjc3NzY1Ng==', 'number': 3, 'title': '1.0 Backlog', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 9, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-05-20T14:45:21Z', 'updated_at': '2022-04-19T07:54:14Z', 'due_on': None, 'closed_at': None}, 'comments': 3, 'created_at': '2022-03-29T10:00:11Z', 'updated_at': '2022-04-21T09:57:23Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I\'m having trouble combining DataLoaders with Spring Security;\r\n\r\nMy scenario; \r\n\r\n```kotlin\r\ntypealias MerchantDataLoader = DataLoader<UUID, Merchant?>\r\n\r\n// MerchantDataLoader\r\nregistry.forTypePair(UUID::class.java, Merchant::class.java).registerMappedBatchLoader { merchantIds, _ ->\r\n    Mono.just(merchantService.getMerchants(merchantIds).associateBy { it.id })\r\n}\r\n\r\n// ...\r\n\r\n@SchemaMapping\r\n@PreAuthorize(""@permissionEvaluator.hasPermission(authentication, #merchant.id, \'Merchant\', \'read\')"")\r\nfun dashboardForDate(\r\n    merchant: Merchant,\r\n    @Argument date: LocalDate?,\r\n    merchantLoader: MerchantDataLoader\r\n): CompletableFuture<Dashboard> = merchantLoader.load(merchant.id).thenApply {\r\n    if (it == null) throw EntityNotFoundException()\r\n    Dashboard(date, it)\r\n}\r\n```\r\n\r\nFor GraphQL Java being able to dispatch the dataloader the method [has to return the `CompletableFuture`](https://www.graphql-java.com/documentation/batching#async-calls-on-your-batch-loader-function-only), but for the `@PreAuthorize` annotation it ""must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) or the function must be a Kotlin coroutine function"".\r\n\r\nI\'ve also tried making it a `suspend fun`, while still returning the `CompletableFuture`, but then I get an error like `does not match the type of the source Object \'class java.util.concurrent.CompletableFuture\'`, which makes sense because my controller is not expecting the `CompletableFuture`.\r\n\r\nIs my assumption correct, or is there a way around this that I don\'t know about?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1104988268', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/343#issuecomment-1104988268', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343', 'id': 1104988268, 'node_id': 'IC_kwDOEMJUCs5B3Mhs', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-21T09:57:23Z', 'updated_at': '2022-04-21T09:57:23Z', 'author_association': 'CONTRIBUTOR', 'body': '> So returning a mono is supposed to work for dataloaders?\r\n\r\nYes that should work. `Mono` and `Flux` are supported as return values for any `DataFetcher` with context propagation, through `ContextDataFetcherDecorator`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1104988268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21358817743,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T16:37:49Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/354', 'id': 1206365776, 'node_id': 'I_kwDOEMJUCs5H565Q', 'number': 354, 'title': 'ContextValue logic', 'user': {'login': 'andimarek', 'id': 1706744, 'node_id': 'MDQ6VXNlcjE3MDY3NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1706744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andimarek', 'html_url': 'https://github.com/andimarek', 'followers_url': 'https://api.github.com/users/andimarek/followers', 'following_url': 'https://api.github.com/users/andimarek/following{/other_user}', 'gists_url': 'https://api.github.com/users/andimarek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andimarek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andimarek/subscriptions', 'organizations_url': 'https://api.github.com/users/andimarek/orgs', 'repos_url': 'https://api.github.com/users/andimarek/repos', 'events_url': 'https://api.github.com/users/andimarek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andimarek/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-04-17T12:45:16Z', 'updated_at': '2022-04-19T16:37:49Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I am not really convinced that having the ContextValue annotation logic inspecting localContext and then graphqlContext is a good thing.\r\n\r\nI expect that the use cases for local context usage are different from using graphqlContext, which means mixing them both up is probably not the best solution.\r\n\r\nBut I am open to get convinced otherwise. :-) ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102861260', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/354#issuecomment-1102861260', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/354', 'id': 1102861260, 'node_id': 'IC_kwDOEMJUCs5BvFPM', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T16:37:49Z', 'updated_at': '2022-04-19T16:37:49Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for the comment.\r\n\r\nThe annotation is purely about accessing a value, so the idea is it should just work out based on its presence. Now that you mention it, I can see some room for improvements to avoid the potential for ambiguity.\r\n\r\nWe could for example always check for a match in both contexts. If present in both, check if one is a better match based on the expected method parameter type. If ambiguity remains, with two equally matching candidate values, raise an error.\r\n\r\nIt's possible that it might be in one context only but happens to come from the one you did not expect. Not sure that is a plausible concern or not, given that the value is accessed by name. We could add `local` and `global` attributes on the annotation for cases where it might be helpful to pin it to a specific context but probably best for see if it is actually needed.\r\n\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102861260/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21358021833,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T15:55:24Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312', 'id': 1155370282, 'node_id': 'I_kwDOEMJUCs5E3Y0q', 'number': 312, 'title': 'Refactor GraphQlSource builder to separate programmatic vs SDL way of create GraphQLSchema', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 0, 'closed_issues': 10, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-19T15:28:11Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 6, 'created_at': '2022-03-01T13:56:46Z', 'updated_at': '2022-04-19T15:55:23Z', 'closed_at': '2022-04-19T14:14:15Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We would like to be able to define the schema programmatically instead of through an SDL file.\r\nIn our first attempt we have used a GraphQlSourceBuilderCustomizer and used the schemaFactory method, but we noticed that the DefaultTypeResolver is not registered correctly and it is necessary to have an SDL file even if it is empty.\r\n\r\nCould you consider adding a method to the DefaultGraphQlSourceBuilder that would allow to directly insert a GraphQLSchema?\r\n\r\nMany thanks & regards,\r\nRubén', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102820351', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312#issuecomment-1102820351', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'id': 1102820351, 'node_id': 'IC_kwDOEMJUCs5Bu7P_', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T15:55:23Z', 'updated_at': '2022-04-19T15:55:23Z', 'author_association': 'CONTRIBUTOR', 'body': ""@ruben-garciapariente I've made a few changes as follows.\r\n\r\nFirstly, refactored the `GraphQlSource` builder a little bit, to create a base `Builder` with common options, irrespective of how `GraphQLSchema` is created, along with a sub-builder that assists with the SDL way, and an additional static factory `builder` method that accepts an externally built `GraphQLSchema` instance. \r\n\r\nAlong with that I added an extra method to `AnnotatedControllerConfigurer` that accepts a `GraphQLCodeRegistry.Bulider` to which to apply the registrations. Hopefully this changes will be helpful. Do let us know how it works out."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102820351/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21357915560,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T15:50:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/268', 'id': 1112665247, 'node_id': 'I_kwDOEMJUCs5CUeyf', 'number': 268, 'title': 'Secure websocket endpoint', 'user': {'login': 'fschmuck', 'id': 89831957, 'node_id': 'MDQ6VXNlcjg5ODMxOTU3', 'avatar_url': 'https://avatars.githubusercontent.com/u/89831957?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/fschmuck', 'html_url': 'https://github.com/fschmuck', 'followers_url': 'https://api.github.com/users/fschmuck/followers', 'following_url': 'https://api.github.com/users/fschmuck/following{/other_user}', 'gists_url': 'https://api.github.com/users/fschmuck/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/fschmuck/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/fschmuck/subscriptions', 'organizations_url': 'https://api.github.com/users/fschmuck/orgs', 'repos_url': 'https://api.github.com/users/fschmuck/repos', 'events_url': 'https://api.github.com/users/fschmuck/events{/privacy}', 'received_events_url': 'https://api.github.com/users/fschmuck/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 4, 'created_at': '2022-01-24T13:40:50Z', 'updated_at': '2022-04-19T15:50:02Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'I implemented my spring-graphql application according to the samples in the repository. The client is a apollo-angular application which receives the jwt from a separate keycloak server. When the client establishes the websocket connection, it sends the jwt in the payload of the connect_init message as described in the graphql-ws documentation.\r\n```\r\nINIT MESSAGE FROM APOLLO CLIENT: `{""type"":""connection_init"",""payload"":{""Authorization"":""Bearer <VALID_TOKEN>""}}`\r\nACK MESSAGE: `{""type"":""connection_ack"",""payload"":{}}`\r\nSUBSCRIBE: `{""id"":""06b0c701-bf03-4630-a32e-6e3b4da513df"",""type"":""subscribe"", <GRAPHQL_SUBSCRIPTION>}`\r\nERROR: `{""type"":""error"",""payload"":[{""message"":""An Authentication object was not found in the SecurityContext"",""locations"":[],""extensions"":{""classification"":""DataFetchingException""}}],""id"":""<ID>""}`\r\n```\r\nThe subscription method in the controller is annotated with `@PreAuthorize(""isAuthenticated()"")`.\r\nI use **spring-boot-starter-oauth2-resource-server** to validate the jwt against the keyset of the keycloak server.\r\n\r\nI do not understand how to validate this jwt and populate the SecurityContext with data. Every sample out there seems to use STOMP endpoints.\r\nCould somebody explain to me how to handle this properly?\r\n\r\nThank you', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102814897', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/268#issuecomment-1102814897', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/268', 'id': 1102814897, 'node_id': 'IC_kwDOEMJUCs5Bu56x', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T15:50:02Z', 'updated_at': '2022-04-19T15:50:02Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks @fernanfs for elaborating and apologies for the confusion. I had misread the original report, not realizing it\'s about authentication through the ""connection_init"" message payload, which is not something we support at the moment.\r\n\r\nAs an initial step, I\'ve updated methods on `WebSocketGraphQlInterceptor` to have a `WebSocketSessionInfo` argument instead of the WebSocketSession id. Likewise, the `intercept` method can access the same by downcasting the request to `WebSocketGraphQlRequest`. \r\n\r\nThis allows you to correlate the session between the initial `handleConnectionInitialization` and subsequent `intercept` methods for each request on the session, and you can also store data via `WebSocketSession#getAttributes`. This should make it possible to complete the experiment you described above.\r\n\r\nI realize we need to support this as a first class option though, by providing a GraphQL over WebSocket interceptor for Spring Security. I\'ll schedule to explore that possibility for 1.0.\r\n\r\n\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102814897/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21355837457,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T14:14:16Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312', 'id': 1155370282, 'node_id': 'I_kwDOEMJUCs5E3Y0q', 'number': 312, 'title': 'Refactor GraphQlSource builder to separate programmatic vs SDL way of create GraphQLSchema', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 10, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-19T14:14:15Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 5, 'created_at': '2022-03-01T13:56:46Z', 'updated_at': '2022-04-19T14:14:15Z', 'closed_at': '2022-04-19T14:14:15Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We would like to be able to define the schema programmatically instead of through an SDL file.\r\nIn our first attempt we have used a GraphQlSourceBuilderCustomizer and used the schemaFactory method, but we noticed that the DefaultTypeResolver is not registered correctly and it is necessary to have an SDL file even if it is empty.\r\n\r\nCould you consider adding a method to the DefaultGraphQlSourceBuilder that would allow to directly insert a GraphQLSchema?\r\n\r\nMany thanks & regards,\r\nRubén', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/timeline', 'performed_via_github_app': None}}",closed,Java
21355837729,PushEvent,spring-projects/spring-graphql,0.0,2022-04-19T14:14:16Z,"{'push_id': 9662477256, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': 'fdf7ce8062ea44ef77593a1540c9c3b05e06a0bd', 'before': 'c55ffb17c37dc5ee7c591886000bcfdb9e7f5fa4', 'commits': [{'sha': 'fdf7ce8062ea44ef77593a1540c9c3b05e06a0bd', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Option to register data fetchers on GraphQLCodeRegistry\n\nCloses gh-312', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/fdf7ce8062ea44ef77593a1540c9c3b05e06a0bd'}]}",,Java
21355332814,PushEvent,spring-projects/spring-graphql,0.0,2022-04-19T13:52:00Z,"{'push_id': 9662238248, 'size': 2, 'distinct_size': 2, 'ref': 'refs/heads/main', 'head': 'c55ffb17c37dc5ee7c591886000bcfdb9e7f5fa4', 'before': 'ddb740898ec37e40d5299ab3b802b2a2d8eb50a4', 'commits': [{'sha': '54d061b218abff0b45a493c564c09eb289439075', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Extract base GraphQlSource builder\n\nSeparate more clearly the SDL builder options from other common options\nindependent of how GraphQLSchema is created.\n\nSee gh-312', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/54d061b218abff0b45a493c564c09eb289439075'}, {'sha': 'c55ffb17c37dc5ee7c591886000bcfdb9e7f5fa4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Temporarily disable samples', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/c55ffb17c37dc5ee7c591886000bcfdb9e7f5fa4'}]}",,Java
21348644719,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:58:23Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283', 'id': 1128804495, 'node_id': 'I_kwDOEMJUCs5DSDCP', 'number': 283, 'title': 'Handling NonNullableFieldWasNullException in GraphQlWebSocketHandler', 'user': {'login': 'oliviercoma', 'id': 4144376, 'node_id': 'MDQ6VXNlcjQxNDQzNzY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4144376?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oliviercoma', 'html_url': 'https://github.com/oliviercoma', 'followers_url': 'https://api.github.com/users/oliviercoma/followers', 'following_url': 'https://api.github.com/users/oliviercoma/following{/other_user}', 'gists_url': 'https://api.github.com/users/oliviercoma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oliviercoma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oliviercoma/subscriptions', 'organizations_url': 'https://api.github.com/users/oliviercoma/orgs', 'repos_url': 'https://api.github.com/users/oliviercoma/repos', 'events_url': 'https://api.github.com/users/oliviercoma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oliviercoma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 7, 'created_at': '2022-02-09T17:05:42Z', 'updated_at': '2022-04-19T07:58:23Z', 'closed_at': '2022-04-19T07:58:23Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello,\r\n\r\nThe exception NonNullableFieldWasNullException appears to be special and does not invoke the DataFetcherExceptionHandler. As a result, the exception is caught in the \'onErrorResume\' method of the handleWebOutput method.\r\n\r\nWhile the NonNullableFieldWasNullException is hierarchical (nested graphql object path create multiple inner causes), its handling is very basic and only displays the message of the root which is not useful. (e.g. ""The field at path \'/a\' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is \'APayload\' within parent type \'Subscription\'"")\r\nThe actual error might be that /a/b/c/d/e[10]/f is null.\r\n\r\nDebugging the real issue is thus not easy. It would be good to handle it by interpreting the hierarchy so that error returned to the client is useful.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/timeline', 'performed_via_github_app': None}}",closed,Java
21348644661,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:58:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283', 'id': 1128804495, 'node_id': 'I_kwDOEMJUCs5DSDCP', 'number': 283, 'title': 'Handling NonNullableFieldWasNullException in GraphQlWebSocketHandler', 'user': {'login': 'oliviercoma', 'id': 4144376, 'node_id': 'MDQ6VXNlcjQxNDQzNzY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4144376?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oliviercoma', 'html_url': 'https://github.com/oliviercoma', 'followers_url': 'https://api.github.com/users/oliviercoma/followers', 'following_url': 'https://api.github.com/users/oliviercoma/following{/other_user}', 'gists_url': 'https://api.github.com/users/oliviercoma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oliviercoma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oliviercoma/subscriptions', 'organizations_url': 'https://api.github.com/users/oliviercoma/orgs', 'repos_url': 'https://api.github.com/users/oliviercoma/repos', 'events_url': 'https://api.github.com/users/oliviercoma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oliviercoma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 7, 'created_at': '2022-02-09T17:05:42Z', 'updated_at': '2022-04-19T07:58:23Z', 'closed_at': '2022-04-19T07:58:23Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello,\r\n\r\nThe exception NonNullableFieldWasNullException appears to be special and does not invoke the DataFetcherExceptionHandler. As a result, the exception is caught in the \'onErrorResume\' method of the handleWebOutput method.\r\n\r\nWhile the NonNullableFieldWasNullException is hierarchical (nested graphql object path create multiple inner causes), its handling is very basic and only displays the message of the root which is not useful. (e.g. ""The field at path \'/a\' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is \'APayload\' within parent type \'Subscription\'"")\r\nThe actual error might be that /a/b/c/d/e[10]/f is null.\r\n\r\nDebugging the real issue is thus not easy. It would be good to handle it by interpreting the hierarchy so that error returned to the client is useful.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102239748', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283#issuecomment-1102239748', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'id': 1102239748, 'node_id': 'IC_kwDOEMJUCs5BstgE', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:58:23Z', 'updated_at': '2022-04-19T07:58:23Z', 'author_association': 'CONTRIBUTOR', 'body': 'Closing for now but feel free to comment.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102239748/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348634890,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:57:51Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283', 'id': 1128804495, 'node_id': 'I_kwDOEMJUCs5DSDCP', 'number': 283, 'title': 'Handling NonNullableFieldWasNullException in GraphQlWebSocketHandler', 'user': {'login': 'oliviercoma', 'id': 4144376, 'node_id': 'MDQ6VXNlcjQxNDQzNzY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4144376?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oliviercoma', 'html_url': 'https://github.com/oliviercoma', 'followers_url': 'https://api.github.com/users/oliviercoma/followers', 'following_url': 'https://api.github.com/users/oliviercoma/following{/other_user}', 'gists_url': 'https://api.github.com/users/oliviercoma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oliviercoma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oliviercoma/subscriptions', 'organizations_url': 'https://api.github.com/users/oliviercoma/orgs', 'repos_url': 'https://api.github.com/users/oliviercoma/repos', 'events_url': 'https://api.github.com/users/oliviercoma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oliviercoma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 6, 'created_at': '2022-02-09T17:05:42Z', 'updated_at': '2022-04-19T07:57:51Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello,\r\n\r\nThe exception NonNullableFieldWasNullException appears to be special and does not invoke the DataFetcherExceptionHandler. As a result, the exception is caught in the \'onErrorResume\' method of the handleWebOutput method.\r\n\r\nWhile the NonNullableFieldWasNullException is hierarchical (nested graphql object path create multiple inner causes), its handling is very basic and only displays the message of the root which is not useful. (e.g. ""The field at path \'/a\' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is \'APayload\' within parent type \'Subscription\'"")\r\nThe actual error might be that /a/b/c/d/e[10]/f is null.\r\n\r\nDebugging the real issue is thus not easy. It would be good to handle it by interpreting the hierarchy so that error returned to the client is useful.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102238997', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283#issuecomment-1102238997', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'id': 1102238997, 'node_id': 'IC_kwDOEMJUCs5BstUV', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:57:50Z', 'updated_at': '2022-04-19T07:57:50Z', 'author_association': 'CONTRIBUTOR', 'body': 'I wrote the following test based on the above snippets:\r\n```java\r\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\r\npublic class WebFluxWebSocketSampleIntegrationTests {\r\n\r\n\t@LocalServerPort\r\n\tprivate int port;\r\n\r\n\t@Value(""http://localhost:${local.server.port}${spring.graphql.websocket.path}"")\r\n\tprivate String baseUrl;\r\n\r\n\tprivate GraphQlTester graphQlTester;\r\n\r\n\t@Test\r\n\tvoid webSocketTest() throws InterruptedException {\r\n\t\tURI url = URI.create(baseUrl);\r\n\t\tWebSocketGraphQlClient client = WebSocketGraphQlClient.builder(url, new ReactorNettyWebSocketClient()).build();\r\n\r\n\t\tFlux<ClientGraphQlResponse> flux1 = client.document(""subscription a { a { b { c } } }"").executeSubscription();\r\n\t\tFlux<ClientGraphQlResponse> flux2 = client.document(""subscription b { b { c } }"").executeSubscription();\r\n\r\n\t\tCountDownLatch done = new CountDownLatch(2);\r\n\r\n\t\tflux1.subscribe(response -> System.out.println(response.toMap()), Throwable::printStackTrace, done::countDown);\r\n\t\tflux2.subscribe(response -> System.out.println(response.toMap()), Throwable::printStackTrace, done::countDown);\r\n\r\n\t\tdone.await();\r\n\t}\r\n}\r\n```\r\nThe output shows the second subscription continues:\r\n```\r\n{data={b={c=0}}}\r\n{data={b={c=1}}}\r\n{data={b={c=2}}}\r\n{data={b={c=3}}}\r\n{data={b={c=4}}}\r\norg.springframework.graphql.client.SubscriptionErrorException: GraphQL subscription completed with an ""error"" message, with the following errors: [{message=The field at path \'/a\' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is \'A\' within parent type \'Subscription\', locations=[], extensions={classification=DataFetchingException}}]\r\n\tat org.springframework.graphql.client.WebSocketGraphQlTransport$GraphQlSession.handleError(WebSocketGraphQlTransport.java:520)\r\n\t...\r\n{data={b={c=5}}}\r\n{data={b={c=6}}}\r\n{data={b={c=7}}}\r\n```\r\nI\'m not sure if we improved something, or something in how you consume the session on the client side, but I don\'t think the session is getting closed. \r\n\r\nAs for the original question about improving the message of `NonNullableFieldWasNullException`, that seems a reasonable suggestion to me, and it might be quite feasible, but the right place to ask would be in [GraphQL Java](https://github.com/graphql-java/graphql-java).\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102238997/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348626308,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:57:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/287', 'id': 1138518900, 'node_id': 'I_kwDOEMJUCs5D3Gt0', 'number': 287, 'title': 'Support @SchemaMapping + @BatchMapping on a class when looking for handlers along with @Controller', 'user': {'login': 'geliotropvimd', 'id': 71876447, 'node_id': 'MDQ6VXNlcjcxODc2NDQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/71876447?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/geliotropvimd', 'html_url': 'https://github.com/geliotropvimd', 'followers_url': 'https://api.github.com/users/geliotropvimd/followers', 'following_url': 'https://api.github.com/users/geliotropvimd/following{/other_user}', 'gists_url': 'https://api.github.com/users/geliotropvimd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/geliotropvimd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/geliotropvimd/subscriptions', 'organizations_url': 'https://api.github.com/users/geliotropvimd/orgs', 'repos_url': 'https://api.github.com/users/geliotropvimd/repos', 'events_url': 'https://api.github.com/users/geliotropvimd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/geliotropvimd/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-02-15T10:54:35Z', 'updated_at': '2022-04-19T07:57:23Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'In this project, we have separated the processes of creating objects and mapping requests. We create objects through Kotlin DSL. ```@Controller``` breaks context startup.\r\n\r\nNeed like this\r\n```\r\n@SchemaMapping\r\nclass TestRes(\r\n    private val testService: TestService,\r\n    private val url: String,\r\n) {\r\n   @QueryMapping\r\n    suspend fun test(): Test= Test(100, ""100500"")\r\n}\r\n```\r\nBut now we have to use workaround\r\n```\r\n@Controller\r\ninterface ControllerMarker\r\n\r\n@SchemaMapping\r\nclass TestRes(\r\n    private val testService: TestService,\r\n    private val url: String,\r\n): ControllerMarker {\r\n   @QueryMapping\r\n    suspend fun test(): Test= Test(100, ""100500"")\r\n}\r\n```\r\n\r\nYou need the ability to do the same as in the analogy with RSocket.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102238386', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/287#issuecomment-1102238386', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/287', 'id': 1102238386, 'node_id': 'IC_kwDOEMJUCs5BstKy', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:57:23Z', 'updated_at': '2022-04-19T07:57:23Z', 'author_association': 'CONTRIBUTOR', 'body': '> `@Controller` is composing 2 different concepts: bean registration AND request handling metadata.\r\n\r\nYes but bean registration via component scanning is entirely optional. Especially for you situation, consider customizing it to select what packages to scan or turning it off in favor of explicit `@Bean` methods only. \r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102238386/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348599066,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:55:52Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/294', 'id': 1143297750, 'node_id': 'I_kwDOEMJUCs5EJVbW', 'number': 294, 'title': 'Support for @SchemaMapping and @BatchMapping based off interface type ', 'user': {'login': 'francis-a', 'id': 19387447, 'node_id': 'MDQ6VXNlcjE5Mzg3NDQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/19387447?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/francis-a', 'html_url': 'https://github.com/francis-a', 'followers_url': 'https://api.github.com/users/francis-a/followers', 'following_url': 'https://api.github.com/users/francis-a/following{/other_user}', 'gists_url': 'https://api.github.com/users/francis-a/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/francis-a/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/francis-a/subscriptions', 'organizations_url': 'https://api.github.com/users/francis-a/orgs', 'repos_url': 'https://api.github.com/users/francis-a/repos', 'events_url': 'https://api.github.com/users/francis-a/events{/privacy}', 'received_events_url': 'https://api.github.com/users/francis-a/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-02-18T15:50:39Z', 'updated_at': '2022-04-19T07:55:52Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'I\'m having a hard time registering a `@SchemaMapping` function that should be used as a data fetcher for all subclasses for an interface. \r\n\r\nGiven the example schema:\r\n\r\n```\r\ninterface User {\r\n    username: String!\r\n    color: String!\r\n}\r\n\r\ntype PurpleUser implements User {\r\n    username: String!\r\n    color: String!\r\n}\r\n\r\ntype GreenUser implements User {\r\n    username: String!\r\n    color: String!\r\n}\r\n\r\ntype Query {\r\n    userGet(username: String): User\r\n}\r\n```\r\n\r\nAnd the following Kotlin model:\r\n\r\n```\r\ninterface User {\r\n    val username: String\r\n}\r\ndata class PurpleUser(override val username: String) : User\r\ndata class GreenUser(override val username: String) : User\r\n```\r\n\r\nMy expectation is that by defining a schema mapping for the `User` interface I would be able to register a data fetcher for the `color` field on all `User` subclasses.\r\n\r\n```\r\n  @SchemaMapping(typeName = ""User"", field = ""color"")\r\n    fun mapColor(user: User): String {\r\n        return when(user.username) {\r\n            ""purpleUser"" -> ""purple""\r\n            ""greenUser"" -> ""green""\r\n            else -> throw RuntimeException()\r\n        }\r\n    }\r\n```\r\n\r\nHowever in this example the following query:\r\n\r\n```\r\n{\r\n  userGet(username: ""green"") {\r\n    username\r\n    color\r\n  }\r\n}\r\n```\r\n\r\nResults in an exception. \r\n\r\n```\r\n{\r\n  ""errors"": [\r\n    {\r\n      ""message"": ""The field at path \'/userGet/color\' was declared as a non null type\r\n....\r\n```\r\n\r\nRegistering a `@SchemaMapping` for both concrete types (PurpleUser and GreenUser) fixes this issue.\r\n\r\nIs it possible to configure this in a way to avoid duplication of mapping annotations across concrete subtypes? I\'ve included a sample project that demonstrates this issue.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102236362', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/294#issuecomment-1102236362', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/294', 'id': 1102236362, 'node_id': 'IC_kwDOEMJUCs5BssrK', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:55:51Z', 'updated_at': '2022-04-19T07:55:51Z', 'author_association': 'CONTRIBUTOR', 'body': 'As far as I can see this is the same discussion as #236. One additional thought is to check if `color` selected and handle it in the query method:\r\n```kotlin\r\n@QueryMapping(name = ""userGet"")\r\nfun userGet(@Argument(name = ""username"") username: String, fieldSelectionSet: DataFetchingFieldSelectionSet): User? {\r\n    if (fieldSelectionSet.contains(""color"")) {\r\n        // ...\r\n    }\r\n    // ...\r\n}\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102236362/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348590226,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:55:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312', 'id': 1155370282, 'node_id': 'I_kwDOEMJUCs5E3Y0q', 'number': 312, 'title': 'Define a schema using java instead of SDL', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 5, 'created_at': '2022-03-01T13:56:46Z', 'updated_at': '2022-04-19T07:55:23Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We would like to be able to define the schema programmatically instead of through an SDL file.\r\nIn our first attempt we have used a GraphQlSourceBuilderCustomizer and used the schemaFactory method, but we noticed that the DefaultTypeResolver is not registered correctly and it is necessary to have an SDL file even if it is empty.\r\n\r\nCould you consider adding a method to the DefaultGraphQlSourceBuilder that would allow to directly insert a GraphQLSchema?\r\n\r\nMany thanks & regards,\r\nRubén', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 1}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102235714', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312#issuecomment-1102235714', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'id': 1102235714, 'node_id': 'IC_kwDOEMJUCs5BsshC', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:55:23Z', 'updated_at': '2022-04-19T07:55:23Z', 'author_association': 'CONTRIBUTOR', 'body': ""You're right that `RuntimeWiring` builder doesn't populate the `CodeRegistry`, but it gives you access to the data fetcher registrations, and it would be trivial to add those to the `CodeRegistry`. That's what `SchemaGeneratorHelper` does later on from the `RuntimeWiring`.\r\n\r\nI don't think there is any benefit to change `AnnotatedControllerConfigurer` to populate the `CodeRegistry` directly.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102235714/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348566803,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:54:04Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/343', 'id': 1184616029, 'node_id': 'I_kwDOEMJUCs5Gm85d', 'number': 343, 'title': ""Can't use DataLoader in method with Spring Security annotation"", 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-29T10:00:11Z', 'updated_at': '2022-04-19T07:54:03Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I\'m having trouble combining DataLoaders with Spring Security;\r\n\r\nMy scenario; \r\n\r\n```kotlin\r\ntypealias MerchantDataLoader = DataLoader<UUID, Merchant?>\r\n\r\n// MerchantDataLoader\r\nregistry.forTypePair(UUID::class.java, Merchant::class.java).registerMappedBatchLoader { merchantIds, _ ->\r\n    Mono.just(merchantService.getMerchants(merchantIds).associateBy { it.id })\r\n}\r\n\r\n// ...\r\n\r\n@SchemaMapping\r\n@PreAuthorize(""@permissionEvaluator.hasPermission(authentication, #merchant.id, \'Merchant\', \'read\')"")\r\nfun dashboardForDate(\r\n    merchant: Merchant,\r\n    @Argument date: LocalDate?,\r\n    merchantLoader: MerchantDataLoader\r\n): CompletableFuture<Dashboard> = merchantLoader.load(merchant.id).thenApply {\r\n    if (it == null) throw EntityNotFoundException()\r\n    Dashboard(date, it)\r\n}\r\n```\r\n\r\nFor GraphQL Java being able to dispatch the dataloader the method [has to return the `CompletableFuture`](https://www.graphql-java.com/documentation/batching#async-calls-on-your-batch-loader-function-only), but for the `@PreAuthorize` annotation it ""must return an instance of org.reactivestreams.Publisher (i.e. Mono / Flux) or the function must be a Kotlin coroutine function"".\r\n\r\nI\'ve also tried making it a `suspend fun`, while still returning the `CompletableFuture`, but then I get an error like `does not match the type of the source Object \'class java.util.concurrent.CompletableFuture\'`, which makes sense because my controller is not expecting the `CompletableFuture`.\r\n\r\nIs my assumption correct, or is there a way around this that I don\'t know about?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102233755', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/343#issuecomment-1102233755', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/343', 'id': 1102233755, 'node_id': 'IC_kwDOEMJUCs5BssCb', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:54:03Z', 'updated_at': '2022-04-19T07:54:03Z', 'author_association': 'CONTRIBUTOR', 'body': ""The method needs to return a reactive type for reactive context to propagate. So this is expected, but you're bringing up a good point that our examples with injecting a `DataLoader` and using it as is should at least be improved. Maybe we could even consider injecting an alternative `ReactiveDataLoader` type that returns `Mono` instead of `CompletableFuture`."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102233755/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348476462,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:48:52Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/328', 'id': 1168795895, 'node_id': 'I_kwDOEMJUCs5Fqmj3', 'number': 328, 'title': 'Save and reuse WebClient response', 'user': {'login': 'ciscoo', 'id': 6423628, 'node_id': 'MDQ6VXNlcjY0MjM2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6423628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ciscoo', 'html_url': 'https://github.com/ciscoo', 'followers_url': 'https://api.github.com/users/ciscoo/followers', 'following_url': 'https://api.github.com/users/ciscoo/following{/other_user}', 'gists_url': 'https://api.github.com/users/ciscoo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ciscoo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ciscoo/subscriptions', 'organizations_url': 'https://api.github.com/users/ciscoo/orgs', 'repos_url': 'https://api.github.com/users/ciscoo/repos', 'events_url': 'https://api.github.com/users/ciscoo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ciscoo/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2022-03-14T19:11:29Z', 'updated_at': '2022-04-19T07:48:52Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'My company has various of services that provides customer data. I\'m trying to build  POC to showcase what is possible to maybe solve our own internal issues.\r\n\r\nThere is no single ""view"" of the data and instead we must retrieve the data we need from the various services. Using Reactor, I thought I would be able to save the response from a request, and reuse the response if a different field is queried from that same response.\r\n\r\nFor example, given a todo, let\'s say the `description` and `completed` come from the same API. I want to be able to save the response in the Reactor context and reuse if more fields are required.\r\n\r\n```java\r\n@SchemaMapping(typeName = ""Todo"")\r\n@Controller\r\npublic class TodoController {\r\n\r\n    private static final ParameterizedTypeReference<Map<String, Object>> MAP_TYPE = new ParameterizedTypeReference<>() {};\r\n\r\n    private static final String RESPONSE_ATTR = TodoController.class.getName() + "".todoResponse"";\r\n\r\n    private final WebClient todosWebClient;\r\n\r\n    public TodoController(WebClient todosWebClient) {\r\n        this.todosWebClient = todosWebClient;\r\n    }\r\n\r\n    @SchemaMapping(field = ""title"")\r\n    public Mono<String> resolveTitle(Todo todo) {\r\n        return Mono.deferContextual(contextView -> {\r\n            Map<String, Object> cached = contextView.getOrDefault(RESPONSE_ATTR, null);\r\n            if (cached != null) {\r\n                return Mono.just(cached.get(""title"").toString());\r\n            }\r\n            return this.todosWebClient.get().uri(""/todos/{id}"", todo.getId())\r\n                    .retrieve()\r\n                    .bodyToMono(MAP_TYPE)\r\n                    .flatMap(res -> Mono.just(res).contextWrite(context -> context.put(RESPONSE_ATTR, res)))\r\n                    .flatMap(res -> Mono.just(res.get(""title"").toString()));\r\n        });\r\n    }\r\n\r\n    @SchemaMapping(field = ""completed"")\r\n    public Mono<Boolean> resolveCompleted(Todo todo) {\r\n        return Mono.deferContextual(contextView -> {\r\n            Map<String, Object> cached = contextView.getOrDefault(RESPONSE_ATTR, null);\r\n            if (cached != null) {\r\n                return Mono.just(Boolean.parseBoolean(cached.get(""completed"").toString()));\r\n            }\r\n            return this.todosWebClient.get().uri(""/todos/{id}"", todo.getId())\r\n                    .retrieve()\r\n                    .bodyToMono(MAP_TYPE)\r\n                    .flatMap(res -> Mono.just(res).contextWrite(context -> context.put(RESPONSE_ATTR, res)))\r\n                    .flatMap(res -> Mono.just(Boolean.parseBoolean(res.get(""completed"").toString())));\r\n        });\r\n    }\r\n\r\n}\r\n```\r\n\r\nHowever, seems this approach does not work since the logs show (2) requests being sent:\r\n\r\n```logs\r\n2022-03-14 14:02:36.473 DEBUG 28960 --- [ttp@13e9f2e2-76] o.s.w.r.f.client.ExchangeFunctions       : [7f28f96f] HTTP GET https://jsonplaceholder.typicode.com/todos/2\r\n2022-03-14 14:02:36.627 DEBUG 28960 --- [ttp@13e9f2e2-76] o.s.w.r.f.client.ExchangeFunctions       : [4301696d] HTTP GET https://jsonplaceholder.typicode.com/todos/2\r\n2022-03-14 14:02:36.948 DEBUG 28960 --- [or-http-epoll-3] o.s.w.r.f.client.ExchangeFunctions       : [4301696d] [500c0d95-1] Response 200 OK\r\n2022-03-14 14:02:36.948 DEBUG 28960 --- [or-http-epoll-2] o.s.w.r.f.client.ExchangeFunctions       : [7f28f96f] [d12daeed-1] Response 200 OK\r\n```\r\n\r\nI have uploaded a sample project of the above approach: https://github.com/ciscoo/cache-graphql\r\n\r\n----\r\n\r\nSide note, I\'m trying to build a single view into our data. For example, the `todoDetails` comes from a service which I want to ""unwrap"" if that makes sense.\r\n\r\n```json\r\n{\r\n    ""id"": 1,\r\n    ""todoDetails"": {\r\n        ""id"": 1,\r\n        ""completed"": false\r\n    }\r\n}\r\n```\r\n\r\nto\r\n\r\n\r\n```json\r\n{\r\n    ""id"": 1,\r\n    ""completed"": false\r\n}\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102226721', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/328#issuecomment-1102226721', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328', 'id': 1102226721, 'node_id': 'IC_kwDOEMJUCs5BsqUh', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:48:52Z', 'updated_at': '2022-04-19T07:48:52Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for the sample @ciscoo. Here is what I made of it.\r\n\r\nKeep a separate `CustomerInfo` for fetching data from the remote HTTP service, but wrap it from `IdealCustomer` to flatten out the resulting object structure:\r\n```java\r\npublic class IdealCustomer {\r\n\r\n    private int id;\r\n\r\n    private CustomerInfo info;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return info.getFirstName();\r\n    }\r\n\r\n    public String getLastName() {\r\n        return info.getLastName();\r\n    }\r\n\r\n    public IdealCustomer initCustomerInfo(CustomerInfo info) {\r\n        this.info = info;\r\n        return this;\r\n    }\r\n\r\n    public boolean hasCustomerInfo() {\r\n        return this.info != null;\r\n    }\r\n\r\n}\r\n```\r\n\r\nThen the `QueryController`:\r\n```java\r\n@QueryMapping\r\npublic Mono<IdealCustomer> idealCustomer(@Argument CustomerIdentifierInput input) {\r\n    var customer = new IdealCustomer();\r\n    customer.setId(input.getId());\r\n    return Mono.just(customer);\r\n}\r\n```\r\nAnd `IdealCustomerInfoController`:\r\n```java\r\n@Controller\r\npublic class IdealCustomerInfoController {\r\n\r\n    private final CustomerInfoService customerInfoService;\r\n\r\n    public IdealCustomerInfoController(CustomerInfoService customerInfoService) {\r\n        this.customerInfoService = customerInfoService;\r\n    }\r\n\r\n    @SchemaMapping\r\n    public Mono<String> firstName(IdealCustomer customer) {\r\n        return initCustomerInfo(customer).map(IdealCustomer::getFirstName);\r\n    }\r\n\r\n    @SchemaMapping\r\n    public Mono<String> lastName(IdealCustomer customer) {\r\n        return initCustomerInfo(customer).map(IdealCustomer::getLastName);\r\n    }\r\n\r\n    private Mono<IdealCustomer> initCustomerInfo(IdealCustomer customer) {\r\n        return (customer.hasCustomerInfo() ? Mono.just(customer) :\r\n                this.customerInfoService.getCustomerInfo(customer.getId()).map(customer::initCustomerInfo));\r\n    }\r\n\r\n}\r\n```\r\n\r\nAn alternative beyond that idea is to peek into the selection and then it can all be encapsulated within `QueryController`:\r\n```java\r\n@QueryMapping\r\npublic Mono<IdealCustomer> idealCustomer(@Argument CustomerIdentifierInput input, DataFetchingFieldSelectionSet selectionSet) {\r\n    var customer = new IdealCustomer();\r\n    customer.setId(input.getId());\r\n    return selectionSet.containsAnyOf(""firstName"", ""lastName"") ?\r\n            this.customerInfoService.getCustomerInfo(customer.getId()).map(customer::initCustomerInfo) :\r\n            Mono.just(customer);\r\n}\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102226721/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348364211,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:42:29Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/350', 'id': 1203183630, 'node_id': 'I_kwDOEMJUCs5HtyAO', 'number': 350, 'title': 'Improve documentation samples on access to HTTP headers from controller', 'user': {'login': 'Flash1232', 'id': 8742521, 'node_id': 'MDQ6VXNlcjg3NDI1MjE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8742521?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Flash1232', 'html_url': 'https://github.com/Flash1232', 'followers_url': 'https://api.github.com/users/Flash1232/followers', 'following_url': 'https://api.github.com/users/Flash1232/following{/other_user}', 'gists_url': 'https://api.github.com/users/Flash1232/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Flash1232/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Flash1232/subscriptions', 'organizations_url': 'https://api.github.com/users/Flash1232/orgs', 'repos_url': 'https://api.github.com/users/Flash1232/repos', 'events_url': 'https://api.github.com/users/Flash1232/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Flash1232/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973758, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU4', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20documentation', 'name': 'type: documentation', 'color': 'e3d9fc', 'default': False, 'description': 'A documentation task'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 9, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-19T07:42:29Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 2, 'created_at': '2022-04-13T11:41:39Z', 'updated_at': '2022-04-19T07:42:28Z', 'closed_at': '2022-04-19T07:42:28Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'What would be the intended way to access request `extensions` (which we use to populate the Authorization header) set via `WebGraphQlInterceptor` (https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#web-interception) from inside a controller method?\r\n\r\nI picked up from [this conversation](https://github.com/spring-projects/spring-graphql/issues/172#issuecomment-971662742) and the docs that this option exists and was curious about the best solution to this. For now I am trying to access the Reactor `Context`\'s `ServerWebExchange` object to get the headers. This doesn\'t seem as the ""right way"" to go about this though.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/timeline', 'performed_via_github_app': None}}",closed,Java
21348338039,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:40:55Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/344', 'id': 1184960386, 'node_id': 'I_kwDOEMJUCs5GoQ-C', 'number': 344, 'title': 'Kotlin coroutines handler don\'t work with ""org.springframework.boot:spring-boot-starter-validation""', 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 13, 'created_at': '2022-03-29T14:28:00Z', 'updated_at': '2022-04-19T07:40:54Z', 'closed_at': '2022-04-19T07:40:54Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hi!\r\nI have problems with Webflux + Kotlin + Coroutines. When I have something like that:\r\n```kotlin\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    suspend fun createPerson(@Argument(""input"") personInput: PersonInput) : Person {\r\n            return service.createPerson()\r\n    }\r\n}\r\n```\r\n\r\nand I try to make request \r\n```graphql\r\nmutation {\r\n    createPerson(input: {firstName: ""Test"", lastName: ""Test""}) {\r\n        id, firstName, lastName\r\n    }\r\n}\r\n```\r\n\r\nI get\r\n```json\r\n{\r\n  ""errors"": [\r\n    {\r\n      ""message"": ""Index 1 out of bounds for length 1"",\r\n      ""locations"": [\r\n        {\r\n          ""line"": 33,\r\n          ""column"": 5\r\n        }\r\n      ],\r\n      ""path"": [\r\n        ""createPerson""\r\n      ],\r\n      ""extensions"": {\r\n        ""classification"": ""INTERNAL_ERROR""\r\n      }\r\n    }\r\n  ],\r\n  ""data"": {\r\n    ""createPerson"": null\r\n  }\r\n}\r\n```\r\nBut when I change to response type mono \r\n\r\n```\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    fun createPerson(@Argument(""input"") personInput: PersonInput) : Mono<Person> {\r\n            return mono {service.createPerson()}\r\n    }\r\n}\r\n```\r\nrequest works\r\n\r\n----\r\n\r\nAfter some investigation I found that problem was in validation starter:\r\n\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\r\n\tat java.base/java.util.Arrays$ArrayList.get(Arrays.java:4165) ~[na:na]\r\n\tat org.hibernate.validator.internal.properties.javabean.JavaBeanExecutable.getParameterName(JavaBeanExecutable.java:86) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData$Builder.build(ParameterMetaData.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.findParameterMetaData(ExecutableMetaData.java:436) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.build(ExecutableMetaData.java:391) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder$BuilderDelegate.build(BeanMetaDataBuilder.java:260) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder.build(BeanMetaDataBuilder.java:133) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.createBeanMetaData(BeanMetaDataManagerImpl.java:206) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.getBeanMetaData(BeanMetaDataManagerImpl.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:267) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:235) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.springframework.graphql.data.method.annotation.support.HandlerMethodInputValidator.validate(HandlerMethodInputValidator.java:78) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.validateAndInvoke(DataFetcherHandlerMethod.java:188) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:121) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer$SchemaMappingDataFetcher.get(AnnotatedControllerConfigurer.java:449) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.execution.ContextDataFetcherDecorator.get(ContextDataFetcherDecorator.java:67) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation.lambda$instrumentDataFetcher$0(DataLoaderDispatcherInstrumentation.java:87) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:279) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:210) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveField(ExecutionStrategy.java:182) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.lambda$execute$1(AsyncSerialExecutionStrategy.java:43) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentiallyImpl(Async.java:80) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentially(Async.java:69) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.execute(AsyncSerialExecutionStrategy.java:38) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.executeOperation(Execution.java:159) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.execute(Execution.java:105) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.execute(GraphQL.java:613) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.parseValidateAndExecute(GraphQL.java:538) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.executeAsync(GraphQL.java:502) ~[graphql-java-17.3.jar:na]\r\n\tat org.springframework.graphql.execution.DefaultExecutionGraphQlService.lambda$execute$2(DefaultExecutionGraphQlService.java:81) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:47) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:600) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:266) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]\r\n```\r\n\r\nand this is wrong line https://github.com/spring-projects/spring-graphql/blob/b40375f1f2bffd2dade33653288b5027dcdc99ab/spring-graphql/src/main/java/org/springframework/graphql/data/method/annotation/support/HandlerMethodInputValidator.java#L78\r\n\r\nquestion if it isn\'t related to https://hibernate.atlassian.net/browse/HV-1796\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/timeline', 'performed_via_github_app': None}}",closed,Java
21348337952,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:40:55Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/344', 'id': 1184960386, 'node_id': 'I_kwDOEMJUCs5GoQ-C', 'number': 344, 'title': 'Kotlin coroutines handler don\'t work with ""org.springframework.boot:spring-boot-starter-validation""', 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 12, 'created_at': '2022-03-29T14:28:00Z', 'updated_at': '2022-04-19T07:40:54Z', 'closed_at': '2022-04-19T07:40:54Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hi!\r\nI have problems with Webflux + Kotlin + Coroutines. When I have something like that:\r\n```kotlin\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    suspend fun createPerson(@Argument(""input"") personInput: PersonInput) : Person {\r\n            return service.createPerson()\r\n    }\r\n}\r\n```\r\n\r\nand I try to make request \r\n```graphql\r\nmutation {\r\n    createPerson(input: {firstName: ""Test"", lastName: ""Test""}) {\r\n        id, firstName, lastName\r\n    }\r\n}\r\n```\r\n\r\nI get\r\n```json\r\n{\r\n  ""errors"": [\r\n    {\r\n      ""message"": ""Index 1 out of bounds for length 1"",\r\n      ""locations"": [\r\n        {\r\n          ""line"": 33,\r\n          ""column"": 5\r\n        }\r\n      ],\r\n      ""path"": [\r\n        ""createPerson""\r\n      ],\r\n      ""extensions"": {\r\n        ""classification"": ""INTERNAL_ERROR""\r\n      }\r\n    }\r\n  ],\r\n  ""data"": {\r\n    ""createPerson"": null\r\n  }\r\n}\r\n```\r\nBut when I change to response type mono \r\n\r\n```\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    fun createPerson(@Argument(""input"") personInput: PersonInput) : Mono<Person> {\r\n            return mono {service.createPerson()}\r\n    }\r\n}\r\n```\r\nrequest works\r\n\r\n----\r\n\r\nAfter some investigation I found that problem was in validation starter:\r\n\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\r\n\tat java.base/java.util.Arrays$ArrayList.get(Arrays.java:4165) ~[na:na]\r\n\tat org.hibernate.validator.internal.properties.javabean.JavaBeanExecutable.getParameterName(JavaBeanExecutable.java:86) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData$Builder.build(ParameterMetaData.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.findParameterMetaData(ExecutableMetaData.java:436) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.build(ExecutableMetaData.java:391) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder$BuilderDelegate.build(BeanMetaDataBuilder.java:260) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder.build(BeanMetaDataBuilder.java:133) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.createBeanMetaData(BeanMetaDataManagerImpl.java:206) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.getBeanMetaData(BeanMetaDataManagerImpl.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:267) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:235) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.springframework.graphql.data.method.annotation.support.HandlerMethodInputValidator.validate(HandlerMethodInputValidator.java:78) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.validateAndInvoke(DataFetcherHandlerMethod.java:188) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:121) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer$SchemaMappingDataFetcher.get(AnnotatedControllerConfigurer.java:449) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.execution.ContextDataFetcherDecorator.get(ContextDataFetcherDecorator.java:67) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation.lambda$instrumentDataFetcher$0(DataLoaderDispatcherInstrumentation.java:87) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:279) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:210) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveField(ExecutionStrategy.java:182) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.lambda$execute$1(AsyncSerialExecutionStrategy.java:43) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentiallyImpl(Async.java:80) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentially(Async.java:69) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.execute(AsyncSerialExecutionStrategy.java:38) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.executeOperation(Execution.java:159) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.execute(Execution.java:105) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.execute(GraphQL.java:613) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.parseValidateAndExecute(GraphQL.java:538) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.executeAsync(GraphQL.java:502) ~[graphql-java-17.3.jar:na]\r\n\tat org.springframework.graphql.execution.DefaultExecutionGraphQlService.lambda$execute$2(DefaultExecutionGraphQlService.java:81) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:47) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:600) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:266) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]\r\n```\r\n\r\nand this is wrong line https://github.com/spring-projects/spring-graphql/blob/b40375f1f2bffd2dade33653288b5027dcdc99ab/spring-graphql/src/main/java/org/springframework/graphql/data/method/annotation/support/HandlerMethodInputValidator.java#L78\r\n\r\nquestion if it isn\'t related to https://hibernate.atlassian.net/browse/HV-1796\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102215789', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/344#issuecomment-1102215789', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344', 'id': 1102215789, 'node_id': 'IC_kwDOEMJUCs5Bsnpt', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:40:54Z', 'updated_at': '2022-04-19T07:40:54Z', 'author_association': 'CONTRIBUTOR', 'body': ""I've updated the documentation on this."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1102215789/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348314536,PushEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:39:32Z,"{'push_id': 9658830676, 'size': 8, 'distinct_size': 8, 'ref': 'refs/heads/main', 'head': 'ddb740898ec37e40d5299ab3b802b2a2d8eb50a4', 'before': '8e7931b449b8f33a7693702457ff0a6619919083', 'commits': [{'sha': 'e3cf655a0481df4fdee0d51183ce3a52a23f6895', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Improve logging in ExceptionResolversExceptionHandler\n\n- Resolved exceptions at DEBUG\n- Unresolved at ERROR\n- Consistent handling of failure from a resolver\n\nCloses gh-336', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/e3cf655a0481df4fdee0d51183ce3a52a23f6895'}, {'sha': '304fb45fb7b7096e474a4dba8c1855238b7c92f0', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine handling of unresolved exceptions\n\nCloses gh-352', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/304fb45fb7b7096e474a4dba8c1855238b7c92f0'}, {'sha': 'b5a6790fb5324ae5507897ca625dc259a46cf9e3', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing Validation section in reference\n\nSee gh-344', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/b5a6790fb5324ae5507897ca625dc259a46cf9e3'}, {'sha': '2cd73640697d2cac6270223c0170d84b369abbe3', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add note on Hibernate Validator and Kotlin coroutines\n\nSee gh-344', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/2cd73640697d2cac6270223c0170d84b369abbe3'}, {'sha': '7044844c527a015559db0f68549b752de09605f0', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing tests', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/7044844c527a015559db0f68549b752de09605f0'}, {'sha': 'b8c4b25ee692aae95721011f53016c5e70214984', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Improve Server Interception section\n\nSee gh-350', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/b8c4b25ee692aae95721011f53016c5e70214984'}, {'sha': '8b5e2a3cba520c20b1968db22d07cbf4850afe36', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update WebFlux WebSocket sample tests\n\n- combine existing tests into one class\n- add integration tests', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/8b5e2a3cba520c20b1968db22d07cbf4850afe36'}, {'sha': 'ddb740898ec37e40d5299ab3b802b2a2d8eb50a4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Expose WebSocket session info in interceptor\n\nExpose information about the WebSocketSession consistently in all\nmethods of WebSocketGraphQlInterceptor.\n\nSee gh-268', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/ddb740898ec37e40d5299ab3b802b2a2d8eb50a4'}]}",,Java
21348314135,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:39:31Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/352', 'id': 1204289948, 'node_id': 'I_kwDOEMJUCs5HyAGc', 'number': 352, 'title': 'Do not include exception message for unresolved exceptions', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 8, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-19T07:39:31Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-04-14T09:38:57Z', 'updated_at': '2022-04-19T07:39:31Z', 'closed_at': '2022-04-19T07:39:30Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'In addition to the exception logging improvements for #336, `ExceptionResolversExceptionHandler` should not use the exception message, and thus leak implementation details. \r\n\r\nBy default, an unresolved exception will be logged, but otherwise the client will receive just a generic message like ""Internal error"". It would be up applications to have one or more `DataFetcherExceptionResolver` components to handle specific exceptions, or otherwise use a generic message with additional information about the request, like the execution id for example.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/timeline', 'performed_via_github_app': None}}",closed,Java
21348313945,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-19T07:39:30Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/336', 'id': 1176981528, 'node_id': 'I_kwDOEMJUCs5GJ1AY', 'number': 336, 'title': 'Improve Exception Logging in ExceptionResolversExceptionHandler', 'user': {'login': 'alexbudarov', 'id': 6158807, 'node_id': 'MDQ6VXNlcjYxNTg4MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6158807?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alexbudarov', 'html_url': 'https://github.com/alexbudarov', 'followers_url': 'https://api.github.com/users/alexbudarov/followers', 'following_url': 'https://api.github.com/users/alexbudarov/following{/other_user}', 'gists_url': 'https://api.github.com/users/alexbudarov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alexbudarov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alexbudarov/subscriptions', 'organizations_url': 'https://api.github.com/users/alexbudarov/orgs', 'repos_url': 'https://api.github.com/users/alexbudarov/repos', 'events_url': 'https://api.github.com/users/alexbudarov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alexbudarov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 7, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-19T07:39:30Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-22T15:48:14Z', 'updated_at': '2022-04-19T07:39:30Z', 'closed_at': '2022-04-19T07:39:30Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""As I understand, currently developer has to set this application settting:\r\n```\r\nlogging.level.org.springframework.graphql.execution.ExceptionResolversExceptionHandler = debug\r\n```\r\nif he/she wants to log unexpected exceptions from annotated handler methods.\r\n\r\nBy default (e.g. in spring-graphql sample apps) exceptions are not written to log .\r\nIs it how it's intended to be? I would expect unexpected application errors to be written to log by default."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/timeline', 'performed_via_github_app': None}}",closed,Java
21348300488,PullRequestEvent,rstoyanchev/spring-framework,0.0,2022-04-19T07:38:43Z,"{'action': 'closed', 'number': 17, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'closed', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-19T07:38:43Z', 'closed_at': '2022-04-19T07:38:43Z', 'merged_at': None, 'merge_commit_sha': 'c1b65bd8e42f782225bba4ecf4dd54f039c28635', 'assignee': None, 'assignees': [], 'requested_reviewers': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/471b994aa1e9bef7ba6b70c05961fb527d402315', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': '471b994aa1e9bef7ba6b70c05961fb527d402315', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-15T16:33:25Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150826, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '38b2dcc67c2e3efdc2bbd9d3db5524d08234e96c', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-19T07:34:38Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 0, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/471b994aa1e9bef7ba6b70c05961fb527d402315'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': False, 'rebaseable': False, 'mergeable_state': 'dirty', 'merged_by': None, 'comments': 1, 'review_comments': 7, 'maintainer_can_modify': False, 'commits': 2, 'additions': 2527, 'deletions': 0, 'changed_files': 21}}",closed,Java
21348300363,IssueCommentEvent,rstoyanchev/spring-framework,0.0,2022-04-19T07:38:43Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'repository_url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/labels{/name}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/events', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'id': 1200379972, 'node_id': 'PR_kwDOADEvl842BbP7', 'number': 17, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-19T07:38:43Z', 'closed_at': '2022-04-19T07:38:43Z', 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'merged_at': None}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments/1102212775', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#issuecomment-1102212775', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'id': 1102212775, 'node_id': 'IC_kwDOADEvl85Bsm6n', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-19T07:38:43Z', 'updated_at': '2022-04-19T07:38:43Z', 'author_association': 'OWNER', 'body': 'This is merged.', 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments/1102212775/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21348246415,PushEvent,rstoyanchev/spring-framework,0.0,2022-04-19T07:35:31Z,"{'push_id': 9658797787, 'size': 75, 'distinct_size': 75, 'ref': 'refs/heads/http-contract-client', 'head': '38b2dcc67c2e3efdc2bbd9d3db5524d08234e96c', 'before': '93ba51ddc1dddd23175584323c49222eda310c26', 'commits': [{'sha': '35610a535d48ce0d041729e0cd65c4a798eafb4c', 'author': {'email': 'hoellerj@vmware.com', 'name': 'Juergen Hoeller'}, 'message': 'Expose cancel(mayInterruptIfRunning) variant in ScheduledTask\n\nCloses gh-28233', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/35610a535d48ce0d041729e0cd65c4a798eafb4c'}, {'sha': 'edd66d96dd63011449b05abba21c8ba9428af06e', 'author': {'email': 'hoellerj@vmware.com', 'name': 'Juergen Hoeller'}, 'message': 'Fix accidental use of deprecated setFlushMode method\n\nCloses gh-28234', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/edd66d96dd63011449b05abba21c8ba9428af06e'}, {'sha': 'cb36ca31f6a9e973490ac9f698edd3dca99e1ecf', 'author': {'email': 'hoellerj@vmware.com', 'name': 'Juergen Hoeller'}, 'message': 'Upgrade to ASM master', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/cb36ca31f6a9e973490ac9f698edd3dca99e1ecf'}, {'sha': '12d80103955c42457c26a1017386560afbb1be7f', 'author': {'email': 'hoellerj@vmware.com', 'name': 'Juergen Hoeller'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/12d80103955c42457c26a1017386560afbb1be7f'}, {'sha': 'e59f39f2cce748811b98f39bd69b50886bdf0858', 'author': {'email': 'hoellerj@vmware.com', 'name': 'Juergen Hoeller'}, 'message': 'Upgrade to AspectJ 1.9.9, Caffeine 3.0.6, Hibernate ORM 5.6.7', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/e59f39f2cce748811b98f39bd69b50886bdf0858'}, {'sha': '135506f67238a57bfb2fa8bff6480de611eda1d6', 'author': {'email': 'izeye@naver.com', 'name': 'izeye'}, 'message': 'Update copyright year of EvaluationTests\n\nSee gh-28238', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/135506f67238a57bfb2fa8bff6480de611eda1d6'}, {'sha': '3a6016d356a876e1e5f919ed0a31baed7818eee4', 'author': {'email': 'snicoll@vmware.com', 'name': 'Stephane Nicoll'}, 'message': 'Merge pull request #28238 from izeye\n\n* pr/28238:\n  Update copyright year of EvaluationTests\n\nCloses gh-28238', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/3a6016d356a876e1e5f919ed0a31baed7818eee4'}, {'sha': '890fa1145fdeaa4c727f9fd260dba6533d284fc5', 'author': {'email': 'snicoll@vmware.com', 'name': 'Stephane Nicoll'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/890fa1145fdeaa4c727f9fd260dba6533d284fc5'}, {'sha': '4b150fd451ad06647f04f95631627198b3df929f', 'author': {'email': 'snicoll@vmware.com', 'name': 'Stephane Nicoll'}, 'message': 'Update copyright date in reference manual\n\nCloses gh-28237', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/4b150fd451ad06647f04f95631627198b3df929f'}, {'sha': 'defcaae6e4a88fcc3e0f4363e2cc1ef287d9b98e', 'author': {'email': 'snicoll@vmware.com', 'name': 'Stephane Nicoll'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/defcaae6e4a88fcc3e0f4363e2cc1ef287d9b98e'}, {'sha': '1d302bf38445e3db559c9618c5ede71ca74bea1a', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Introduce tests for gh-28228', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/1d302bf38445e3db559c9618c5ede71ca74bea1a'}, {'sha': '5eff9f8d7e1e0d3800bb78e2e408f91323348d8f', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/5eff9f8d7e1e0d3800bb78e2e408f91323348d8f'}, {'sha': 'e90225336a57fa269ec40d6e238e4a27541b56fc', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Use JPA from Jakarta', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/e90225336a57fa269ec40d6e238e4a27541b56fc'}, {'sha': 'd927e3736483c8f1e0c012fa1027a198fc775f66', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Add ""Testing ORM entity lifecycle callbacks"" note to Testing chapter\n\nCloses gh-28228', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/d927e3736483c8f1e0c012fa1027a198fc775f66'}, {'sha': 'e88a88cb7d223ca8016f1eb141b3e8552b956ffa', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/e88a88cb7d223ca8016f1eb141b3e8552b956ffa'}, {'sha': '50973f73c70723198752d6ded3ad6af2c05b5674', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Change link from 5.3.x to main\n\nSee gh-28228', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/50973f73c70723198752d6ded3ad6af2c05b5674'}, {'sha': '77a8cbcbecc54744b059e41f24c362f587db21d2', 'author': {'email': 'sdeleuze@vmware.com', 'name': 'Sébastien Deleuze'}, 'message': 'Remove outdated comment in NativeDetector\n\n`-H:+InlineBeforeAnalysis` is enabled by default as of\nGraalVM 21.3.', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/77a8cbcbecc54744b059e41f24c362f587db21d2'}, {'sha': 'e681e713d4aa75be988d77f0108f80ecf15e21e9', 'author': {'email': 'sdeleuze@vmware.com', 'name': 'Sébastien Deleuze'}, 'message': 'Initialize NativeDetector at build time\n\nCloses gh-28244', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/e681e713d4aa75be988d77f0108f80ecf15e21e9'}, {'sha': '7f7fb58dd0dae86d22268a4b59ac7c72a6c22529', 'author': {'email': 'loic.ledoyen@mirakl.com', 'name': 'Loïc Ledoyen'}, 'message': ""Deprecate SerializationUtils#deserialize\n\nSince SerializationUtils#deserialize is based on Java's serialization\nmechanism, it can be the source of Remote Code Execution (RCE)\nvulnerabilities.\n\nCloses gh-28075"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529'}, {'sha': 'c8d0146bccf6c9089aed020fb629d3a1f36aea60', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Polish contribution\n\nSee gh-28075', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/c8d0146bccf6c9089aed020fb629d3a1f36aea60'}]}",,Java
21293706898,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-14T16:20:18Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/350', 'id': 1203183630, 'node_id': 'I_kwDOEMJUCs5HtyAO', 'number': 350, 'title': 'Accessing Extensions from Controller method', 'user': {'login': 'Flash1232', 'id': 8742521, 'node_id': 'MDQ6VXNlcjg3NDI1MjE=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8742521?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/Flash1232', 'html_url': 'https://github.com/Flash1232', 'followers_url': 'https://api.github.com/users/Flash1232/followers', 'following_url': 'https://api.github.com/users/Flash1232/following{/other_user}', 'gists_url': 'https://api.github.com/users/Flash1232/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/Flash1232/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/Flash1232/subscriptions', 'organizations_url': 'https://api.github.com/users/Flash1232/orgs', 'repos_url': 'https://api.github.com/users/Flash1232/repos', 'events_url': 'https://api.github.com/users/Flash1232/events{/privacy}', 'received_events_url': 'https://api.github.com/users/Flash1232/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-04-13T11:41:39Z', 'updated_at': '2022-04-14T16:20:18Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'What would be the intended way to access request `extensions` (which we use to populate the Authorization header) set via `WebGraphQlInterceptor` (https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#web-interception) from inside a controller method?\r\n\r\nI picked up from [this conversation](https://github.com/spring-projects/spring-graphql/issues/172#issuecomment-971662742) and the docs that this option exists and was curious about the best solution to this. For now I am trying to access the Reactor `Context`\'s `ServerWebExchange` object to get the headers. This doesn\'t seem as the ""right way"" to go about this though.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1099364930', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/350#issuecomment-1099364930', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/350', 'id': 1099364930, 'node_id': 'IC_kwDOEMJUCs5BhvpC', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-14T16:20:17Z', 'updated_at': '2022-04-14T16:20:17Z', 'author_association': 'CONTRIBUTOR', 'body': 'One option is to extract whatever you need and put it in the GraphQLContext. The interceptor gives you access to the headers:\r\n```java\r\nclass MyInterceptor implements WebGraphQlInterceptor {\r\n\r\n\t@Override\r\n\tpublic Mono<WebGraphQlResponse> intercept(WebGraphQlRequest request, Chain chain) {\r\n\t\tList<String> fooHeaderValue = request.getHeaders().get(""fooHeader"");\r\n\t\trequest.configureExecutionInput((executionInput, builder) ->\r\n\t\t\t\tbuilder.graphQLContext(Collections.singletonMap(""fooHeader"", fooHeaderValue)).build());\r\n\t\treturn chain.next(request);\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThen in your controller access that:\r\n\r\n```java\r\n@Controller\r\nclass MyController {\r\n\r\n\t@QueryMapping\r\n\tFoo getFoo(@ContextValue String fooHeader) {\r\n\t\t// ...\r\n\t}\r\n}\r\n\r\nWe could improve the documentation example in the [Server Interception](https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#server-interception) section with this example instead, which seems a more likely use case.\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1099364930/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21293147130,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-14T15:47:59Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/266', 'id': 1111195270, 'node_id': 'I_kwDOEMJUCs5CO36G', 'number': 266, 'title': 'Missing reference documentation/examples on how to implement resolveToMultipleErrors from DataFetcherExceptionResolverAdapter ', 'user': {'login': 'luliin', 'id': 67701404, 'node_id': 'MDQ6VXNlcjY3NzAxNDA0', 'avatar_url': 'https://avatars.githubusercontent.com/u/67701404?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/luliin', 'html_url': 'https://github.com/luliin', 'followers_url': 'https://api.github.com/users/luliin/followers', 'following_url': 'https://api.github.com/users/luliin/following{/other_user}', 'gists_url': 'https://api.github.com/users/luliin/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/luliin/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/luliin/subscriptions', 'organizations_url': 'https://api.github.com/users/luliin/orgs', 'repos_url': 'https://api.github.com/users/luliin/repos', 'events_url': 'https://api.github.com/users/luliin/events{/privacy}', 'received_events_url': 'https://api.github.com/users/luliin/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-01-22T02:39:41Z', 'updated_at': '2022-04-14T15:47:58Z', 'closed_at': '2022-04-14T15:47:58Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""Hi!\r\nI'm having trouble understanding how to actually implement a DataFetcherExceptionResolverAdapter that overrides the resolveToMultipleErrors-method.\r\nMy goal is to provide a client with multiple error messages caused by validation errors on several input fields.\r\nI'm assuming there is a perfectly reasonable way to achieve this, but I don't know where to start.\r\n\r\nSome guidance woud be much appreciated!"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/266/timeline', 'performed_via_github_app': None}}",closed,Java
21287882255,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-14T11:00:27Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/348', 'id': 1194629668, 'node_id': 'I_kwDOEMJUCs5HNJok', 'number': 348, 'title': 'GraphQl Client - Invalid Field when empty Array', 'user': {'login': 'busches', 'id': 857700, 'node_id': 'MDQ6VXNlcjg1NzcwMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/857700?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/busches', 'html_url': 'https://github.com/busches', 'followers_url': 'https://api.github.com/users/busches/followers', 'following_url': 'https://api.github.com/users/busches/following{/other_user}', 'gists_url': 'https://api.github.com/users/busches/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/busches/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/busches/subscriptions', 'organizations_url': 'https://api.github.com/users/busches/orgs', 'repos_url': 'https://api.github.com/users/busches/repos', 'events_url': 'https://api.github.com/users/busches/events{/privacy}', 'received_events_url': 'https://api.github.com/users/busches/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 6, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-14T09:38:58Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-04-06T13:35:44Z', 'updated_at': '2022-04-14T11:00:27Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'When making a GraphQl Client call to a field that returns a list of an entity, when then list is empty, we\'re getting the following error:\r\n\r\n```\r\n org.springframework.graphql.client.FieldAccessException: Invalid field \'getRefillNumbers\', errors: []\r\n\tat org.springframework.graphql.client.DefaultGraphQlClient$RetrieveSpecSupport.getValidField(DefaultGraphQlClient.java:183)\r\n\tat org.springframework.graphql.client.DefaultGraphQlClient$DefaultRetrieveSpec.lambda$toEntityList$2(DefaultGraphQlClient.java:213)\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\r\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\r\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\r\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)\r\n\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)\r\n\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)\r\n\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)\r\n\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:703)\r\n\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372)\r\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235)\r\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1284)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:800)\r\n\tat io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1.run(AbstractEpollChannel.java:425)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)\r\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\n```\r\n\r\nVersion: `implementation(""org.springframework.graphql:spring-graphql:1.0.0-M6"")`\r\n\r\nCalling Code:\r\n```kotlin\r\n val response = graphQlClient.documentName(documentName)\r\n            .variables(variables)\r\n            .retrieve(""getRefillNumbers"")\r\n            .toEntityList(GetRefillNumbers::class.java)\r\n```\r\n\r\nFailing response:\r\n```json\r\n{\r\n\t""data"": {\r\n\t\t""getRefillNumbers"": []\r\n\t}\r\n}\r\n```\r\n\r\nSuccessful response:\r\n```json\r\n{\r\n\t""data"": {\r\n\t\t""getRefillNumbers"": [\r\n\t\t\t{\r\n\t\t\t\t""somedata"": ""1860""\r\n\t\t\t}\r\n       ]\r\n}\r\n```\r\n\r\nI would not expect an empty array to result in an error, when it still technically follows the schema, additionally, the error thrown is very misleading, since the field `getRefillNumbers` is still there.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1099068349', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/348#issuecomment-1099068349', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/348', 'id': 1099068349, 'node_id': 'IC_kwDOEMJUCs5BgnO9', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-14T11:00:27Z', 'updated_at': '2022-04-14T11:00:27Z', 'author_association': 'CONTRIBUTOR', 'body': 'On closer look, I am unable to reproduce and I can\'t see why it\'s happening. \r\n\r\nIf you look at the line where the exception is raised, the response must be invalid of there is a field error. The former is defined as ""data"" is not present or `null`, which is not the case. For the latter, your snippet shows no ""errors"" at all, and the exception message confirms no field errors with `errors []`.\r\n\r\nCould you please, either debug further based on this information to understand why it\'s raising the error, or provide a sample? Also, try using the latest snapshot, just in case.\r\n\r\n  ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1099068349/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21286556337,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-14T09:38:58Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/352', 'id': 1204289948, 'node_id': 'I_kwDOEMJUCs5HyAGc', 'number': 352, 'title': 'Do not include exception message for unresolved exceptions', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 6, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-14T09:38:58Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-04-14T09:38:57Z', 'updated_at': '2022-04-14T09:38:58Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'In addition to the exception logging improvements for #336, `ExceptionResolversExceptionHandler` should not use the exception message, and thus leak implementation details. \r\n\r\nBy default, an unresolved exception will be logged, but otherwise the client will receive just a generic message like ""Internal error"". It would be up applications to have one or more `DataFetcherExceptionResolver` components to handle specific exceptions, or otherwise use a generic message with additional information about the request, like the execution id for example.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/352/timeline', 'performed_via_github_app': None}}",opened,Java
21276821534,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-13T19:36:13Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/349', 'id': 1197803113, 'node_id': 'I_kwDOEMJUCs5HZQZp', 'number': 349, 'title': 'Input Objects with Generic Enums Fail', 'user': {'login': 'crispydc', 'id': 8385317, 'node_id': 'MDQ6VXNlcjgzODUzMTc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/8385317?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/crispydc', 'html_url': 'https://github.com/crispydc', 'followers_url': 'https://api.github.com/users/crispydc/followers', 'following_url': 'https://api.github.com/users/crispydc/following{/other_user}', 'gists_url': 'https://api.github.com/users/crispydc/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/crispydc/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/crispydc/subscriptions', 'organizations_url': 'https://api.github.com/users/crispydc/orgs', 'repos_url': 'https://api.github.com/users/crispydc/repos', 'events_url': 'https://api.github.com/users/crispydc/events{/privacy}', 'received_events_url': 'https://api.github.com/users/crispydc/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-04-08T20:41:12Z', 'updated_at': '2022-04-13T19:36:12Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""We have a project built using `spring-graphql` version `1.0.0-M2` that includes filtering logic using input objects with fields of Enum generics. This approach works fine in M2, but when attempting to upgrade to M4 these Enum input fields were now always blank regardless of what was sent in the query. In the latest M6 version, queries including these fields now result in an `INTERNAL_ERROR` similar to this:\r\n\r\n```\r\norg.springframework.validation.BeanPropertyBindingResult: 1 errors\r\nField error in object 'filter' on field 'enums[0]': rejected value [ONE]; codes [typeMismatch.target.enums[0],typeMismatch.target.enums,typeMismatch.enums[0],typeMismatch.enums,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [target.enums[0],enums[0]]; arguments []; default message [enums[0]]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Enum' for property 'enums[0]'; nested exception is java.lang.IllegalArgumentException: The target type java.lang.Enum does not refer to an enum]\r\n```\r\n\r\nI was able to recreate the issue we're seeing on a clean `spring-boot 2.7.0-M3` project with `spring-boot-starter-graphql` and the following:\r\n\r\n`enum.graphqls`\r\n```graphql\r\ntype Query {}\r\n\r\nextend type Query {\r\n    enums(filter: EnumFilterInput!): [FancyEnum]\r\n}\r\n\r\ninput EnumFilterInput {\r\n    enums: [FancyEnum]\r\n}\r\n\r\nenum FancyEnum {\r\n    ONE\r\n    TWO\r\n    THREE\r\n}\r\n```\r\n\r\n`EnumController.java`\r\n```java\r\n@Controller\r\npublic class EnumController {\r\n\r\n    @QueryMapping\r\n    public List<FancyEnum> enums(@Argument EnumFilterInput<FancyEnum> filter) {\r\n        return filter.getEnums();\r\n    }\r\n}\r\n```\r\n\r\n`EnumFilterInput.java`\r\n```java\r\npublic class EnumFilterInput<E extends Enum<E>> {\r\n\r\n    private List<E> enums;\r\n\r\n    public List<E> getEnums() {\r\n        return enums;\r\n    }\r\n\r\n    public void setEnums(List<E> enums) {\r\n        this.enums = enums;\r\n    }\r\n}\r\n```\r\n\r\n`FancyEnum.java`\r\n```java\r\npublic enum FancyEnum {\r\n    ONE, TWO, THREE\r\n}\r\n```\r\n\r\nThe above project on `spring-boot 2.6.6` with `spring-graphql 1.0.0-M2` works as expected with the following query:\r\n```graphql\r\nquery {\r\n  enums(filter:{\r\n    enums:[ONE]\r\n  })\r\n}\r\n```\r\nHowever on `spring-boot 2.7.0-M3` and `spring-boot-starter-graphql` (`1.0.0-M6`) this query fails with the error given above.\r\n\r\nWas this an intended change made to the project or is this an issue that can be resolved in a future release? If it is intended, is there a way to get something similar working that is properly supported by `spring-graphql`?\r\n\r\nThanks in advance for any help you can provide."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1098411123', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/349#issuecomment-1098411123', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/349', 'id': 1098411123, 'node_id': 'IC_kwDOEMJUCs5BeGxz', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-13T19:36:12Z', 'updated_at': '2022-04-13T19:36:12Z', 'author_association': 'CONTRIBUTOR', 'body': 'Indeed as @koenpunt pointed out, we switched from JSON (de)-serialization to using `DataBinder` for the reasons explained in #122. \r\n\r\nGiven that `DataBinder` is only has the actual object to populate, in this case created through the default constructor, it does not the actual enum type to convert to. I confirmed that it works with a class that declares the generic parameter type:\r\n\r\n```java\r\npublic class FancyEnumFilterInput extends EnumFilterInput<FancyEnum> {\r\n}\r\n\r\n@Controller\r\npublic class EnumController {\r\n\r\n\t@QueryMapping\r\n\tpublic List<FancyEnum> enums(@Argument FancyEnumFilterInput filter) {\r\n\t\treturn filter.getEnums();\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThe problem relates more generally to any class-level, generic parameter. We might be able to register a `TypeDescriptor` and `ConvertingPropertyEditorAdapter` on the `DataBinder` for fields whose type is class-level, generic parameter, where the type information would come from the method parameter declaration.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1098411123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21276440190,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-13T19:11:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/336', 'id': 1176981528, 'node_id': 'I_kwDOEMJUCs5GJ1AY', 'number': 336, 'title': 'Exception logging - default behavior', 'user': {'login': 'alexbudarov', 'id': 6158807, 'node_id': 'MDQ6VXNlcjYxNTg4MDc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6158807?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alexbudarov', 'html_url': 'https://github.com/alexbudarov', 'followers_url': 'https://api.github.com/users/alexbudarov/followers', 'following_url': 'https://api.github.com/users/alexbudarov/following{/other_user}', 'gists_url': 'https://api.github.com/users/alexbudarov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alexbudarov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alexbudarov/subscriptions', 'organizations_url': 'https://api.github.com/users/alexbudarov/orgs', 'repos_url': 'https://api.github.com/users/alexbudarov/repos', 'events_url': 'https://api.github.com/users/alexbudarov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alexbudarov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 5, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-13T19:07:14Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-22T15:48:14Z', 'updated_at': '2022-04-13T19:11:23Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""As I understand, currently developer has to set this application settting:\r\n```\r\nlogging.level.org.springframework.graphql.execution.ExceptionResolversExceptionHandler = debug\r\n```\r\nif he/she wants to log unexpected exceptions from annotated handler methods.\r\n\r\nBy default (e.g. in spring-graphql sample apps) exceptions are not written to log .\r\nIs it how it's intended to be? I would expect unexpected application errors to be written to log by default."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1098391563', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/336#issuecomment-1098391563', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/336', 'id': 1098391563, 'node_id': 'IC_kwDOEMJUCs5BeCAL', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-13T19:11:23Z', 'updated_at': '2022-04-13T19:11:23Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for the question, this can be improved as follows. If the exception is resolved by a `DataFetcherExceptionResolver` it is logged with a stack trace at DEBUG level. If the exception is unresolved, in which case default handling as as internal error applies, then it is logged with a stack trace at ERROR level. I think this is what you expect as well but if not please comment.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1098391563/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21255623659,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-12T20:23:12Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/342', 'id': 1183167497, 'node_id': 'I_kwDOEMJUCs5GhbQJ', 'number': 342, 'title': 'Principal is null when executing requests over WebSocket with Spring MVC', 'user': {'login': 'maxhov', 'id': 14804474, 'node_id': 'MDQ6VXNlcjE0ODA0NDc0', 'avatar_url': 'https://avatars.githubusercontent.com/u/14804474?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maxhov', 'html_url': 'https://github.com/maxhov', 'followers_url': 'https://api.github.com/users/maxhov/followers', 'following_url': 'https://api.github.com/users/maxhov/following{/other_user}', 'gists_url': 'https://api.github.com/users/maxhov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maxhov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maxhov/subscriptions', 'organizations_url': 'https://api.github.com/users/maxhov/orgs', 'repos_url': 'https://api.github.com/users/maxhov/repos', 'events_url': 'https://api.github.com/users/maxhov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maxhov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 5, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-12T20:23:12Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-28T09:39:11Z', 'updated_at': '2022-04-12T20:23:12Z', 'closed_at': '2022-04-12T20:23:11Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'When executing GraphQL requests through websockets, the injected Principal is `null`. I tried with and without the introduced `@AuthenticatedPrincipal` annotation, but without a succesful result. Through the HTTP transport, the Principal is injected and everything works as expected.\r\n\r\nTo demonstrate the issue, I [created a demo repo](https://github.com/maxhov/spring-graphql-principal) with a basic Spring Boot 2.7.0-m3 application.\r\n\r\nTo reproduce the issue for the **websocket transport** with websocat:\r\n```bash\r\n~  spring-graphql-principal$ websocat --basic-auth user:password ws://localhost:8080/graphql\r\n**{""type"":""connection_init""}**\r\n{""id"":null,""type"":""connection_ack"",""payload"":{}}\r\n**{""id"":""1"",""type"":""subscribe"",""payload"":{""query"":""{ helloWorld }""}}**\r\n{""id"":""1"",""type"":""next"",""payload"":{""errors"":[{""message"":""Cannot invoke \\""java.security.Principal.getName()\\"" because \\""principal\\"" is null"",""locations"":[{""line"":1,""column"":3}],""path"":[""helloWorld""],""extensions"":{""classification"":""INTERNAL_ERROR""}}],""data"":{""helloWorld"":null}}}\r\n{""id"":""1"",""type"":""complete"",""payload"":{}}\r\n``` \r\n\r\nTo see the result for the **HTTP transport**, use the following curl command:\r\n```\r\ncurl --location --request POST \'http://localhost:8080/graphql\' \\\r\n--header \'Authorization: Basic dXNlcjpwYXNzd29yZA==\' \\\r\n--header \'Content-Type: application/json\' \\\r\n--data-raw \'{""query"":""{ helloWorld }""}\'\r\n```\r\n\r\nSeems to be somewhat related to #268 . I tried to pinpoint where it goes wrong, but couldn\'t figure it out. My first guess would be that the `ThreadLocal` variables from e.g. the `SecurityContext` are not properly transferred to the thread handling the actual query. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/timeline', 'performed_via_github_app': None}}",closed,Java
21255623819,PushEvent,spring-projects/spring-graphql,0.0,2022-04-12T20:23:12Z,"{'push_id': 9609876264, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': 'dbba8b17f8a52623ee7e7f41306c3d4ff81a0a49', 'before': '218b16e02277b585a04f805fe75f06e43a5995d2', 'commits': [{'sha': 'dbba8b17f8a52623ee7e7f41306c3d4ff81a0a49', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Uncomment assertion for context propagation\n\nCloses gh-342', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/dbba8b17f8a52623ee7e7f41306c3d4ff81a0a49'}]}",,Java
21255605664,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-12T20:22:03Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345', 'id': 1186527173, 'node_id': 'I_kwDOEMJUCs5GuPfF', 'number': 345, 'title': 'GraphQlTester created via `@GraphQlTest` does not use application JSON config', 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 4, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-12T20:22:03Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 5, 'created_at': '2022-03-30T14:13:55Z', 'updated_at': '2022-04-12T20:22:02Z', 'closed_at': '2022-04-12T20:22:02Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'hi! \r\nI found another problem this time during testing. \r\nController:\r\n```kotlin\r\n\r\n@QueryMapping\r\n    suspend fun people(): Flow<PersonResponse> {\r\n            return service.getAllPeople().map {\r\n                PersonResponse(\r\n                    it.id!!,\r\n                    it.firstName,\r\n                    it.lastName,\r\n                    it.createdAt!!\r\n                )\r\n            }\r\n    }\r\n\r\n```\r\n\r\nTest:\r\n```kotlin\r\n @Test\r\n    fun `get all persons`() {\r\n        val person = Person(\r\n            UUID.randomUUID(),\r\n            firstName = ""Test"",\r\n            lastName = ""Test"",\r\n            createdAt = LocalDateTime.now()\r\n        )\r\n        \r\n        val personResponse = PersonResponse(\r\n            person.id!!,\r\n            person.firstName,\r\n            person.lastName,\r\n            person.createdAt!!\r\n        )\r\n        \r\n        coEvery { personService.getAllPeople() }.answers { flowOf(person) }\r\n        \r\n        graphQlTester.documentName(""getAllPeople"")\r\n            .execute()\r\n            .path(""people"")\r\n            .entityList(PersonResponse::class.java)\r\n            .hasSize(1)\r\n            .contains(personResponse)\r\n    }\r\n```\r\n\r\nquery: \r\n```graphql\r\nquery {\r\n    people {\r\n        id, firstName, lastName, createdAt\r\n    }\r\n}\r\n```\r\n\r\n\r\nerror:\r\n```\r\njava.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n\tat app//com.example.backendgraphql.person.PersonControllerTest.get all persons(PersonControllerTest.kt:44)\r\n```\r\n\r\nThis happened when I use data class for response object, when I use record from java I get :\r\n```\r\njava.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n```\r\n\r\nand record looks like that:\r\n```java \r\npublic record PersonResponse(\r\n        UUID id,\r\n        String firstName,\r\n        String lastName,\r\n        LocalDateTime createdAt\r\n) {\r\n}\r\n```\r\nAnd as you can see I have `com.fasterxml.jackson.datatype:jackson-datatype-jsr310`\r\n![Zrzut ekranu 2022-03-30 o 16 13 09](https://user-images.githubusercontent.com/1577725/160855572-160ceb52-2725-409f-972d-e31147bc183d.png)\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/timeline', 'performed_via_github_app': None}}",closed,Java
21248942238,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-12T14:18:23Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345', 'id': 1186527173, 'node_id': 'I_kwDOEMJUCs5GuPfF', 'number': 345, 'title': 'GraphQlTester created via `@GraphQlTest` does not use application JSON config', 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 3, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-12T13:08:35Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 4, 'created_at': '2022-03-30T14:13:55Z', 'updated_at': '2022-04-12T14:18:22Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'hi! \r\nI found another problem this time during testing. \r\nController:\r\n```kotlin\r\n\r\n@QueryMapping\r\n    suspend fun people(): Flow<PersonResponse> {\r\n            return service.getAllPeople().map {\r\n                PersonResponse(\r\n                    it.id!!,\r\n                    it.firstName,\r\n                    it.lastName,\r\n                    it.createdAt!!\r\n                )\r\n            }\r\n    }\r\n\r\n```\r\n\r\nTest:\r\n```kotlin\r\n @Test\r\n    fun `get all persons`() {\r\n        val person = Person(\r\n            UUID.randomUUID(),\r\n            firstName = ""Test"",\r\n            lastName = ""Test"",\r\n            createdAt = LocalDateTime.now()\r\n        )\r\n        \r\n        val personResponse = PersonResponse(\r\n            person.id!!,\r\n            person.firstName,\r\n            person.lastName,\r\n            person.createdAt!!\r\n        )\r\n        \r\n        coEvery { personService.getAllPeople() }.answers { flowOf(person) }\r\n        \r\n        graphQlTester.documentName(""getAllPeople"")\r\n            .execute()\r\n            .path(""people"")\r\n            .entityList(PersonResponse::class.java)\r\n            .hasSize(1)\r\n            .contains(personResponse)\r\n    }\r\n```\r\n\r\nquery: \r\n```graphql\r\nquery {\r\n    people {\r\n        id, firstName, lastName, createdAt\r\n    }\r\n}\r\n```\r\n\r\n\r\nerror:\r\n```\r\njava.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n\tat app//com.example.backendgraphql.person.PersonControllerTest.get all persons(PersonControllerTest.kt:44)\r\n```\r\n\r\nThis happened when I use data class for response object, when I use record from java I get :\r\n```\r\njava.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n```\r\n\r\nand record looks like that:\r\n```java \r\npublic record PersonResponse(\r\n        UUID id,\r\n        String firstName,\r\n        String lastName,\r\n        LocalDateTime createdAt\r\n) {\r\n}\r\n```\r\nAnd as you can see I have `com.fasterxml.jackson.datatype:jackson-datatype-jsr310`\r\n![Zrzut ekranu 2022-03-30 o 16 13 09](https://user-images.githubusercontent.com/1577725/160855572-160ceb52-2725-409f-972d-e31147bc183d.png)\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096791272', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345#issuecomment-1096791272', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'id': 1096791272, 'node_id': 'IC_kwDOEMJUCs5BX7To', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-12T14:18:22Z', 'updated_at': '2022-04-12T14:18:22Z', 'author_association': 'CONTRIBUTOR', 'body': ""I've exposed `Encoder` and `Decoder` on `ExecutionGraphQlServiceTester` but leaving this open for now, until we have corresponding changes on the Boot side for `@GraphQlTest`."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096791272/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21248868508,PushEvent,spring-projects/spring-graphql,0.0,2022-04-12T14:15:15Z,"{'push_id': 9606626011, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': '218b16e02277b585a04f805fe75f06e43a5995d2', 'before': '85dc2e514501dbd389d357499700e9b54f60ce31', 'commits': [{'sha': '218b16e02277b585a04f805fe75f06e43a5995d2', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'JSON config in ExecutionGraphQlServiceTester builder\n\nSee gh-345', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/218b16e02277b585a04f805fe75f06e43a5995d2'}]}",,Java
21247321404,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-12T13:07:46Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345', 'id': 1186527173, 'node_id': 'I_kwDOEMJUCs5GuPfF', 'number': 345, 'title': ""GraphqlTester - Jsonpath - don't use proper object mapper"", 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-30T14:13:55Z', 'updated_at': '2022-04-12T13:07:46Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'hi! \r\nI found another problem this time during testing. \r\nController:\r\n```kotlin\r\n\r\n@QueryMapping\r\n    suspend fun people(): Flow<PersonResponse> {\r\n            return service.getAllPeople().map {\r\n                PersonResponse(\r\n                    it.id!!,\r\n                    it.firstName,\r\n                    it.lastName,\r\n                    it.createdAt!!\r\n                )\r\n            }\r\n    }\r\n\r\n```\r\n\r\nTest:\r\n```kotlin\r\n @Test\r\n    fun `get all persons`() {\r\n        val person = Person(\r\n            UUID.randomUUID(),\r\n            firstName = ""Test"",\r\n            lastName = ""Test"",\r\n            createdAt = LocalDateTime.now()\r\n        )\r\n        \r\n        val personResponse = PersonResponse(\r\n            person.id!!,\r\n            person.firstName,\r\n            person.lastName,\r\n            person.createdAt!!\r\n        )\r\n        \r\n        coEvery { personService.getAllPeople() }.answers { flowOf(person) }\r\n        \r\n        graphQlTester.documentName(""getAllPeople"")\r\n            .execute()\r\n            .path(""people"")\r\n            .entityList(PersonResponse::class.java)\r\n            .hasSize(1)\r\n            .contains(personResponse)\r\n    }\r\n```\r\n\r\nquery: \r\n```graphql\r\nquery {\r\n    people {\r\n        id, firstName, lastName, createdAt\r\n    }\r\n}\r\n```\r\n\r\n\r\nerror:\r\n```\r\njava.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n\tat app//com.example.backendgraphql.person.PersonControllerTest.get all persons(PersonControllerTest.kt:44)\r\n```\r\n\r\nThis happened when I use data class for response object, when I use record from java I get :\r\n```\r\njava.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n```\r\n\r\nand record looks like that:\r\n```java \r\npublic record PersonResponse(\r\n        UUID id,\r\n        String firstName,\r\n        String lastName,\r\n        LocalDateTime createdAt\r\n) {\r\n}\r\n```\r\nAnd as you can see I have `com.fasterxml.jackson.datatype:jackson-datatype-jsr310`\r\n![Zrzut ekranu 2022-03-30 o 16 13 09](https://user-images.githubusercontent.com/1577725/160855572-160ceb52-2725-409f-972d-e31147bc183d.png)\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096705709', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345#issuecomment-1096705709', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'id': 1096705709, 'node_id': 'IC_kwDOEMJUCs5BXmat', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-12T13:07:46Z', 'updated_at': '2022-04-12T13:07:46Z', 'author_association': 'CONTRIBUTOR', 'body': ""Currently, no JSON config options are exposed in the `GraphQlTester.Builder`, but when use a transport-specific extension, e.g. HTTP, WebSocket, RSocket, the JSON config for the underlying client/transport, e.g. from `WebTestClient`, is detected and used.\r\n\r\n`@GraphQlTest` configures only a basic `GraphQlTester` for server side testing without any transport, so it doesn't benefit from this. We could expose some JSON config options on the builder for `ExecutionGraphQlTester`. @bclozel, what would be the most convenient config option there? Ultimately what's needed internally is an `Encoder` and `Decoder` pair.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096705709/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21245107518,PullRequestReviewCommentEvent,rstoyanchev/spring-framework,0.0,2022-04-12T11:06:33Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848308004', 'pull_request_review_id': 939353459, 'id': 848308004, 'node_id': 'PRRC_kwDOADEvl84ykCck', 'diff_hunk': '@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2002-2022 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.web.service.invoker;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.springframework.core.MethodParameter;\n+import org.springframework.core.ReactiveAdapter;\n+import org.springframework.core.ReactiveAdapterRegistry;\n+import org.springframework.core.convert.ConversionService;\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.lang.Nullable;\n+import org.springframework.util.StringUtils;\n+import org.springframework.web.bind.annotation.PathVariable;\n+\n+/**\n+ * An implementation of {@link HttpServiceMethodArgumentResolver} that resolves request path variables\n+ * based on method arguments annotated with {@link  PathVariable}. {@code null} values are allowed only if {@link PathVariable#required()}\n+ * is {@code true}.\n+ *\n+ * @author Olga Maciaszek-Sharma\n+ * @since 6.0\n+ */\n+public class PathVariableArgumentResolver implements HttpServiceMethodArgumentResolver {', 'path': 'spring-web/src/main/java/org/springframework/web/service/invoker/PathVariableArgumentResolver.java', 'position': 42, 'original_position': 42, 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'original_commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'I see a number of highlights in IntelliJ for nullability that should be resolved.\r\n\r\n', 'created_at': '2022-04-12T11:06:33Z', 'updated_at': '2022-04-12T11:14:27Z', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848308004', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848308004'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848308004'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}, 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848308004/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 42, 'original_line': 42, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21245107474,PullRequestReviewCommentEvent,rstoyanchev/spring-framework,0.0,2022-04-12T10:58:45Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848301031', 'pull_request_review_id': 939353459, 'id': 848301031, 'node_id': 'PRRC_kwDOADEvl84ykAvn', 'diff_hunk': '@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2002-2022 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.web.service.invoker;\n+\n+import java.time.Duration;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.springframework.core.ReactiveAdapterRegistry;\n+\n+/**\n+ * Contains utility methods for {@link HttpServiceMethod} tests.\n+ *\n+ * @author Rossen Stoyanchev\n+ * @author Olga Maciaszek-Sharma\n+ */\n+final class HttpServiceMethodTestUtils {', 'path': 'spring-web/src/test/java/org/springframework/web/service/invoker/HttpServiceMethodTestUtils.java', 'position': 31, 'original_position': 31, 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'original_commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Let's turn this into a base class `HttpServiceMethodTestSupport` with `TestHttpClientAdapter` as a protected nested inner class within it. The `createService` method would become a protected, instance method (not static), and the `TestHttpClientAdapter` instance would be a field in this base class, along with a getter for sub-classes, maybe a convenience getter for the `RequestDefinition`. \r\n"", 'created_at': '2022-04-12T10:58:45Z', 'updated_at': '2022-04-12T11:14:27Z', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848301031', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848301031'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848301031'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}, 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848301031/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 31, 'original_line': 31, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21245107501,PullRequestReviewCommentEvent,rstoyanchev/spring-framework,0.0,2022-04-12T11:09:29Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848310925', 'pull_request_review_id': 939353459, 'id': 848310925, 'node_id': 'PRRC_kwDOADEvl84ykDKN', 'diff_hunk': '@@ -0,0 +1,140 @@\n+/*\n+ * Copyright 2002-2022 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.web.service.invoker;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+\n+import org.springframework.core.MethodParameter;\n+import org.springframework.core.ReactiveAdapter;\n+import org.springframework.core.ReactiveAdapterRegistry;\n+import org.springframework.core.convert.ConversionService;\n+import org.springframework.core.convert.TypeDescriptor;\n+import org.springframework.lang.Nullable;\n+import org.springframework.util.StringUtils;\n+import org.springframework.web.bind.annotation.PathVariable;\n+\n+/**\n+ * An implementation of {@link HttpServiceMethodArgumentResolver} that resolves request path variables\n+ * based on method arguments annotated with {@link  PathVariable}. {@code null} values are allowed only if {@link PathVariable#required()}\n+ * is {@code true}.\n+ *\n+ * @author Olga Maciaszek-Sharma\n+ * @since 6.0\n+ */\n+public class PathVariableArgumentResolver implements HttpServiceMethodArgumentResolver {\n+\n+\tprivate static final Log LOG = LogFactory.getLog(PathVariableArgumentResolver.class);\n+\tprivate static final TypeDescriptor STRING_TYPE_DESCRIPTOR = TypeDescriptor.valueOf(String.class);\n+\tprivate final ConversionService conversionService;\n+\n+\tpublic PathVariableArgumentResolver(ConversionService conversionService) {\n+\t\tthis.conversionService = conversionService;\n+\t}\n+\n+\t// TODO: handle Maps without name in annotation\n+\t@Override\n+\tpublic void resolve(@Nullable Object argument, MethodParameter parameter, HttpRequestDefinition requestDefinition) {\n+\t\tif (!parameter.hasParameterAnnotation(PathVariable.class)) {\n+\t\t\treturn;\n+\t\t}\n+\t\tPathVariable annotation = parameter.getParameterAnnotation(PathVariable.class);\n+\t\tString resolvedAnnotationName = StringUtils.hasText(annotation.value()) ? annotation.value() : annotation.name();\n+\t\tObject resolvedArgument = resolveFromOptional(argument);\n+\t\tClass<?> type = parameter.nestedIfOptional().getNestedParameterType();\n+\t\tboolean required = annotation.required();\n+\t\tvalidateForReactiveWrapper(type);\n+\t\tvalidateForNullArgument(resolvedArgument, required);\n+\t\tif (Map.class.isAssignableFrom(type) && StringUtils.hasText(resolvedAnnotationName)) {\n+\t\t\tif (resolvedArgument instanceof Map<?, ?>) {\n+\t\t\t\tMap<?, ?> valueMap = (Map<?, ?>) resolvedArgument;\n+\t\t\t\taddNamedPathVariableFromMap(requestDefinition, valueMap, resolvedAnnotationName, required);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t\tString name = StringUtils.hasText(resolvedAnnotationName) ? resolvedAnnotationName : parameter.getParameterName();\n+\t\tString stringValue = convertToString(new TypeDescriptor(parameter.nestedIfOptional()), resolvedArgument);\n+\t\tif (LOG.isTraceEnabled()) {\n+\t\t\tLOG.trace(""Path variable "" + resolvedAnnotationName + "" resolved to "" + stringValue);\n+\t\t}\n+\t\trequestDefinition.getUriVariables().put(name, stringValue);', 'path': 'spring-web/src/main/java/org/springframework/web/service/invoker/PathVariableArgumentResolver.java', 'position': 77, 'original_position': 77, 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'original_commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""There is some overlap in adding a variable value, whether it's from a Map or not, including validation, type conversion, and logging). Maybe this could be encapsulated a little better. "", 'created_at': '2022-04-12T11:09:29Z', 'updated_at': '2022-04-12T11:14:27Z', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848310925', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848310925'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848310925'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}, 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848310925/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 77, 'original_line': 77, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21245107515,PullRequestReviewCommentEvent,rstoyanchev/spring-framework,0.0,2022-04-12T11:04:05Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848305702', 'pull_request_review_id': 939353459, 'id': 848305702, 'node_id': 'PRRC_kwDOADEvl84ykB4m', 'diff_hunk': '@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2002-2022 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.web.service.invoker;\n+\n+import java.util.Collections;\n+\n+import org.junit.jupiter.api.Test;\n+import reactor.core.publisher.Mono;\n+import reactor.test.StepVerifier;\n+\n+import org.springframework.http.HttpMethod;\n+import org.springframework.web.service.annotation.GetRequest;\n+import org.springframework.web.service.annotation.HttpRequest;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.springframework.web.service.invoker.HttpServiceMethodTestUtils.createService;\n+\n+/**\n+ * Tests for {@link HttpMethodArgumentResolver}.\n+ *\n+ * @author Olga Maciaszek-Sharma\n+ */\n+class HttpMethodArgumentResolverTests {\n+\n+\tprivate final TestHttpClientAdapter clientAdapter = new TestHttpClientAdapter();\n+\tprivate final Service service = createService(Service.class, clientAdapter, Collections.singletonList(new HttpMethodArgumentResolver()));\n+\n+\t@Test\n+\tvoid shouldResolveRequestMethodFromArgument() {\n+\t\tMono<Void> execution = service.execute(HttpMethod.GET);\n+\n+\t\tStepVerifier.create(execution).verifyComplete();\n+\t\tassertThat(clientAdapter.getRequestDefinition()\n+\t\t\t\t.getHttpMethod()).isEqualTo(HttpMethod.GET);\n+\t}\n+\n+\t@Test\n+\tvoid shouldIgnoreArgumentsNotMatchingType() {\n+\t\tMono<Void> execution = service.execute(""test"");\n+\n+\t\tStepVerifier.create(execution).verifyComplete();\n+\t\tassertThat(clientAdapter.getRequestDefinition()\n+\t\t\t\t.getHttpMethod()).isNull();\n+\t}\n+\n+\t@Test\n+\tvoid shouldOverrideMethodAnnotationWithMethodArgument() {\n+\t\tMono<Void> execution = service.executeGet(HttpMethod.POST);\n+\n+\t\tStepVerifier.create(execution).verifyComplete();\n+\t\tassertThat(clientAdapter.getRequestDefinition()\n+\t\t\t\t.getHttpMethod()).isEqualTo(HttpMethod.POST);\n+\t}\n+\n+\t@Test\n+\tvoid shouldOverrideMethodWithSubsequentMethodArgument() {', 'path': 'spring-web/src/test/java/org/springframework/web/service/invoker/HttpMethodArgumentResolverTests.java', 'position': 70, 'original_position': 70, 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'original_commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Maybe we don't need to explicitly have a test for this. In other words, we don't officially support endorse, or expect this. It happens to work as the test shows, but in practice I don't see a reason to do this in an, and while we could reject, I'm not sure it's worth the trouble."", 'created_at': '2022-04-12T11:04:05Z', 'updated_at': '2022-04-12T11:14:27Z', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848305702', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848305702'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#discussion_r848305702'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}, 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments/848305702/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 70, 'original_line': 70, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21245107445,PullRequestReviewEvent,rstoyanchev/spring-framework,0.0,2022-04-12T11:14:28Z,"{'action': 'created', 'review': {'id': 939353459, 'node_id': 'PRR_kwDOADEvl843_WVz', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Good start.\r\n\r\nIn addition to specific feedback, a more general comment on styling. Take a look through our [Code Style](https://github.com/spring-projects/spring-framework/wiki/Code-Style) page. In particular, see the part about line wrapping (80 for Javadoc, aiming for 90-105 otherwise, and avoiding > 120). You can also create a Spring Framework profile and import our settings. In addition.', 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'submitted_at': '2022-04-12T11:14:27Z', 'state': 'changes_requested', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#pullrequestreview-939353459', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#pullrequestreview-939353459'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21245107393,PullRequestReviewEvent,rstoyanchev/spring-framework,0.0,2022-04-12T11:14:27Z,"{'action': 'created', 'review': {'id': 939353459, 'node_id': 'PRR_kwDOADEvl843_WVz', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Good start.\r\n\r\nIn addition to specific feedback, a more general comment on styling. Take a look through our [Code Style](https://github.com/spring-projects/spring-framework/wiki/Code-Style) page. In particular, see the part about line wrapping (80 for Javadoc, aiming for 90-105 otherwise, and avoiding > 120). You can also create a Spring Framework profile and import our settings. In addition.', 'commit_id': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'submitted_at': '2022-04-12T11:14:27Z', 'state': 'changes_requested', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17#pullrequestreview-939353459', 'pull_request_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'author_association': 'OWNER', '_links': {'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17#pullrequestreview-939353459'}, 'pull_request': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17', 'id': 906343419, 'node_id': 'PR_kwDOADEvl842BbP7', 'html_url': 'https://github.com/rstoyanchev/spring-framework/pull/17', 'diff_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.diff', 'patch_url': 'https://github.com/rstoyanchev/spring-framework/pull/17.patch', 'issue_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17', 'number': 17, 'state': 'open', 'locked': False, 'title': 'Add first method argument resolvers', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Add HttpMethod and PathVariable resolvers.', 'created_at': '2022-04-11T18:35:23Z', 'updated_at': '2022-04-12T11:14:27Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': 'fe3a70f5db39e80ff205d745061a554f551dbff8', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits', 'review_comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments', 'review_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50', 'head': {'label': 'OlgaMaciaszek:add-first-method-argument-resolvers', 'ref': 'add-first-method-argument-resolvers', 'sha': 'b687f779a142dcf487b8f236eb239dc1ae591f50', 'user': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 478584495, 'node_id': 'R_kgDOHIaerw', 'name': 'spring-framework', 'full_name': 'OlgaMaciaszek/spring-framework', 'private': False, 'owner': {'login': 'OlgaMaciaszek', 'id': 4328892, 'node_id': 'MDQ6VXNlcjQzMjg4OTI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4328892?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlgaMaciaszek', 'html_url': 'https://github.com/OlgaMaciaszek', 'followers_url': 'https://api.github.com/users/OlgaMaciaszek/followers', 'following_url': 'https://api.github.com/users/OlgaMaciaszek/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlgaMaciaszek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlgaMaciaszek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlgaMaciaszek/subscriptions', 'organizations_url': 'https://api.github.com/users/OlgaMaciaszek/orgs', 'repos_url': 'https://api.github.com/users/OlgaMaciaszek/repos', 'events_url': 'https://api.github.com/users/OlgaMaciaszek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlgaMaciaszek/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework', 'forks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/OlgaMaciaszek/spring-framework/deployments', 'created_at': '2022-04-06T14:00:01Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:33:52Z', 'git_url': 'git://github.com/OlgaMaciaszek/spring-framework.git', 'ssh_url': 'git@github.com:OlgaMaciaszek/spring-framework.git', 'clone_url': 'https://github.com/OlgaMaciaszek/spring-framework.git', 'svn_url': 'https://github.com/OlgaMaciaszek/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150841, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 0, 'default_branch': 'master'}}, 'base': {'label': 'rstoyanchev:http-contract-client', 'ref': 'http-contract-client', 'sha': '93ba51ddc1dddd23175584323c49222eda310c26', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 3223447, 'node_id': 'MDEwOlJlcG9zaXRvcnkzMjIzNDQ3', 'name': 'spring-framework', 'full_name': 'rstoyanchev/spring-framework', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-framework', 'description': 'The Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-framework/deployments', 'created_at': '2012-01-20T03:27:25Z', 'updated_at': '2021-05-11T10:04:18Z', 'pushed_at': '2022-04-11T18:35:24Z', 'git_url': 'git://github.com/rstoyanchev/spring-framework.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-framework.git', 'clone_url': 'https://github.com/rstoyanchev/spring-framework.git', 'svn_url': 'https://github.com/rstoyanchev/spring-framework', 'homepage': 'http://springsource.org/spring-framework', 'size': 150815, 'stargazers_count': 11, 'watchers_count': 11, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 4, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1, 'license': None, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 4, 'open_issues': 1, 'watchers': 11, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17'}, 'html': {'href': 'https://github.com/rstoyanchev/spring-framework/pull/17'}, 'issue': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17'}, 'comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/issues/17/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/pulls/17/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rstoyanchev/spring-framework/statuses/b687f779a142dcf487b8f236eb239dc1ae591f50'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
21243432304,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-12T09:48:58Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/347', 'id': 1192019740, 'node_id': 'I_kwDOEMJUCs5HDMcc', 'number': 347, 'title': 'Use ReactorContext from ThreadLocalAccessor in WebGraphQlHandlerInterceptor', 'user': {'login': 'alejandropm-san', 'id': 91869906, 'node_id': 'U_kgDOBXnS0g', 'avatar_url': 'https://avatars.githubusercontent.com/u/91869906?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/alejandropm-san', 'html_url': 'https://github.com/alejandropm-san', 'followers_url': 'https://api.github.com/users/alejandropm-san/followers', 'following_url': 'https://api.github.com/users/alejandropm-san/following{/other_user}', 'gists_url': 'https://api.github.com/users/alejandropm-san/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/alejandropm-san/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/alejandropm-san/subscriptions', 'organizations_url': 'https://api.github.com/users/alejandropm-san/orgs', 'repos_url': 'https://api.github.com/users/alejandropm-san/repos', 'events_url': 'https://api.github.com/users/alejandropm-san/events{/privacy}', 'received_events_url': 'https://api.github.com/users/alejandropm-san/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-04-04T16:16:10Z', 'updated_at': '2022-04-12T09:48:57Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""Hi, I want to access the values saved in ReactorContext by my ThreadLocalAccessor impl in a WebGraphQlHandlerInterceptor, but ReactorContextManager save them inside a map using a private Key name and from what i could see there isn't a way for retrieving those values without declaring again the Key name in my project. Am I right? Is there going to be a better way to do this?\r\n\r\nAs i understood, ThreadLocalAccessor extract and restore Servlet context from/to DataFetchers, what about WebGraphQlHandlerInterceptor? Am i missing something?\r\n\r\nThanks in advance."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096468152', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/347#issuecomment-1096468152', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/347', 'id': 1096468152, 'node_id': 'IC_kwDOEMJUCs5BWsa4', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-12T09:48:57Z', 'updated_at': '2022-04-12T09:48:57Z', 'author_association': 'CONTRIBUTOR', 'body': ""I presume that you want to access them as `ThreadLocal` values? Currently we don't restore context for interceptors but we can do that."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1096468152/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21243207338,PullRequestEvent,spring-projects/spring-boot,0.0,2022-04-12T09:38:39Z,"{'action': 'opened', 'number': 30641, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641', 'id': 907397385, 'node_id': 'PR_kwDOAGAU1s42FckJ', 'html_url': 'https://github.com/spring-projects/spring-boot/pull/30641', 'diff_url': 'https://github.com/spring-projects/spring-boot/pull/30641.diff', 'patch_url': 'https://github.com/spring-projects/spring-boot/pull/30641.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30641', 'number': 30641, 'state': 'open', 'locked': False, 'title': 'Update initialization of WebSocket handler in GraphQlWebMvcAutoConfiguration', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""`GraphQlWebSocketHandler` now exposes a method to create the `WebSocketHttpRequestHandler` instance to use, that's pre-configured with a `HandshakeInterceptor` for context propagation. This is a result of changes for  https://github.com/spring-projects/spring-graphql/issues/342.\r\n\r\nThis pull request updates how the `WebSocketHttpRequestHandler` is created in the auto configuration, making use of this new method, in order to complete the fix for https://github.com/spring-projects/spring-graphql/issues/342.\r\n\r\n"", 'created_at': '2022-04-12T09:38:38Z', 'updated_at': '2022-04-12T09:38:38Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': None, 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30641/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-boot/statuses/97c248da1d1d24e38acc27df0bc283337a2abb27', 'head': {'label': 'rstoyanchev:graphql-websocket-context-propagation', 'ref': 'graphql-websocket-context-propagation', 'sha': '97c248da1d1d24e38acc27df0bc283337a2abb27', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 95816277, 'node_id': 'MDEwOlJlcG9zaXRvcnk5NTgxNjI3Nw==', 'name': 'spring-boot', 'full_name': 'rstoyanchev/spring-boot', 'private': False, 'owner': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/rstoyanchev/spring-boot', 'description': 'Spring Boot', 'fork': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-boot', 'forks_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/forks', 'keys_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/teams', 'hooks_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/hooks', 'issue_events_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/events', 'assignees_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/tags', 'blobs_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/languages', 'stargazers_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/stargazers', 'contributors_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/contributors', 'subscribers_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/subscribers', 'subscription_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/subscription', 'commits_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/merges', 'archive_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/downloads', 'issues_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/labels{/name}', 'releases_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rstoyanchev/spring-boot/deployments', 'created_at': '2017-06-29T20:21:18Z', 'updated_at': '2021-12-20T01:58:15Z', 'pushed_at': '2022-04-12T09:31:18Z', 'git_url': 'git://github.com/rstoyanchev/spring-boot.git', 'ssh_url': 'git@github.com:rstoyanchev/spring-boot.git', 'clone_url': 'https://github.com/rstoyanchev/spring-boot.git', 'svn_url': 'https://github.com/rstoyanchev/spring-boot', 'homepage': 'http://projects.spring.io/spring-boot', 'size': 142112, 'stargazers_count': 3, 'watchers_count': 3, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 1, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 1, 'open_issues': 0, 'watchers': 3, 'default_branch': 'master'}}, 'base': {'label': 'spring-projects:2.7.x', 'ref': '2.7.x', 'sha': 'b8b903527a89d20e16758c053c5ba843ad47a598', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 6296790, 'node_id': 'MDEwOlJlcG9zaXRvcnk2Mjk2Nzkw', 'name': 'spring-boot', 'full_name': 'spring-projects/spring-boot', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-boot', 'description': 'Spring Boot', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-boot', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-boot/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-boot/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-boot/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-boot/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-boot/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-boot/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-boot/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-boot/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-boot/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-boot/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-boot/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-boot/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-boot/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-boot/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-boot/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-boot/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-boot/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-boot/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-boot/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-boot/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-boot/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-boot/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-boot/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-boot/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-boot/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-boot/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-boot/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-boot/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-boot/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-boot/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-boot/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-boot/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-boot/deployments', 'created_at': '2012-10-19T15:02:57Z', 'updated_at': '2022-04-12T09:30:59Z', 'pushed_at': '2022-04-12T07:00:02Z', 'git_url': 'git://github.com/spring-projects/spring-boot.git', 'ssh_url': 'git@github.com:spring-projects/spring-boot.git', 'clone_url': 'https://github.com/spring-projects/spring-boot.git', 'svn_url': 'https://github.com/spring-projects/spring-boot', 'homepage': 'https://spring.io/projects/spring-boot', 'size': 149118, 'stargazers_count': 60558, 'watchers_count': 60558, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': True, 'forks_count': 36155, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 613, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['framework', 'java', 'spring', 'spring-boot'], 'visibility': 'public', 'forks': 36155, 'open_issues': 613, 'watchers': 60558, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641'}, 'html': {'href': 'https://github.com/spring-projects/spring-boot/pull/30641'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30641'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30641/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/pulls/30641/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-boot/statuses/97c248da1d1d24e38acc27df0bc283337a2abb27'}}, 'author_association': 'CONTRIBUTOR', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': None, 'rebaseable': None, 'mergeable_state': 'unknown', 'merged_by': None, 'comments': 0, 'review_comments': 0, 'maintainer_can_modify': True, 'commits': 1, 'additions': 1, 'deletions': 1, 'changed_files': 1}}",opened,Java
21243067739,CreateEvent,rstoyanchev/spring-boot,0.0,2022-04-12T09:32:19Z,"{'ref': 'graphql-websocket-context-propagation', 'ref_type': 'branch', 'master_branch': 'master', 'description': 'Spring Boot', 'pusher_type': 'user'}",,Java
21242533097,PushEvent,spring-projects/spring-graphql,0.0,2022-04-12T09:07:58Z,"{'push_id': 9603611995, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': '85dc2e514501dbd389d357499700e9b54f60ce31', 'before': 'e2948e9a36535f2ad794f833ce9213b99068a3be', 'commits': [{'sha': '85dc2e514501dbd389d357499700e9b54f60ce31', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Propagate context in WebMvc GraphQlWebSocketHandler\n\nSee gh-342', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/85dc2e514501dbd389d357499700e9b54f60ce31'}]}",,Java
21227169566,PushEvent,spring-projects/spring-graphql,0.0,2022-04-11T16:42:08Z,"{'push_id': 9596474153, 'size': 3, 'distinct_size': 3, 'ref': 'refs/heads/main', 'head': 'e2948e9a36535f2ad794f833ce9213b99068a3be', 'before': 'e455ebb3d819470225ff5a43c59611a14c477ea5', 'commits': [{'sha': 'c4f91713ca9e6bfaedfb0c01b2381a1387d3f7a5', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revert ""Temporarily disable samples""', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/c4f91713ca9e6bfaedfb0c01b2381a1387d3f7a5'}, {'sha': '27f485de84068d19497fb468ff6fdb35e038a3a4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revert ""Pin samples to 1.0.0-M6""', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/27f485de84068d19497fb468ff6fdb35e038a3a4'}, {'sha': 'e2948e9a36535f2ad794f833ce9213b99068a3be', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Upgrade samples to the latest snapshot', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/e2948e9a36535f2ad794f833ce9213b99068a3be'}]}",,Java
21220192615,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-11T11:10:58Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069', 'id': 1141194760, 'node_id': 'I_kwDOABGHUc5EBUAI', 'number': 28069, 'title': 'Controlling flashmap from a ModelAndView', 'user': {'login': 'sijskes', 'id': 1328869, 'node_id': 'MDQ6VXNlcjEzMjg4Njk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1328869?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijskes', 'html_url': 'https://github.com/sijskes', 'followers_url': 'https://api.github.com/users/sijskes/followers', 'following_url': 'https://api.github.com/users/sijskes/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijskes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijskes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijskes/subscriptions', 'organizations_url': 'https://api.github.com/users/sijskes/orgs', 'repos_url': 'https://api.github.com/users/sijskes/repos', 'events_url': 'https://api.github.com/users/sijskes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijskes/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-04-11T11:10:57Z', 'due_on': None, 'closed_at': None}, 'comments': 6, 'created_at': '2022-02-17T11:07:45Z', 'updated_at': '2022-04-11T11:10:57Z', 'closed_at': '2022-04-11T11:10:57Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Currently (Spring Boot2.6.2) it is not possible to add flashmap attributes to a `ModelAndView`.\r\n\r\nIn the `ModelAndView` constructor, the flash attributes from a `RedirectAttributesModelMap` are not merged into the regular `ModelMap` contained in `ModelAndView`. \r\n\r\nThe test in `RequestMappingHandlerAdapter.getModelAndView` for `RedirectAttributes` fails, because the `ModelAndView` reads the attributes from the `RedirectAttributesModelMap` and merges them into the already existing `ModelMap` in `ModelAndView`.\r\n\r\nThe only way now to cause the `ModelMap` to be an instance of `RedirectAttributes` is by adding a `RedirectAttributes` to the `Controller` method.\r\n\r\nWhat was expected is that the `RedirectAttributesModelMap` was passed to the `ModelAndViewContainer` so it could be picked up by the test in `RequestMappingHandlerAdapter.getModelAndView()`.\r\n\r\nIf a `RedirectAttributesModelMap` could turn up in `RequestMappingHandlerAdapter.getModelAndView` it would be a beautiful way to create a `View` factory returning a `ModelAndView` (with flash attributes) without having to signal this in the `Controller` method. And providing a clean separation. \r\n\r\nA workaround currently is to fetch the flashmap via `RequestContextUtils`, but that looks like a kludge.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1094919226', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069#issuecomment-1094919226', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'id': 1094919226, 'node_id': 'IC_kwDOABGHUc5BQyQ6', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-11T11:10:57Z', 'updated_at': '2022-04-11T11:10:57Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for the feedback. I've created #28324 to revisit this area in more detail for 6.0."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1094919226/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21220192650,IssuesEvent,spring-projects/spring-framework,0.0,2022-04-11T11:10:58Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069', 'id': 1141194760, 'node_id': 'I_kwDOABGHUc5EBUAI', 'number': 28069, 'title': 'Controlling flashmap from a ModelAndView', 'user': {'login': 'sijskes', 'id': 1328869, 'node_id': 'MDQ6VXNlcjEzMjg4Njk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1328869?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijskes', 'html_url': 'https://github.com/sijskes', 'followers_url': 'https://api.github.com/users/sijskes/followers', 'following_url': 'https://api.github.com/users/sijskes/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijskes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijskes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijskes/subscriptions', 'organizations_url': 'https://api.github.com/users/sijskes/orgs', 'repos_url': 'https://api.github.com/users/sijskes/repos', 'events_url': 'https://api.github.com/users/sijskes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijskes/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-04-11T11:10:57Z', 'due_on': None, 'closed_at': None}, 'comments': 6, 'created_at': '2022-02-17T11:07:45Z', 'updated_at': '2022-04-11T11:10:57Z', 'closed_at': '2022-04-11T11:10:57Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Currently (Spring Boot2.6.2) it is not possible to add flashmap attributes to a `ModelAndView`.\r\n\r\nIn the `ModelAndView` constructor, the flash attributes from a `RedirectAttributesModelMap` are not merged into the regular `ModelMap` contained in `ModelAndView`. \r\n\r\nThe test in `RequestMappingHandlerAdapter.getModelAndView` for `RedirectAttributes` fails, because the `ModelAndView` reads the attributes from the `RedirectAttributesModelMap` and merges them into the already existing `ModelMap` in `ModelAndView`.\r\n\r\nThe only way now to cause the `ModelMap` to be an instance of `RedirectAttributes` is by adding a `RedirectAttributes` to the `Controller` method.\r\n\r\nWhat was expected is that the `RedirectAttributesModelMap` was passed to the `ModelAndViewContainer` so it could be picked up by the test in `RequestMappingHandlerAdapter.getModelAndView()`.\r\n\r\nIf a `RedirectAttributesModelMap` could turn up in `RequestMappingHandlerAdapter.getModelAndView` it would be a beautiful way to create a `View` factory returning a `ModelAndView` (with flash attributes) without having to signal this in the `Controller` method. And providing a clean separation. \r\n\r\nA workaround currently is to fetch the flashmap via `RequestContextUtils`, but that looks like a kludge.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/timeline', 'performed_via_github_app': None}}",closed,Java
21220133868,IssuesEvent,spring-projects/spring-framework,0.0,2022-04-11T11:07:49Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28324', 'id': 1199810079, 'node_id': 'I_kwDOABGHUc5Hg6Yf', 'number': 28324, 'title': 'Review ""default"" vs redirect model default settings and API ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/287', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287/labels', 'id': 7605225, 'node_id': 'MI_kwDOABGHUc4AdAvp', 'number': 287, 'title': '6.0.0-M4', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 35, 'closed_issues': 15, 'state': 'open', 'created_at': '2022-01-24T17:15:01Z', 'updated_at': '2022-04-11T11:07:48Z', 'due_on': '2022-05-11T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-04-11T11:07:48Z', 'updated_at': '2022-04-11T11:07:48Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""It's been a long time since this API and available options have been considered, and as per the discussion under #28069, we should review for potential changes towards 6.0.\r\n\r\nOne option would be to provide a `Rendering` API that aligns with what is available in WebFlux.\r\n\r\nIn the very least, we can deprecate the `ignoreDefaultModelOnRedirect` option on `RequestMappingHandlerAdapter` and change its default setting."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28324/timeline', 'performed_via_github_app': None}}",opened,Java
21219934201,IssuesEvent,spring-projects/spring-framework,0.0,2022-04-11T10:56:29Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653', 'id': 1047355222, 'node_id': 'I_kwDOABGHUc4-bV9W', 'number': 27653, 'title': 'When using HandshakeInterceptor with ServerHttpAsyncRequestControl, Jetty10RequestUpgradeStrategy throws exception due to null servletContext', 'user': {'login': 'ajr3-gen', 'id': 93659748, 'node_id': 'U_kgDOBZUiZA', 'avatar_url': 'https://avatars.githubusercontent.com/u/93659748?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ajr3-gen', 'html_url': 'https://github.com/ajr3-gen', 'followers_url': 'https://api.github.com/users/ajr3-gen/followers', 'following_url': 'https://api.github.com/users/ajr3-gen/following{/other_user}', 'gists_url': 'https://api.github.com/users/ajr3-gen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ajr3-gen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ajr3-gen/subscriptions', 'organizations_url': 'https://api.github.com/users/ajr3-gen/orgs', 'repos_url': 'https://api.github.com/users/ajr3-gen/repos', 'events_url': 'https://api.github.com/users/ajr3-gen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ajr3-gen/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-04-11T10:56:28Z', 'due_on': None, 'closed_at': None}, 'comments': 11, 'created_at': '2021-11-03T14:45:18Z', 'updated_at': '2022-04-11T10:56:29Z', 'closed_at': '2022-04-11T10:56:28Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""We are upgrading our project from Jetty v9 to v10 and have encountered a problem with the new spring-boot Jetty implementation.\r\n\r\nOur WebSocketController includes a custom HandshakeInterceptor.  In the beforeHandshake() method, we use this line:\r\n```\r\n        ServerHttpAsyncRequestControl requestControl = request.getAsyncRequestControl(response);\r\n        requestControl.start();\r\n```\r\nso that we can authorize the request before completing it.  We do that authorization in a separate thread and then call DefaultHandshakeHandler to complete the handshake:\r\n```\r\n        handshakeHandler.doHandshake(request, response, wsHandler, attributes);\r\n        requestControl.complete();\r\n```\r\nwhile the beforeHandshake method exits on the main thread.\r\n\r\nThis worked fine with Jetty v9 (which is implemented in spring-boot via the class `org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy`).  However, with Jetty v10 (which uses a new class: `org.springframework.web.socket.server.jetty.Jetty10RequestUpgradeStrategy`), there is a NullPointerException.  This is because Jetty10RequestUpgradeStrategy uses reflection to invoke `JettyWebSocketServerContainer getContainer(ServletContext servletContext)` which tries to resolve an attribute from the request's servletContext -- **but servletContext has now been cleared out** as we have exited the beforeHandshake() method on the main thread.\r\n\r\nI confirmed this by adding a Thread.sleep() to our beforeHandshake() method to delay it from returning for a couple of seconds, and this allowed the thread with DefaultHandshakeHandler to complete.  Without this delay, we catch this error and the handshake does not complete:\r\n`    org.springframework.web.socket.server.HandshakeFailureException: Failed to upgrade; nested exception is java.lang.NullPointerException`\r\n\r\nVersions used:\r\nspring.boot = 2.5.6\r\njetty.version = 10.0.6\r\nspring.framework = 5.3.12\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/timeline', 'performed_via_github_app': None}}",closed,Java
21219934135,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-11T10:56:29Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653', 'id': 1047355222, 'node_id': 'I_kwDOABGHUc4-bV9W', 'number': 27653, 'title': 'When using HandshakeInterceptor with ServerHttpAsyncRequestControl, Jetty10RequestUpgradeStrategy throws exception due to null servletContext', 'user': {'login': 'ajr3-gen', 'id': 93659748, 'node_id': 'U_kgDOBZUiZA', 'avatar_url': 'https://avatars.githubusercontent.com/u/93659748?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ajr3-gen', 'html_url': 'https://github.com/ajr3-gen', 'followers_url': 'https://api.github.com/users/ajr3-gen/followers', 'following_url': 'https://api.github.com/users/ajr3-gen/following{/other_user}', 'gists_url': 'https://api.github.com/users/ajr3-gen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ajr3-gen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ajr3-gen/subscriptions', 'organizations_url': 'https://api.github.com/users/ajr3-gen/orgs', 'repos_url': 'https://api.github.com/users/ajr3-gen/repos', 'events_url': 'https://api.github.com/users/ajr3-gen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ajr3-gen/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-04-11T10:56:28Z', 'due_on': None, 'closed_at': None}, 'comments': 10, 'created_at': '2021-11-03T14:45:18Z', 'updated_at': '2022-04-11T10:56:28Z', 'closed_at': '2022-04-11T10:56:28Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""We are upgrading our project from Jetty v9 to v10 and have encountered a problem with the new spring-boot Jetty implementation.\r\n\r\nOur WebSocketController includes a custom HandshakeInterceptor.  In the beforeHandshake() method, we use this line:\r\n```\r\n        ServerHttpAsyncRequestControl requestControl = request.getAsyncRequestControl(response);\r\n        requestControl.start();\r\n```\r\nso that we can authorize the request before completing it.  We do that authorization in a separate thread and then call DefaultHandshakeHandler to complete the handshake:\r\n```\r\n        handshakeHandler.doHandshake(request, response, wsHandler, attributes);\r\n        requestControl.complete();\r\n```\r\nwhile the beforeHandshake method exits on the main thread.\r\n\r\nThis worked fine with Jetty v9 (which is implemented in spring-boot via the class `org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy`).  However, with Jetty v10 (which uses a new class: `org.springframework.web.socket.server.jetty.Jetty10RequestUpgradeStrategy`), there is a NullPointerException.  This is because Jetty10RequestUpgradeStrategy uses reflection to invoke `JettyWebSocketServerContainer getContainer(ServletContext servletContext)` which tries to resolve an attribute from the request's servletContext -- **but servletContext has now been cleared out** as we have exited the beforeHandshake() method on the main thread.\r\n\r\nI confirmed this by adding a Thread.sleep() to our beforeHandshake() method to delay it from returning for a couple of seconds, and this allowed the thread with DefaultHandshakeHandler to complete.  Without this delay, we catch this error and the handshake does not complete:\r\n`    org.springframework.web.socket.server.HandshakeFailureException: Failed to upgrade; nested exception is java.lang.NullPointerException`\r\n\r\nVersions used:\r\nspring.boot = 2.5.6\r\njetty.version = 10.0.6\r\nspring.framework = 5.3.12\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1094905437', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653#issuecomment-1094905437', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'id': 1094905437, 'node_id': 'IC_kwDOABGHUc5BQu5d', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-11T10:56:28Z', 'updated_at': '2022-04-11T10:56:28Z', 'author_association': 'CONTRIBUTOR', 'body': ""Okay, I'm closing for now, but feel free to add comments if needed."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1094905437/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21185357329,IssueCommentEvent,github/advisory-database,0.0,2022-04-08T12:11:10Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/github/advisory-database/issues/176', 'repository_url': 'https://api.github.com/repos/github/advisory-database', 'labels_url': 'https://api.github.com/repos/github/advisory-database/issues/176/labels{/name}', 'comments_url': 'https://api.github.com/repos/github/advisory-database/issues/176/comments', 'events_url': 'https://api.github.com/repos/github/advisory-database/issues/176/events', 'html_url': 'https://github.com/github/advisory-database/pull/176', 'id': 1191532407, 'node_id': 'PR_kwDOG1IWlc41kp07', 'number': 176, 'title': 'Contribution to ""Remote Code Execution in Spring Framework""', 'user': {'login': 'cdupuis', 'id': 206707, 'node_id': 'MDQ6VXNlcjIwNjcwNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/206707?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cdupuis', 'html_url': 'https://github.com/cdupuis', 'followers_url': 'https://api.github.com/users/cdupuis/followers', 'following_url': 'https://api.github.com/users/cdupuis/following{/other_user}', 'gists_url': 'https://api.github.com/users/cdupuis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cdupuis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cdupuis/subscriptions', 'organizations_url': 'https://api.github.com/users/cdupuis/orgs', 'repos_url': 'https://api.github.com/users/cdupuis/repos', 'events_url': 'https://api.github.com/users/cdupuis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cdupuis/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 7, 'created_at': '2022-04-04T09:51:40Z', 'updated_at': '2022-04-08T12:11:10Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/github/advisory-database/pulls/176', 'html_url': 'https://github.com/github/advisory-database/pull/176', 'diff_url': 'https://github.com/github/advisory-database/pull/176.diff', 'patch_url': 'https://github.com/github/advisory-database/pull/176.patch', 'merged_at': None}, 'body': '**Updates**\r\n- Affected products\r\n\r\nAs per the Spring framework core contributor @rstoyanchev in https://github.com/github/advisory-database/pull/169#issuecomment-1086127921 `spring-beans` alone is _not_ vulnerable and _should_ not be included in this advisory. \r\n\r\nKeeping `spring-beans` in this advisory will flag every Spring application to be vulnerable to CVE-2022-22965 aka Spring4Shell when it is commonly agreed the vulnerability can only be exploited via `spring-webmvc` and/or `spring-webflux` as described in https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement#am-i-impacted.\r\n\r\nPlease consider removing `spring-beans` from the advisory by merging this PR. Thanks.', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/176/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/github/advisory-database/issues/176/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1092794872', 'html_url': 'https://github.com/github/advisory-database/pull/176#issuecomment-1092794872', 'issue_url': 'https://api.github.com/repos/github/advisory-database/issues/176', 'id': 1092794872, 'node_id': 'IC_kwDOG1IWlc5BIrn4', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-08T12:11:10Z', 'updated_at': '2022-04-08T12:11:10Z', 'author_association': 'NONE', 'body': 'Can you elaborate on how this can be used as part of a class loader attack without a web layer?', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1092794872/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,
21116834795,IssueCommentEvent,github/advisory-database,0.0,2022-04-05T09:26:52Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/github/advisory-database/issues/176', 'repository_url': 'https://api.github.com/repos/github/advisory-database', 'labels_url': 'https://api.github.com/repos/github/advisory-database/issues/176/labels{/name}', 'comments_url': 'https://api.github.com/repos/github/advisory-database/issues/176/comments', 'events_url': 'https://api.github.com/repos/github/advisory-database/issues/176/events', 'html_url': 'https://github.com/github/advisory-database/pull/176', 'id': 1191532407, 'node_id': 'PR_kwDOG1IWlc41kp07', 'number': 176, 'title': 'Contribution to ""Remote Code Execution in Spring Framework""', 'user': {'login': 'cdupuis', 'id': 206707, 'node_id': 'MDQ6VXNlcjIwNjcwNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/206707?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cdupuis', 'html_url': 'https://github.com/cdupuis', 'followers_url': 'https://api.github.com/users/cdupuis/followers', 'following_url': 'https://api.github.com/users/cdupuis/following{/other_user}', 'gists_url': 'https://api.github.com/users/cdupuis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cdupuis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cdupuis/subscriptions', 'organizations_url': 'https://api.github.com/users/cdupuis/orgs', 'repos_url': 'https://api.github.com/users/cdupuis/repos', 'events_url': 'https://api.github.com/users/cdupuis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cdupuis/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2022-04-04T09:51:40Z', 'updated_at': '2022-04-05T09:26:52Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/github/advisory-database/pulls/176', 'html_url': 'https://github.com/github/advisory-database/pull/176', 'diff_url': 'https://github.com/github/advisory-database/pull/176.diff', 'patch_url': 'https://github.com/github/advisory-database/pull/176.patch', 'merged_at': None}, 'body': '**Updates**\r\n- Affected products\r\n\r\nAs per the Spring framework core contributor @rstoyanchev in https://github.com/github/advisory-database/pull/169#issuecomment-1086127921 `spring-beans` alone is _not_ vulnerable and _should_ not be included in this advisory. \r\n\r\nKeeping `spring-beans` in this advisory will flag every Spring application to be vulnerable to CVE-2022-22965 aka Spring4Shell when it is commonly agreed the vulnerability can only be exploited via `spring-webmvc` and/or `spring-webflux` as described in https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement#am-i-impacted.\r\n\r\nPlease consider removing `spring-beans` from the advisory by merging this PR. Thanks.', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/176/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/github/advisory-database/issues/176/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1088475975', 'html_url': 'https://github.com/github/advisory-database/pull/176#issuecomment-1088475975', 'issue_url': 'https://api.github.com/repos/github/advisory-database/issues/176', 'id': 1088475975, 'node_id': 'IC_kwDOG1IWlc5A4NNH', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-05T09:26:51Z', 'updated_at': '2022-04-05T09:26:51Z', 'author_association': 'NONE', 'body': '@darakian no one is saying that spring-beans did not change but rather that a change in a specific module does not make it vulnerable. Please, read my https://github.com/github/advisory-database/pull/169#issuecomment-1086127921.', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1088475975/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,
21072299915,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-01T20:40:56Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/308', 'id': 1148582857, 'node_id': 'I_kwDOEMJUCs5EdfvJ', 'number': 308, 'title': 'GraphQlTester loading query from file conflicting with Boot autoconfiguration for graphql schemas', 'user': {'login': 'JimHosken', 'id': 7337893, 'node_id': 'MDQ6VXNlcjczMzc4OTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7337893?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JimHosken', 'html_url': 'https://github.com/JimHosken', 'followers_url': 'https://api.github.com/users/JimHosken/followers', 'following_url': 'https://api.github.com/users/JimHosken/following{/other_user}', 'gists_url': 'https://api.github.com/users/JimHosken/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JimHosken/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JimHosken/subscriptions', 'organizations_url': 'https://api.github.com/users/JimHosken/orgs', 'repos_url': 'https://api.github.com/users/JimHosken/repos', 'events_url': 'https://api.github.com/users/JimHosken/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JimHosken/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 3, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-01T20:40:55Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 3, 'created_at': '2022-02-23T21:10:58Z', 'updated_at': '2022-04-01T20:40:55Z', 'closed_at': '2022-04-01T20:40:55Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""spring-boot-starter-parent 2.7.0-M1 (spring-graphql 1.0.0-M5, spring-graphql-test 1.0.0-M5)\r\n\r\nI have one schema file defined at src/main/resources/graphql/service.graphqls \r\n\r\nFor testing, I tried to define my graph QL queries in a file and reference them using the GraphQlTester.queryName functionality.\r\n\r\nIf I add a graphql file containing a query @ src/**test**/resources/graphql/fetchAllNotes.graphql, which is the default location that the GraphQlTestBuilderSupport.QueryNameResolver looks at, then the application fails to start because it cannot find the main schema definition file (src/main/resources/graphql/service.graphqls):\r\n\r\n```\r\njava.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:110)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:94)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:61)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception; nested exception is org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:719)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:401)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:302)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 28 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception; nested exception is org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\t... 46 more\r\nCaused by: org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.graphQlSource(GraphQlAutoConfiguration.java:91)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\t... 47 more\r\nCaused by: org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat org.springframework.graphql.execution.DefaultGraphQlSourceBuilder.build(DefaultGraphQlSourceBuilder.java:134)\r\n\tat org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.graphQlSource(GraphQlAutoConfiguration.java:88)\r\n\t... 52 more\r\n```\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/timeline', 'performed_via_github_app': None}}",closed,Java
21072299834,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-04-01T20:40:56Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/308', 'id': 1148582857, 'node_id': 'I_kwDOEMJUCs5EdfvJ', 'number': 308, 'title': 'GraphQlTester loading query from file conflicting with Boot autoconfiguration for graphql schemas', 'user': {'login': 'JimHosken', 'id': 7337893, 'node_id': 'MDQ6VXNlcjczMzc4OTM=', 'avatar_url': 'https://avatars.githubusercontent.com/u/7337893?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/JimHosken', 'html_url': 'https://github.com/JimHosken', 'followers_url': 'https://api.github.com/users/JimHosken/followers', 'following_url': 'https://api.github.com/users/JimHosken/following{/other_user}', 'gists_url': 'https://api.github.com/users/JimHosken/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/JimHosken/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/JimHosken/subscriptions', 'organizations_url': 'https://api.github.com/users/JimHosken/orgs', 'repos_url': 'https://api.github.com/users/JimHosken/repos', 'events_url': 'https://api.github.com/users/JimHosken/events{/privacy}', 'received_events_url': 'https://api.github.com/users/JimHosken/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 3, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-01T20:40:55Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 3, 'created_at': '2022-02-23T21:10:58Z', 'updated_at': '2022-04-01T20:40:55Z', 'closed_at': '2022-04-01T20:40:55Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""spring-boot-starter-parent 2.7.0-M1 (spring-graphql 1.0.0-M5, spring-graphql-test 1.0.0-M5)\r\n\r\nI have one schema file defined at src/main/resources/graphql/service.graphqls \r\n\r\nFor testing, I tried to define my graph QL queries in a file and reference them using the GraphQlTester.queryName functionality.\r\n\r\nIf I add a graphql file containing a query @ src/**test**/resources/graphql/fetchAllNotes.graphql, which is the default location that the GraphQlTestBuilderSupport.QueryNameResolver looks at, then the application fails to start because it cannot find the main schema definition file (src/main/resources/graphql/service.graphqls):\r\n\r\n```\r\njava.lang.IllegalStateException: Failed to load ApplicationContext\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:132)\r\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:110)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:94)\r\n\tat org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:61)\r\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'graphQlSource' defined in class path resource [org/springframework/boot/autoconfigure/graphql/GraphQlAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception; nested exception is org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:719)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:401)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:302)\r\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:124)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)\r\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124)\r\n\t... 28 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.graphql.execution.GraphQlSource]: Factory method 'graphQlSource' threw exception; nested exception is org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n\t... 46 more\r\nCaused by: org.springframework.boot.autoconfigure.graphql.InvalidSchemaLocationsException: No schema file could be found in the provided locations.; nested exception is org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.graphQlSource(GraphQlAutoConfiguration.java:91)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\t... 47 more\r\nCaused by: org.springframework.graphql.execution.MissingSchemaException: No GraphQL schema definition was configured.\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat org.springframework.graphql.execution.DefaultGraphQlSourceBuilder.build(DefaultGraphQlSourceBuilder.java:134)\r\n\tat org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.graphQlSource(GraphQlAutoConfiguration.java:88)\r\n\t... 52 more\r\n```\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1086305045', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/308#issuecomment-1086305045', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/308', 'id': 1086305045, 'node_id': 'IC_kwDOEMJUCs5Av7MV', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-01T20:40:55Z', 'updated_at': '2022-04-01T20:40:55Z', 'author_association': 'CONTRIBUTOR', 'body': 'The changes for #338 should make this a non-issue.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1086305045/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21072289182,PushEvent,spring-projects/spring-graphql,0.0,2022-04-01T20:40:02Z,"{'push_id': 9515908544, 'size': 3, 'distinct_size': 3, 'ref': 'refs/heads/main', 'head': '7a9f9236dc5983368eb771ab940390df986c6e44', 'before': '8bd39ba0f0faf81962b7d47ba208c171f4a187e7', 'commits': [{'sha': '9289f0a1b5f396366311306cd03d9c2bca1d74cd', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add MockExecutionGraphQlService in testFixtures', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/9289f0a1b5f396366311306cd03d9c2bca1d74cd'}, {'sha': '696f2cd02fd2128ec3efe82c3542ea5a83bae73c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine documentSource locations\n\nCloses gh-338', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/696f2cd02fd2128ec3efe82c3542ea5a83bae73c'}, {'sha': '7a9f9236dc5983368eb771ab940390df986c6e44', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Temporarily disable samples', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/7a9f9236dc5983368eb771ab940390df986c6e44'}]}",,Java
21072289067,IssuesEvent,spring-projects/spring-graphql,0.0,2022-04-01T20:40:02Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/338', 'id': 1179197787, 'node_id': 'I_kwDOEMJUCs5GSSFb', 'number': 338, 'title': 'Improve configuration and defaults for document location', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 2, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-04-01T20:40:01Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-24T08:52:32Z', 'updated_at': '2022-04-01T20:40:01Z', 'closed_at': '2022-04-01T20:40:01Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently, `""classpath:graphql""` is the default location for server schema files and for `"".graphql""` document files for `GraphQlClient` and `GraphQlTester`, which leads to issues like #308 where `""graphql""` under `src/test` (for documents to test the server with) overshadows the same location with the schema files under `src/main`.\r\n\r\nWe need to refine this a bit as follows:\r\n\r\n- The server remains with the current default `""graphql""`  on the main classpath\r\n- The Tester can default to `""graphql-test""` (under `src/test`) for document files to test the server with\r\n- The Client can default to `""graphql-documents""` (under `src/main`), and we can expose an overloaded method on `GraphQlClient.Builder` to make it easy to have a different location for each remote server.\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/timeline', 'performed_via_github_app': None}}",closed,Java
21069105614,PushEvent,spring-projects/spring-framework,0.0,2022-04-01T16:58:19Z,"{'push_id': 9514336958, 'size': 4, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': 'aea39fdad34299a91b6e7944bc5aeeed98f92b7c', 'before': 'afbff391d8299034cd98af968981504b6ca7b38c', 'commits': [{'sha': '2a8c369cffd4614e7c06b7ee5387f135dd29d38d', 'author': {'email': 'spring-builds@users.noreply.github.com', 'name': 'Spring Builds'}, 'message': 'Next development version (v5.3.19-SNAPSHOT)', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/2a8c369cffd4614e7c06b7ee5387f135dd29d38d'}, {'sha': '24cd3c1f4cfe34c17b79da1dd383112981f99de4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revert ""Disable flaky integration tests for now""\n\nThis reverts commit 1627f57f1f77abe17dd607c75476b9e4cb22ffbb in\npreparation for fixing the root cause', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/24cd3c1f4cfe34c17b79da1dd383112981f99de4'}, {'sha': 'd518a7d8c81e2cf7484942c37836219b3669240d', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""AbstractListenerReadPublisher continues after 0 bytes\n\nIf we read 0 bytes, e.g. chunked encoding markup read but not the\nactual data within it, don't stop reading since the server may or\nmay not consider it necessary to call onDataAvailable again.\nInstead, we keep on reading, and although isReady likely returns\nfalse on the next iteration, it eliminates ambiguity and ensures\nthe server will call onDataAvailable when more data arrives.\n\nCloses gh-28241"", 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/d518a7d8c81e2cf7484942c37836219b3669240d'}, {'sha': 'aea39fdad34299a91b6e7944bc5aeeed98f92b7c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""Merge branch '5.3.x' into main"", 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/aea39fdad34299a91b6e7944bc5aeeed98f92b7c'}]}",,Java
21069105285,IssuesEvent,spring-projects/spring-framework,0.0,2022-04-01T16:58:18Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28241', 'id': 1183221183, 'node_id': 'I_kwDOABGHUc5GhoW_', 'number': 28241, 'title': 'AbstractListenerReadPublisher does not call `ServletOutputStream::isReady()` when reading chunked data across network packets', 'user': {'login': 'poutsma', 'id': 330665, 'node_id': 'MDQ6VXNlcjMzMDY2NQ==', 'avatar_url': 'https://avatars.githubusercontent.com/u/330665?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/poutsma', 'html_url': 'https://github.com/poutsma', 'followers_url': 'https://api.github.com/users/poutsma/followers', 'following_url': 'https://api.github.com/users/poutsma/following{/other_user}', 'gists_url': 'https://api.github.com/users/poutsma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/poutsma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/poutsma/subscriptions', 'organizations_url': 'https://api.github.com/users/poutsma/orgs', 'repos_url': 'https://api.github.com/users/poutsma/repos', 'events_url': 'https://api.github.com/users/poutsma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/poutsma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188511953, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTUz', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/292', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/292', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/292/labels', 'id': 7769635, 'node_id': 'MI_kwDOABGHUc4Ado4j', 'number': 292, 'title': '5.3.19', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 1, 'state': 'open', 'created_at': '2022-03-15T14:48:46Z', 'updated_at': '2022-04-01T16:58:17Z', 'due_on': '2022-04-14T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-28T10:23:22Z', 'updated_at': '2022-04-01T16:58:17Z', 'closed_at': '2022-04-01T16:58:17Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""When a client POSTs data using chunked encoding, and a network packet ends immediately after the chunk header, but before the chunk body, the `AbstractListenerReadPublisher` hangs under Tomcat, especially in constrained environments. \r\n\r\nWhen the packet that ends with the chunk header is received, Tomcat calls `ReadListener::onDataAvailable()`. \r\nThe `ServletServerHttpRequest.RequestBodyPublisher` calls `ServletOutputStream::isReady()`, which returns `true`.\r\nThe `RequestBodyPublisher` tries to read data, and Tomcat processes the chunk header (so data has been read from the network).\r\nHowever, there is no actual content available (yet), so Tomcat returns 0 bytes.\r\nThe `RequestBodyPublisher` sees no data has been read, and switches state to DEMAND.\r\nThe `RequestBodyPublisher` doesn't call `isReady()` because it assumes the read terminated, as `isReady()` returned `false`.\r\nNo call to `isReady()` means the socket is not registered for read and everything hangs.\r\n\r\nSpecial thanks to @markt-asf for investigating the issue, and providing the description above."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28241/timeline', 'performed_via_github_app': None}}",closed,Java
21068921673,IssueCommentEvent,github/advisory-database,0.0,2022-04-01T16:46:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/github/advisory-database/issues/169', 'repository_url': 'https://api.github.com/repos/github/advisory-database', 'labels_url': 'https://api.github.com/repos/github/advisory-database/issues/169/labels{/name}', 'comments_url': 'https://api.github.com/repos/github/advisory-database/issues/169/comments', 'events_url': 'https://api.github.com/repos/github/advisory-database/issues/169/events', 'html_url': 'https://github.com/github/advisory-database/pull/169', 'id': 1189721206, 'node_id': 'PR_kwDOG1IWlc41fDlq', 'number': 169, 'title': 'Contribution to ""Remote Code Execution in Spring Framework""', 'user': {'login': 'cdupuis', 'id': 206707, 'node_id': 'MDQ6VXNlcjIwNjcwNw==', 'avatar_url': 'https://avatars.githubusercontent.com/u/206707?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cdupuis', 'html_url': 'https://github.com/cdupuis', 'followers_url': 'https://api.github.com/users/cdupuis/followers', 'following_url': 'https://api.github.com/users/cdupuis/following{/other_user}', 'gists_url': 'https://api.github.com/users/cdupuis/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cdupuis/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cdupuis/subscriptions', 'organizations_url': 'https://api.github.com/users/cdupuis/orgs', 'repos_url': 'https://api.github.com/users/cdupuis/repos', 'events_url': 'https://api.github.com/users/cdupuis/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cdupuis/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-04-01T12:23:35Z', 'updated_at': '2022-04-01T16:46:03Z', 'closed_at': '2022-04-01T16:26:11Z', 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/github/advisory-database/pulls/169', 'html_url': 'https://github.com/github/advisory-database/pull/169', 'diff_url': 'https://github.com/github/advisory-database/pull/169.diff', 'patch_url': 'https://github.com/github/advisory-database/pull/169.patch', 'merged_at': '2022-04-01T16:26:11Z'}, 'body': '**Updates**\r\n- Affected products\r\n\r\nMarking `spring-beans` and `spring-core` as affected results in pretty much every Spring application being vulnerable to CVE-2022-22965 which is not accurate as per https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement. Keeping `spring-beans` and `spring-core` in this advisory will lead to a lot of churn and false positives. ', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/169/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/github/advisory-database/issues/169/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1086127921', 'html_url': 'https://github.com/github/advisory-database/pull/169#issuecomment-1086127921', 'issue_url': 'https://api.github.com/repos/github/advisory-database/issues/169', 'id': 1086127921, 'node_id': 'IC_kwDOG1IWlc5AvP8x', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-01T16:46:03Z', 'updated_at': '2022-04-01T16:46:03Z', 'author_association': 'NONE', 'body': 'An application with just `spring-beans` is not vulnerable. You need `spring-web` at least to be exposed and that in turn depends on `spring-beans`. \r\n\r\nIn most cases it would be one of the two web frameworks, Spring MVC (`spring-webmvc` module) or Spring WebFlux (`spring-webflux`). Technically, something else could be using `WebDataBinder` from `spring-web` on which both web frameworks depend. \r\n\r\nIn short I think the original description is still correct.', 'reactions': {'url': 'https://api.github.com/repos/github/advisory-database/issues/comments/1086127921/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,
21068809991,PushEvent,spring-projects/spring-framework,0.0,2022-04-01T16:38:33Z,"{'push_id': 9514191986, 'size': 2, 'distinct_size': 2, 'ref': 'refs/heads/5.3.x', 'head': 'd518a7d8c81e2cf7484942c37836219b3669240d', 'before': '2a8c369cffd4614e7c06b7ee5387f135dd29d38d', 'commits': [{'sha': '24cd3c1f4cfe34c17b79da1dd383112981f99de4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revert ""Disable flaky integration tests for now""\n\nThis reverts commit 1627f57f1f77abe17dd607c75476b9e4cb22ffbb in\npreparation for fixing the root cause', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/24cd3c1f4cfe34c17b79da1dd383112981f99de4'}, {'sha': 'd518a7d8c81e2cf7484942c37836219b3669240d', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""AbstractListenerReadPublisher continues after 0 bytes\n\nIf we read 0 bytes, e.g. chunked encoding markup read but not the\nactual data within it, don't stop reading since the server may or\nmay not consider it necessary to call onDataAvailable again.\nInstead, we keep on reading, and although isReady likely returns\nfalse on the next iteration, it eliminates ambiguity and ensures\nthe server will call onDataAvailable when more data arrives.\n\nCloses gh-28241"", 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/d518a7d8c81e2cf7484942c37836219b3669240d'}]}",,Java
21067079493,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-01T15:02:47Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28260', 'id': 1187860822, 'node_id': 'I_kwDOABGHUc5GzVFW', 'number': 28260, 'title': 'Backports for PropertyDescriptor filtering ', 'user': {'login': 'magJ', 'id': 1804354, 'node_id': 'MDQ6VXNlcjE4MDQzNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1804354?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/magJ', 'html_url': 'https://github.com/magJ', 'followers_url': 'https://api.github.com/users/magJ/followers', 'following_url': 'https://api.github.com/users/magJ/following{/other_user}', 'gists_url': 'https://api.github.com/users/magJ/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/magJ/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/magJ/subscriptions', 'organizations_url': 'https://api.github.com/users/magJ/orgs', 'repos_url': 'https://api.github.com/users/magJ/repos', 'events_url': 'https://api.github.com/users/magJ/events{/privacy}', 'received_events_url': 'https://api.github.com/users/magJ/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511944, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTQ0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20declined', 'name': 'status: declined', 'color': 'fef2c0', 'default': False, 'description': ""A suggestion or change that we don't feel we should currently apply""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 14, 'created_at': '2022-03-31T10:22:05Z', 'updated_at': '2022-04-01T15:02:47Z', 'closed_at': '2022-04-01T06:06:22Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects:** Major and minor versions other than 5.3.x\r\n\r\n---\r\n\r\nCan we please have the PropertyDescriptor filtering commit https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15 backported to 4.x branches?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/reactions', 'total_count': 6, '+1': 6, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1086009537', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28260#issuecomment-1086009537', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260', 'id': 1086009537, 'node_id': 'IC_kwDOABGHUc5AuzDB', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-01T15:02:47Z', 'updated_at': '2022-04-01T15:02:47Z', 'author_association': 'CONTRIBUTOR', 'body': 'Also the [follow-up blog post](https://spring.io/blog/2022/04/01/spring-framework-rce-mitigation-alternative) with Tomcat version numbers.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1086009537/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21060682524,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-04-01T09:17:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28261', 'id': 1187895002, 'node_id': 'I_kwDOABGHUc5Gzdba', 'number': 28261, 'title': 'Restrict access to property paths on Class references ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511834, 'node_id': 'MDU6TGFiZWwxMTg4NTExODM0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20backported', 'name': 'status: backported', 'color': 'fef2c0', 'default': False, 'description': 'An issue that has been backported to maintenance branches'}, {'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/291', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/291', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/291/labels', 'id': 7769631, 'node_id': 'MI_kwDOABGHUc4Ado4f', 'number': 291, 'title': '5.3.18', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 0, 'closed_issues': 8, 'state': 'closed', 'created_at': '2022-03-15T14:47:30Z', 'updated_at': '2022-03-31T10:56:39Z', 'due_on': '2022-03-31T07:00:00Z', 'closed_at': '2022-03-31T09:44:27Z'}, 'comments': 10, 'created_at': '2022-03-31T10:52:19Z', 'updated_at': '2022-04-01T09:17:02Z', 'closed_at': '2022-03-31T10:56:39Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/reactions', 'total_count': 10, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 10, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1085664458', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28261#issuecomment-1085664458', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261', 'id': 1085664458, 'node_id': 'IC_kwDOABGHUc5AtezK', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-04-01T09:17:02Z', 'updated_at': '2022-04-01T09:17:02Z', 'author_association': 'CONTRIBUTOR', 'body': '@marcelstoer normally commits are linked to issues. This was not a normal case.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1085664458/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21041565896,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-31T12:48:08Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28256', 'id': 1187389815, 'node_id': 'I_kwDOABGHUc5GxiF3', 'number': 28256, 'title': 'SimpleEvaluationContext should disable array allocation', 'user': {'login': 'quaff', 'id': 143040, 'node_id': 'MDQ6VXNlcjE0MzA0MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/143040?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/quaff', 'html_url': 'https://github.com/quaff', 'followers_url': 'https://api.github.com/users/quaff/followers', 'following_url': 'https://api.github.com/users/quaff/following{/other_user}', 'gists_url': 'https://api.github.com/users/quaff/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/quaff/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/quaff/subscriptions', 'organizations_url': 'https://api.github.com/users/quaff/orgs', 'repos_url': 'https://api.github.com/users/quaff/repos', 'events_url': 'https://api.github.com/users/quaff/events{/privacy}', 'received_events_url': 'https://api.github.com/users/quaff/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-31T02:00:29Z', 'updated_at': '2022-03-31T12:48:08Z', 'closed_at': '2022-03-31T12:48:08Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Array allocation should be disabled as same as `ConstructorResolver`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1084534711', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28256#issuecomment-1084534711', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256', 'id': 1084534711, 'node_id': 'IC_kwDOABGHUc5ApK-3', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-31T12:48:08Z', 'updated_at': '2022-03-31T12:48:08Z', 'author_association': 'CONTRIBUTOR', 'body': '@quaff please read the issue template and use the appropriate channels.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1084534711/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21041566062,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-31T12:48:09Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28256', 'id': 1187389815, 'node_id': 'I_kwDOABGHUc5GxiF3', 'number': 28256, 'title': 'SimpleEvaluationContext should disable array allocation', 'user': {'login': 'quaff', 'id': 143040, 'node_id': 'MDQ6VXNlcjE0MzA0MA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/143040?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/quaff', 'html_url': 'https://github.com/quaff', 'followers_url': 'https://api.github.com/users/quaff/followers', 'following_url': 'https://api.github.com/users/quaff/following{/other_user}', 'gists_url': 'https://api.github.com/users/quaff/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/quaff/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/quaff/subscriptions', 'organizations_url': 'https://api.github.com/users/quaff/orgs', 'repos_url': 'https://api.github.com/users/quaff/repos', 'events_url': 'https://api.github.com/users/quaff/events{/privacy}', 'received_events_url': 'https://api.github.com/users/quaff/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-31T02:00:29Z', 'updated_at': '2022-03-31T12:48:08Z', 'closed_at': '2022-03-31T12:48:08Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Array allocation should be disabled as same as `ConstructorResolver`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28256/timeline', 'performed_via_github_app': None}}",closed,Java
21039950005,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-31T11:22:41Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28260', 'id': 1187860822, 'node_id': 'I_kwDOABGHUc5GzVFW', 'number': 28260, 'title': 'Backports for PropertyDescriptor filtering ', 'user': {'login': 'magJ', 'id': 1804354, 'node_id': 'MDQ6VXNlcjE4MDQzNTQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1804354?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/magJ', 'html_url': 'https://github.com/magJ', 'followers_url': 'https://api.github.com/users/magJ/followers', 'following_url': 'https://api.github.com/users/magJ/following{/other_user}', 'gists_url': 'https://api.github.com/users/magJ/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/magJ/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/magJ/subscriptions', 'organizations_url': 'https://api.github.com/users/magJ/orgs', 'repos_url': 'https://api.github.com/users/magJ/repos', 'events_url': 'https://api.github.com/users/magJ/events{/privacy}', 'received_events_url': 'https://api.github.com/users/magJ/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-31T10:22:05Z', 'updated_at': '2022-03-31T11:22:41Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**Affects:** Major and minor versions other than 5.3.x\r\n\r\n---\r\n\r\nCan we please have the PropertyDescriptor filtering commit https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15 backported to 4.x branches?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/reactions', 'total_count': 2, '+1': 2, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1084445734', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28260#issuecomment-1084445734', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28260', 'id': 1084445734, 'node_id': 'IC_kwDOABGHUc5Ao1Qm', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-31T11:22:40Z', 'updated_at': '2022-03-31T11:22:40Z', 'author_association': 'CONTRIBUTOR', 'body': '@magJ are you on JDK 9+?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1084445734/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21039454710,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-31T10:55:18Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28262', 'id': 1187898163, 'node_id': 'I_kwDOABGHUc5GzeMz', 'number': 28262, 'title': 'Restrict access to property paths on Class references', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}, {'id': 1220444521, 'node_id': 'MDU6TGFiZWwxMjIwNDQ0NTIx', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20backport', 'name': 'type: backport', 'color': 'e3d9fc', 'default': False, 'description': 'An issue that is a backport of another issue to a maintenance branch'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/294', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/294', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/294/labels', 'id': 7823190, 'node_id': 'MI_kwDOABGHUc4Ad19W', 'number': 294, 'title': '5.2.20', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 1, 'state': 'closed', 'created_at': '2022-03-31T08:26:05Z', 'updated_at': '2022-03-31T10:55:17Z', 'due_on': '2022-03-31T07:00:00Z', 'closed_at': '2022-03-31T10:33:44Z'}, 'comments': 0, 'created_at': '2022-03-31T10:55:17Z', 'updated_at': '2022-03-31T10:55:18Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Backport of #28261.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28262/timeline', 'performed_via_github_app': None}}",opened,Java
21039402415,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-31T10:52:20Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28261', 'id': 1187895002, 'node_id': 'I_kwDOABGHUc5Gzdba', 'number': 28261, 'title': 'Restrict access to property paths on Class references ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/291', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/291', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/291/labels', 'id': 7769631, 'node_id': 'MI_kwDOABGHUc4Ado4f', 'number': 291, 'title': '5.3.18', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 7, 'state': 'closed', 'created_at': '2022-03-15T14:47:30Z', 'updated_at': '2022-03-31T10:52:20Z', 'due_on': '2022-03-31T07:00:00Z', 'closed_at': '2022-03-31T09:44:27Z'}, 'comments': 0, 'created_at': '2022-03-31T10:52:19Z', 'updated_at': '2022-03-31T10:52:20Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28261/timeline', 'performed_via_github_app': None}}",opened,Java
21020989739,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-30T14:58:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345', 'id': 1186527173, 'node_id': 'I_kwDOEMJUCs5GuPfF', 'number': 345, 'title': ""GraphqlTester - Jsonpath - don't use proper object mapper"", 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-30T14:13:55Z', 'updated_at': '2022-03-30T14:58:03Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'hi! \r\nI found another problem this time during testing. \r\nController:\r\n```kotlin\r\n\r\n@QueryMapping\r\n    suspend fun people(): Flow<PersonResponse> {\r\n            return service.getAllPeople().map {\r\n                PersonResponse(\r\n                    it.id!!,\r\n                    it.firstName,\r\n                    it.lastName,\r\n                    it.createdAt!!\r\n                )\r\n            }\r\n    }\r\n\r\n```\r\n\r\nTest:\r\n```kotlin\r\n @Test\r\n    fun `get all persons`() {\r\n        val person = Person(\r\n            UUID.randomUUID(),\r\n            firstName = ""Test"",\r\n            lastName = ""Test"",\r\n            createdAt = LocalDateTime.now()\r\n        )\r\n        \r\n        val personResponse = PersonResponse(\r\n            person.id!!,\r\n            person.firstName,\r\n            person.lastName,\r\n            person.createdAt!!\r\n        )\r\n        \r\n        coEvery { personService.getAllPeople() }.answers { flowOf(person) }\r\n        \r\n        graphQlTester.documentName(""getAllPeople"")\r\n            .execute()\r\n            .path(""people"")\r\n            .entityList(PersonResponse::class.java)\r\n            .hasSize(1)\r\n            .contains(personResponse)\r\n    }\r\n```\r\n\r\nquery: \r\n```graphql\r\nquery {\r\n    people {\r\n        id, firstName, lastName, createdAt\r\n    }\r\n}\r\n```\r\n\r\n\r\nerror:\r\n```\r\njava.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Cannot construct instance of `com.example.backendgraphql.person.response.PersonResponse` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n\tat app//com.example.backendgraphql.person.PersonControllerTest.get all persons(PersonControllerTest.kt:44)\r\n```\r\n\r\nThis happened when I use data class for response object, when I use record from java I get :\r\n```\r\njava.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\ncom.jayway.jsonpath.spi.mapper.MappingException: java.lang.IllegalArgumentException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module ""com.fasterxml.jackson.datatype:jackson-datatype-jsr310"" to enable handling\r\n at [Source: UNKNOWN; byte offset: #UNKNOWN] (through reference chain: java.util.ArrayList[0]->com.example.backendgraphql.person.PersonResponse[""createdAt""])\r\n\tat app//com.jayway.jsonpath.spi.mapper.JacksonMappingProvider.map(JacksonMappingProvider.java:58)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.convert(JsonContext.java:121)\r\n\tat app//com.jayway.jsonpath.internal.JsonContext.read(JsonContext.java:98)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$ResponseDelegate.read(DefaultGraphQlTester.java:229)\r\n\tat app//org.springframework.graphql.test.tester.DefaultGraphQlTester$DefaultPath.entityList(DefaultGraphQlTester.java:395)\r\n```\r\n\r\nand record looks like that:\r\n```java \r\npublic record PersonResponse(\r\n        UUID id,\r\n        String firstName,\r\n        String lastName,\r\n        LocalDateTime createdAt\r\n) {\r\n}\r\n```\r\nAnd as you can see I have `com.fasterxml.jackson.datatype:jackson-datatype-jsr310`\r\n![Zrzut ekranu 2022-03-30 o 16 13 09](https://user-images.githubusercontent.com/1577725/160855572-160ceb52-2725-409f-972d-e31147bc183d.png)\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1083246897', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/345#issuecomment-1083246897', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/345', 'id': 1083246897, 'node_id': 'IC_kwDOEMJUCs5AkQkx', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-30T14:58:03Z', 'updated_at': '2022-03-30T14:58:03Z', 'author_association': 'CONTRIBUTOR', 'body': 'Can you show how the tester is created exactly? Or provide a sample.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1083246897/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21014465664,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-30T09:42:20Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/events', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28251', 'id': 1186133674, 'node_id': 'PR_kwDOABGHUc41S_i6', 'number': 28251, 'title': 'Fix JDK >= 9 classLoader bypass', 'user': {'login': 'raylax', 'id': 40617698, 'node_id': 'MDQ6VXNlcjQwNjE3Njk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/40617698?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raylax', 'html_url': 'https://github.com/raylax', 'followers_url': 'https://api.github.com/users/raylax/followers', 'following_url': 'https://api.github.com/users/raylax/following{/other_user}', 'gists_url': 'https://api.github.com/users/raylax/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raylax/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raylax/subscriptions', 'organizations_url': 'https://api.github.com/users/raylax/orgs', 'repos_url': 'https://api.github.com/users/raylax/repos', 'events_url': 'https://api.github.com/users/raylax/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raylax/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'closed', 'locked': True, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-03-30T09:08:26Z', 'updated_at': '2022-03-30T09:42:20Z', 'closed_at': '2022-03-30T09:40:07Z', 'author_association': 'NONE', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28251', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28251.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28251.patch', 'merged_at': None}, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1082855762', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28251#issuecomment-1082855762', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251', 'id': 1082855762, 'node_id': 'IC_kwDOABGHUc5AixFS', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-30T09:42:20Z', 'updated_at': '2022-03-30T09:42:20Z', 'author_association': 'CONTRIBUTOR', 'body': '@raylax when creating an issue, please read the policy on the issue template.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1082855762/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21014421490,PullRequestEvent,spring-projects/spring-framework,0.0,2022-03-30T09:40:07Z,"{'action': 'closed', 'number': 28251, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251', 'id': 894171322, 'node_id': 'PR_kwDOABGHUc41S_i6', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28251', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28251.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28251.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251', 'number': 28251, 'state': 'closed', 'locked': True, 'title': 'Fix JDK >= 9 classLoader bypass', 'user': {'login': 'raylax', 'id': 40617698, 'node_id': 'MDQ6VXNlcjQwNjE3Njk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/40617698?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raylax', 'html_url': 'https://github.com/raylax', 'followers_url': 'https://api.github.com/users/raylax/followers', 'following_url': 'https://api.github.com/users/raylax/following{/other_user}', 'gists_url': 'https://api.github.com/users/raylax/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raylax/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raylax/subscriptions', 'organizations_url': 'https://api.github.com/users/raylax/orgs', 'repos_url': 'https://api.github.com/users/raylax/repos', 'events_url': 'https://api.github.com/users/raylax/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raylax/received_events', 'type': 'User', 'site_admin': False}, 'body': None, 'created_at': '2022-03-30T09:08:26Z', 'updated_at': '2022-03-30T09:40:07Z', 'closed_at': '2022-03-30T09:40:07Z', 'merged_at': None, 'merge_commit_sha': 'f7a4ddf7cc26c0089065d458fc553e87b3d1e70d', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/05427d5bc24b26ab27e5cf1b8cc6d274b8ed6548', 'head': {'label': 'raylax:main', 'ref': 'main', 'sha': '05427d5bc24b26ab27e5cf1b8cc6d274b8ed6548', 'user': {'login': 'raylax', 'id': 40617698, 'node_id': 'MDQ6VXNlcjQwNjE3Njk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/40617698?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raylax', 'html_url': 'https://github.com/raylax', 'followers_url': 'https://api.github.com/users/raylax/followers', 'following_url': 'https://api.github.com/users/raylax/following{/other_user}', 'gists_url': 'https://api.github.com/users/raylax/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raylax/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raylax/subscriptions', 'organizations_url': 'https://api.github.com/users/raylax/orgs', 'repos_url': 'https://api.github.com/users/raylax/repos', 'events_url': 'https://api.github.com/users/raylax/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raylax/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 475793331, 'node_id': 'R_kgDOHFwHsw', 'name': 'spring-framework', 'full_name': 'raylax/spring-framework', 'private': False, 'owner': {'login': 'raylax', 'id': 40617698, 'node_id': 'MDQ6VXNlcjQwNjE3Njk4', 'avatar_url': 'https://avatars.githubusercontent.com/u/40617698?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/raylax', 'html_url': 'https://github.com/raylax', 'followers_url': 'https://api.github.com/users/raylax/followers', 'following_url': 'https://api.github.com/users/raylax/following{/other_user}', 'gists_url': 'https://api.github.com/users/raylax/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/raylax/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/raylax/subscriptions', 'organizations_url': 'https://api.github.com/users/raylax/orgs', 'repos_url': 'https://api.github.com/users/raylax/repos', 'events_url': 'https://api.github.com/users/raylax/events{/privacy}', 'received_events_url': 'https://api.github.com/users/raylax/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/raylax/spring-framework', 'description': 'Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/raylax/spring-framework', 'forks_url': 'https://api.github.com/repos/raylax/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/raylax/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/raylax/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/raylax/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/raylax/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/raylax/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/raylax/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/raylax/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/raylax/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/raylax/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/raylax/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/raylax/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/raylax/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/raylax/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/raylax/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/raylax/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/raylax/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/raylax/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/raylax/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/raylax/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/raylax/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/raylax/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/raylax/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/raylax/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/raylax/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/raylax/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/raylax/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/raylax/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/raylax/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/raylax/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/raylax/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/raylax/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/raylax/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/raylax/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/raylax/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/raylax/spring-framework/deployments', 'created_at': '2022-03-30T08:44:14Z', 'updated_at': '2022-03-30T09:03:19Z', 'pushed_at': '2022-03-30T09:38:55Z', 'git_url': 'git://github.com/raylax/spring-framework.git', 'ssh_url': 'git@github.com:raylax/spring-framework.git', 'clone_url': 'https://github.com/raylax/spring-framework.git', 'svn_url': 'https://github.com/raylax/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 173456, 'stargazers_count': 0, 'watchers_count': 0, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 0, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': '02d3e00d33a578fb776cc2c65a9c15d9a75b2072', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 1148753, 'node_id': 'MDEwOlJlcG9zaXRvcnkxMTQ4NzUz', 'name': 'spring-framework', 'full_name': 'spring-projects/spring-framework', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-framework', 'description': 'Spring Framework', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-framework/deployments', 'created_at': '2010-12-08T04:04:45Z', 'updated_at': '2022-03-30T09:30:43Z', 'pushed_at': '2022-03-30T09:39:45Z', 'git_url': 'git://github.com/spring-projects/spring-framework.git', 'ssh_url': 'git@github.com:spring-projects/spring-framework.git', 'clone_url': 'https://github.com/spring-projects/spring-framework.git', 'svn_url': 'https://github.com/spring-projects/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 173456, 'stargazers_count': 46767, 'watchers_count': 46767, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': True, 'forks_count': 33174, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1292, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['framework', 'spring', 'spring-framework'], 'visibility': 'public', 'forks': 33174, 'open_issues': 1292, 'watchers': 46767, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251'}, 'html': {'href': 'https://github.com/spring-projects/spring-framework/pull/28251'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28251/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28251/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/05427d5bc24b26ab27e5cf1b8cc6d274b8ed6548'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': True, 'rebaseable': False, 'mergeable_state': 'unstable', 'merged_by': None, 'comments': 2, 'review_comments': 1, 'maintainer_can_modify': False, 'commits': 2, 'additions': 1, 'deletions': 1, 'changed_files': 1}}",closed,Java
21013672343,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-30T09:02:46Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/344', 'id': 1184960386, 'node_id': 'I_kwDOEMJUCs5GoQ-C', 'number': 344, 'title': 'Kotlin coroutines handler don\'t work with ""org.springframework.boot:spring-boot-starter-validation""', 'user': {'login': 'nenros', 'id': 1577725, 'node_id': 'MDQ6VXNlcjE1Nzc3MjU=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1577725?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/nenros', 'html_url': 'https://github.com/nenros', 'followers_url': 'https://api.github.com/users/nenros/followers', 'following_url': 'https://api.github.com/users/nenros/following{/other_user}', 'gists_url': 'https://api.github.com/users/nenros/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/nenros/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/nenros/subscriptions', 'organizations_url': 'https://api.github.com/users/nenros/orgs', 'repos_url': 'https://api.github.com/users/nenros/repos', 'events_url': 'https://api.github.com/users/nenros/events{/privacy}', 'received_events_url': 'https://api.github.com/users/nenros/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 10, 'created_at': '2022-03-29T14:28:00Z', 'updated_at': '2022-03-30T09:02:46Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hi!\r\nI have problems with Webflux + Kotlin + Coroutines. When I have something like that:\r\n```kotlin\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    suspend fun createPerson(@Argument(""input"") personInput: PersonInput) : Person {\r\n            return service.createPerson()\r\n    }\r\n}\r\n```\r\n\r\nand I try to make request \r\n```graphql\r\nmutation {\r\n    createPerson(input: {firstName: ""Test"", lastName: ""Test""}) {\r\n        id, firstName, lastName\r\n    }\r\n}\r\n```\r\n\r\nI get\r\n```json\r\n{\r\n  ""errors"": [\r\n    {\r\n      ""message"": ""Index 1 out of bounds for length 1"",\r\n      ""locations"": [\r\n        {\r\n          ""line"": 33,\r\n          ""column"": 5\r\n        }\r\n      ],\r\n      ""path"": [\r\n        ""createPerson""\r\n      ],\r\n      ""extensions"": {\r\n        ""classification"": ""INTERNAL_ERROR""\r\n      }\r\n    }\r\n  ],\r\n  ""data"": {\r\n    ""createPerson"": null\r\n  }\r\n}\r\n```\r\nBut when I change to response type mono \r\n\r\n```\r\n@Controller\r\nclass PersonController(val service: PersonService) {\r\n\r\n    @MutationMapping( ""createPerson"")\r\n    fun createPerson(@Argument(""input"") personInput: PersonInput) : Mono<Person> {\r\n            return mono {service.createPerson()}\r\n    }\r\n}\r\n```\r\nrequest works\r\n\r\n----\r\n\r\nAfter some investigation I found that problem was in validation starter:\r\n\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\r\n\tat java.base/java.util.Arrays$ArrayList.get(Arrays.java:4165) ~[na:na]\r\n\tat org.hibernate.validator.internal.properties.javabean.JavaBeanExecutable.getParameterName(JavaBeanExecutable.java:86) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ParameterMetaData$Builder.build(ParameterMetaData.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.findParameterMetaData(ExecutableMetaData.java:436) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.ExecutableMetaData$Builder.build(ExecutableMetaData.java:391) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder$BuilderDelegate.build(BeanMetaDataBuilder.java:260) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.aggregated.BeanMetaDataBuilder.build(BeanMetaDataBuilder.java:133) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.createBeanMetaData(BeanMetaDataManagerImpl.java:206) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl.getBeanMetaData(BeanMetaDataManagerImpl.java:165) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:267) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.hibernate.validator.internal.engine.ValidatorImpl.validateParameters(ValidatorImpl.java:235) ~[hibernate-validator-6.2.3.Final.jar:6.2.3.Final]\r\n\tat org.springframework.graphql.data.method.annotation.support.HandlerMethodInputValidator.validate(HandlerMethodInputValidator.java:78) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.validateAndInvoke(DataFetcherHandlerMethod.java:188) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:121) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer$SchemaMappingDataFetcher.get(AnnotatedControllerConfigurer.java:449) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat org.springframework.graphql.execution.ContextDataFetcherDecorator.get(ContextDataFetcherDecorator.java:67) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat graphql.execution.instrumentation.dataloader.DataLoaderDispatcherInstrumentation.lambda$instrumentDataFetcher$0(DataLoaderDispatcherInstrumentation.java:87) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:279) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:210) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.ExecutionStrategy.resolveField(ExecutionStrategy.java:182) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.lambda$execute$1(AsyncSerialExecutionStrategy.java:43) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentiallyImpl(Async.java:80) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Async.eachSequentially(Async.java:69) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.AsyncSerialExecutionStrategy.execute(AsyncSerialExecutionStrategy.java:38) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.executeOperation(Execution.java:159) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.execution.Execution.execute(Execution.java:105) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.execute(GraphQL.java:613) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.parseValidateAndExecute(GraphQL.java:538) ~[graphql-java-17.3.jar:na]\r\n\tat graphql.GraphQL.executeAsync(GraphQL.java:502) ~[graphql-java-17.3.jar:na]\r\n\tat org.springframework.graphql.execution.DefaultExecutionGraphQlService.lambda$execute$2(DefaultExecutionGraphQlService.java:81) ~[spring-graphql-1.0.0-M6.jar:na]\r\n\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:47) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142) ~[reactor-core-3.4.16.jar:3.4.16]\r\n\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:600) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:93) ~[reactor-netty-core-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:266) ~[reactor-netty-http-1.0.17.jar:1.0.17]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:299) ~[netty-codec-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) ~[netty-transport-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.75.Final.jar:4.1.75.Final]\r\n\tat java.base/java.lang.Thread.run(Thread.java:833) ~[na:na]\r\n```\r\n\r\nand this is wrong line https://github.com/spring-projects/spring-graphql/blob/b40375f1f2bffd2dade33653288b5027dcdc99ab/spring-graphql/src/main/java/org/springframework/graphql/data/method/annotation/support/HandlerMethodInputValidator.java#L78\r\n\r\nquestion if it isn\'t related to https://hibernate.atlassian.net/browse/HV-1796\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1082814093', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/344#issuecomment-1082814093', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/344', 'id': 1082814093, 'node_id': 'IC_kwDOEMJUCs5Aim6N', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-30T09:02:46Z', 'updated_at': '2022-03-30T09:02:46Z', 'author_association': 'CONTRIBUTOR', 'body': ""Indeed what @hantsy shared has links to issues that are referring to the same stacktrace. Originally reported in https://github.com/spring-projects/spring-framework/issues/23499 and then corresponding in HV https://hibernate.atlassian.net/browse/HV-1638. \r\n\r\nIt is a lower level issue indeed, we're simply invoking Hibernate Validator which fails while introspecting method parameters. There is [one workaround](https://gist.github.com/pschichtel/830b7943ea43b7cb58cadd984b54b903) posted under the Spring Framework issue which customizes the parameter discovery but I have not tried or evaluated it. \r\n\r\n> No, funniest fact is that I haven't added validation yet, only package.\r\n\r\nThis is a good point @nenros as currently we are invoking HV for every method as long as bean validation is present but could consider doing so only for methods with `@Validated` on when any method parameter has `@Valid`.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1082814093/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
21000000680,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-29T16:30:59Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/342', 'id': 1183167497, 'node_id': 'I_kwDOEMJUCs5GhbQJ', 'number': 342, 'title': 'Principal is null when executing requests through websockets', 'user': {'login': 'maxhov', 'id': 14804474, 'node_id': 'MDQ6VXNlcjE0ODA0NDc0', 'avatar_url': 'https://avatars.githubusercontent.com/u/14804474?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/maxhov', 'html_url': 'https://github.com/maxhov', 'followers_url': 'https://api.github.com/users/maxhov/followers', 'following_url': 'https://api.github.com/users/maxhov/following{/other_user}', 'gists_url': 'https://api.github.com/users/maxhov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/maxhov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/maxhov/subscriptions', 'organizations_url': 'https://api.github.com/users/maxhov/orgs', 'repos_url': 'https://api.github.com/users/maxhov/repos', 'events_url': 'https://api.github.com/users/maxhov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/maxhov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 0, 'created_at': '2022-03-28T09:39:11Z', 'updated_at': '2022-03-29T16:30:59Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'When executing GraphQL requests through websockets, the injected Principal is `null`. I tried with and without the introduced `@AuthenticatedPrincipal` annotation, but without a succesful result. Through the HTTP transport, the Principal is injected and everything works as expected.\r\n\r\nTo demonstrate the issue, I [created a demo repo](https://github.com/maxhov/spring-graphql-principal) with a basic Spring Boot 2.7.0-m3 application.\r\n\r\nTo reproduce the issue for the **websocket transport** with websocat:\r\n```bash\r\n~  spring-graphql-principal$ websocat --basic-auth user:password ws://localhost:8080/graphql\r\n**{""type"":""connection_init""}**\r\n{""id"":null,""type"":""connection_ack"",""payload"":{}}\r\n**{""id"":""1"",""type"":""subscribe"",""payload"":{""query"":""{ helloWorld }""}}**\r\n{""id"":""1"",""type"":""next"",""payload"":{""errors"":[{""message"":""Cannot invoke \\""java.security.Principal.getName()\\"" because \\""principal\\"" is null"",""locations"":[{""line"":1,""column"":3}],""path"":[""helloWorld""],""extensions"":{""classification"":""INTERNAL_ERROR""}}],""data"":{""helloWorld"":null}}}\r\n{""id"":""1"",""type"":""complete"",""payload"":{}}\r\n``` \r\n\r\nTo see the result for the **HTTP transport**, use the following curl command:\r\n```\r\ncurl --location --request POST \'http://localhost:8080/graphql\' \\\r\n--header \'Authorization: Basic dXNlcjpwYXNzd29yZA==\' \\\r\n--header \'Content-Type: application/json\' \\\r\n--data-raw \'{""query"":""{ helloWorld }""}\'\r\n```\r\n\r\nSeems to be somewhat related to #268 . I tried to pinpoint where it goes wrong, but couldn\'t figure it out. My first guess would be that the `ThreadLocal` variables from e.g. the `SecurityContext` are not properly transferred to the thread handling the actual query. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1082100138', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/342#issuecomment-1082100138', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/342', 'id': 1082100138, 'node_id': 'IC_kwDOEMJUCs5Af4mq', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T16:30:59Z', 'updated_at': '2022-03-29T16:30:59Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for the sample. \r\n\r\nWe do attempt to propagate per WebSocket message but the SecurityContext was established on a different thread during the handshake, so we need to bridge but it seems `GraphQlWebSocketHandler` alone is not sufficient because `afterSessionEstablished` is also not on the initial thread. We'll likely use a `HandshakeInterceptor` to capture the context during the handshake and save it in the WebSocketSession attributes, and that'll require a change in the Boot starter as well.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1082100138/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20996802304,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-29T14:07:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/259', 'id': 1104739456, 'node_id': 'I_kwDOEMJUCs5B2PyA', 'number': 259, 'title': 'Support custom argument resolvers for @SchemaMapping methods', 'user': {'login': 'marceloverdijk', 'id': 197004, 'node_id': 'MDQ6VXNlcjE5NzAwNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/197004?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/marceloverdijk', 'html_url': 'https://github.com/marceloverdijk', 'followers_url': 'https://api.github.com/users/marceloverdijk/followers', 'following_url': 'https://api.github.com/users/marceloverdijk/following{/other_user}', 'gists_url': 'https://api.github.com/users/marceloverdijk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/marceloverdijk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/marceloverdijk/subscriptions', 'organizations_url': 'https://api.github.com/users/marceloverdijk/orgs', 'repos_url': 'https://api.github.com/users/marceloverdijk/repos', 'events_url': 'https://api.github.com/users/marceloverdijk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/marceloverdijk/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/3', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3/labels', 'id': 6777656, 'node_id': 'MDk6TWlsZXN0b25lNjc3NzY1Ng==', 'number': 3, 'title': '1.0 Backlog', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-05-20T14:45:21Z', 'updated_at': '2022-03-24T09:25:16Z', 'due_on': None, 'closed_at': None}, 'comments': 2, 'created_at': '2022-01-15T14:43:32Z', 'updated_at': '2022-03-29T14:07:30Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'As discussed in https://github.com/spring-projects/spring-graphql/issues/250 this is feature request for support of custom argument resolvers in GraphQL controllers.\r\n\r\nE.g. to support\r\n\r\n```\r\n@QueryMapping\r\npublic Page<Season> seasons(Pageable pageable) {\r\n    int first = pageable.getFirst();\r\n    int offset = pageable.getOffset();\r\n    ..\r\n}\r\n```\r\n\r\nThe plain example as above could already be implemented using a `@ProjectedPayload` \r\n\r\n```\r\n@ProjectedPayload\r\npublic interface Pageable {\r\n\r\n    int getFirst();\r\n    int getOffset();\r\n}\r\n```\r\n\r\n(Note: using the `@Argument` annotation for above case does not work me, see https://github.com/spring-projects/spring-graphql/issues/258)\r\n\r\nBut supporting custom argument resolvers could offer more flexibility I was looking for like the ability to use a custom `@interface` to provide defaults , e.g.\r\n\r\n```\r\n@QueryMapping\r\npublic Page<Season> seasons(@PageableDefault(first=10, offset=0) Pageable pageable) {\r\n    ..\r\n}\r\n\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081917745', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/259#issuecomment-1081917745', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259', 'id': 1081917745, 'node_id': 'IC_kwDOEMJUCs5AfMEx', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T14:07:30Z', 'updated_at': '2022-03-29T14:07:30Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for clarifying. For the `Pageable` example, isn't the logic within it and hence orthogonal to the instantiation or is there something specific about the instantiation?\r\n\r\nOf course it makes perfect sense to have such resolvers but for now it doesn't seem to be holding anything up, and with the two different types of handler methods and resolver contracts, I'd rather give this more time, before we find the best way to proceed.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081917745/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20996646632,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-29T14:00:58Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/340', 'id': 1182656653, 'node_id': 'I_kwDOEMJUCs5GfeiN', 'number': 340, 'title': 'Should the Spring Starter container a hello world', 'user': {'login': 'andimarek', 'id': 1706744, 'node_id': 'MDQ6VXNlcjE3MDY3NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1706744?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/andimarek', 'html_url': 'https://github.com/andimarek', 'followers_url': 'https://api.github.com/users/andimarek/followers', 'following_url': 'https://api.github.com/users/andimarek/following{/other_user}', 'gists_url': 'https://api.github.com/users/andimarek/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/andimarek/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/andimarek/subscriptions', 'organizations_url': 'https://api.github.com/users/andimarek/orgs', 'repos_url': 'https://api.github.com/users/andimarek/repos', 'events_url': 'https://api.github.com/users/andimarek/events{/privacy}', 'received_events_url': 'https://api.github.com/users/andimarek/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-27T20:42:30Z', 'updated_at': '2022-03-29T14:00:58Z', 'closed_at': '2022-03-28T08:31:22Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Hi,\r\n\r\nnot sure this is is actually possible or desired, but maybe when you generate a Spring GraphQL project via Spring https://start.spring.io/ you should get a hello world or echo schema out of the box?\r\n\r\nCurrently once you downloaded the package and start it, the app just ends again, because nothing is exposed.\r\n\r\nI think that would be a great help for people getting familiar with GraphQL and I remember with Spring Web you get also a simple Controller out of the box (?). \r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081910045', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/340#issuecomment-1081910045', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/340', 'id': 1081910045, 'node_id': 'IC_kwDOEMJUCs5AfKMd', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T14:00:58Z', 'updated_at': '2022-03-29T14:00:58Z', 'author_association': 'CONTRIBUTOR', 'body': 'The plan is to also add a Getting Started Guide under https://spring.io/guides.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081910045/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20996553808,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-29T13:57:08Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 1, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-29T13:57:07Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 10, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-29T13:57:07Z', 'closed_at': '2022-03-29T13:57:07Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The [RSocket protocol](https://rsocket.io/) has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams signals on the wire to complete a stream from the server side or to cancel it from the client side. That means, GraphQL over RSocket does not require a spec other than agreeing on the format for serialized requests and response. For that we can follow the [HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) defined format `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 7, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081905650', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339#issuecomment-1081905650', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'id': 1081905650, 'node_id': 'IC_kwDOEMJUCs5AfJHy', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T13:57:07Z', 'updated_at': '2022-03-29T13:57:07Z', 'author_association': 'CONTRIBUTOR', 'body': 'Closing this since the Spring GraphQL side is now in place, but will provide an update once the Boot starter catches up.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081905650/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20996553828,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-29T13:57:08Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 1, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-29T13:57:07Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 10, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-29T13:57:07Z', 'closed_at': '2022-03-29T13:57:07Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The [RSocket protocol](https://rsocket.io/) has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams signals on the wire to complete a stream from the server side or to cancel it from the client side. That means, GraphQL over RSocket does not require a spec other than agreeing on the format for serialized requests and response. For that we can follow the [HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) defined format `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 7, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}}",closed,Java
20996512915,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-29T13:55:24Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T11:32:47Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 9, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-29T13:55:23Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The [RSocket protocol](https://rsocket.io/) has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams signals on the wire to complete a stream from the server side or to cancel it from the client side. That means, GraphQL over RSocket does not require a spec other than agreeing on the format for serialized requests and response. For that we can follow the [HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) defined format `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 7, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081903720', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339#issuecomment-1081903720', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'id': 1081903720, 'node_id': 'IC_kwDOEMJUCs5AfIpo', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T13:55:23Z', 'updated_at': '2022-03-29T13:55:23Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for clarifying. I got it now. We don't support the per-stream mime type extension yet in spring-messaging but we'll consider it then."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081903720/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20996426666,PushEvent,spring-projects/spring-graphql,0.0,2022-03-29T13:51:49Z,"{'push_id': 9479161788, 'size': 4, 'distinct_size': 4, 'ref': 'refs/heads/main', 'head': 'b3f13b978aebbb18351f1920269c0dedc5f6b172', 'before': 'a5a5594e6453b7cc0bc771cb326430610f1956e5', 'commits': [{'sha': '8100650183b33b62346ddcdb1e6ea42c26242105', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Improve RSocket tests and minor refactoring\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/8100650183b33b62346ddcdb1e6ea42c26242105'}, {'sha': 'd41ced23c4e05414f4a3db58ace618d41f18a4d2', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add RSocketGraphQlTester\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/d41ced23c4e05414f4a3db58ace618d41f18a4d2'}, {'sha': 'f9b84cb8d03c10c796bf979bab2d760b3aa11ba4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update documentation for RSocketGraphQlTester\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/f9b84cb8d03c10c796bf979bab2d760b3aa11ba4'}, {'sha': 'b3f13b978aebbb18351f1920269c0dedc5f6b172', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refactoring in Client and Tester builder implementations\n\nThe default transport-specific client and tester extensions contained\ntheir builder implementations, but it makes more sense the other way\naround since the extensions are mainly about the builders they provide.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/b3f13b978aebbb18351f1920269c0dedc5f6b172'}]}",,Java
20991609824,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-29T09:47:38Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28240', 'id': 1182474334, 'node_id': 'I_kwDOABGHUc5GeyBe', 'number': 28240, 'title': 'WebClient/MockMVC issue with jquery ajax post', 'user': {'login': 'rbri', 'id': 2544132, 'node_id': 'MDQ6VXNlcjI1NDQxMzI=', 'avatar_url': 'https://avatars.githubusercontent.com/u/2544132?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rbri', 'html_url': 'https://github.com/rbri', 'followers_url': 'https://api.github.com/users/rbri/followers', 'following_url': 'https://api.github.com/users/rbri/following{/other_user}', 'gists_url': 'https://api.github.com/users/rbri/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rbri/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rbri/subscriptions', 'organizations_url': 'https://api.github.com/users/rbri/orgs', 'repos_url': 'https://api.github.com/users/rbri/repos', 'events_url': 'https://api.github.com/users/rbri/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rbri/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511816, 'node_id': 'MDU6TGFiZWwxMTg4NTExODE2', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20test', 'name': 'in: test', 'color': 'e8f9de', 'default': False, 'description': 'Issues in the test module'}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 8, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-29T09:14:46Z', 'due_on': None, 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-27T10:15:57Z', 'updated_at': '2022-03-29T09:47:37Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""Hi, i'm the maintainer of HtmlUnit and i like to finally fix the issues #25768 and https://github.com/HtmlUnit/htmlunit/issues/223.\r\n\r\nDid some analysis during the last day's - sorry for the long text here but i like to make my view on this clear and hopefully we can discuss and find a good solution.\r\nDid my analysis based on the sample here - https://github.com/thuri/htmlunit-test-project/tree/JQueryAjax\r\n\r\nLets start with the WebRequest class from HtmlUnit:\r\n* this is more or less an internal class\r\n* the api of that class is really **bad designed**\r\n** parameter and body are exclusive - you can only have one\r\n** the usage of the class requires some internal knowledge of how the request got filled\r\n** many more\r\n\r\n**Now the problem** - from my point of view:\r\norg.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder.params(MockHttpServletRequest, UriComponents) only takes parts of the (internal) logic of WebRequest into account; at the moment only the url and the parameters are checked when reading the parameters. There are more cases where the parameters are url-encoded in the body - these cases are the reason for the misbehavior.\r\n\r\n**Possible solutions**\r\nOption 1:\r\nTo fix the problem we can improve the HtmlUnitRequestBuilder.params implementation to reflect the whole functionality used by HtmlUnit\r\nBut i think this is not really maintainable - every time HtmlUnit changes parts of the internal magic here you have to fix something.\r\n\r\n**Option 2** (my preferred one):\r\nWe agree on a more stable interface for WebRequest that hides the internal parameter handling and always returns all the parameter (key value pairs) like e.g. the servlet api does. HtmlUnitRequestBuilder can use this method and gets always all params.\r\n\r\nI have already prototyped this solution (breaking HtmlUnits backwardcomatibility) by changing the com.gargoylesoftware.htmlunit.WebRequest.getRequestParameters() method in the way described above (the impl is available as 2.61.0-SNAPSHOT).\r\nThis fixes the problems but introduces a new one because the url paramters are doubled now (because HtmlUnitRequestBuilder.params(MockHttpServletRequest, UriComponents) handles this params already).\r\n\r\nBecause of this i like to get some feedback from you how we should proceed here.\r\n\r\nOr to summarize\r\n* i like to change HtmlUnit WebRequest to provide an API that returns always all request parameters (at best without breaking backward compatibility)\r\n* you change the impl of HtmlUnitRequestBuilder.params() to use only this method\r\n\r\nMany thanks\r\n    Ronald\r\n    (rbri at rbri.de)\r\n\r\n \r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081660497', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28240#issuecomment-1081660497', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28240', 'id': 1081660497, 'node_id': 'IC_kwDOABGHUc5AeNRR', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T09:47:37Z', 'updated_at': '2022-03-29T09:47:37Z', 'author_association': 'CONTRIBUTOR', 'body': ""@rbri thanks for the analysis and proposals. Yes, it would be great to encapsulate this better within HtmlUnit and we'll work with you to use the new API. Ideally, we'd be able to detect the new API and use it conditionally for now, through reflection, in order to avoid a hard requirement for the HtmUnit version and allow a more lenient upgrade.\r\n\r\nI'll re-purpose this issue to explore this change. Please, let us know when you have something we can experiment with."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081660497/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20991250114,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-29T09:29:27Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/14023', 'id': 398118998, 'node_id': 'MDU6SXNzdWUzOTgxMTg5OTg=', 'number': 14023, 'title': 'Add new method ConfigurableApplicationContext.removeApplicationListener() [SPR-9387]', 'user': {'login': 'spring-projects-issues', 'id': 16028288, 'node_id': 'MDQ6VXNlcjE2MDI4Mjg4', 'avatar_url': 'https://avatars.githubusercontent.com/u/16028288?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects-issues', 'html_url': 'https://github.com/spring-projects-issues', 'followers_url': 'https://api.github.com/users/spring-projects-issues/followers', 'following_url': 'https://api.github.com/users/spring-projects-issues/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects-issues/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects-issues/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects-issues/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects-issues/orgs', 'repos_url': 'https://api.github.com/users/spring-projects-issues/repos', 'events_url': 'https://api.github.com/users/spring-projects-issues/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects-issues/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}, {'id': 1189449303, 'node_id': 'MDU6TGFiZWwxMTg5NDQ5MzAz', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20bulk-closed', 'name': 'status: bulk-closed', 'color': 'fef2c0', 'default': False, 'description': ""An outdated, unresolved issue that's closed in bulk as part of a cleaning process""}, {'id': 3480266436, 'node_id': 'LA_kwDOABGHUc7PcKbE', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/for:%20team-meeting', 'name': 'for: team-meeting', 'color': 'c5def5', 'default': False, 'description': ""An issue we'd like to discuss as a team to make progress""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 6, 'created_at': '2012-05-08T15:49:26Z', 'updated_at': '2022-03-29T09:29:26Z', 'closed_at': None, 'author_association': 'COLLABORATOR', 'active_lock_reason': None, 'body': '**[Archie Cobbs](https://jira.spring.io/secure/ViewProfile.jspa?name=archie172)** opened **[SPR-9387](https://jira.spring.io/browse/SPR-9387?redirect=false)** and commented\n\nI have some object which need to receive some `ApplicationEvents` that are sent around in my application.\n\nHowever, these objects have a lifecycle that does not match with the lifecycle of normal beans in the application context (their lifecycle is shorter).\n\nTherefore, I have these beans marked `@Configurable`, and they are `ApplicationContextAware` so they can get a reference to the application context (which is assumed to be a `ConfigurableApplicationContext`.\n\nThen, when they ""start"" they register as listeners for application events via `ConfigurableApplicationContext.addApplicationListener()`. However, when they ""stop"" there is no way for them to unregister themselves as listeners, because there is no corresponding method `ConfigurableApplicationContext.removeApplicationListener()`.\n\nSo this request is simply to add `ConfigurableApplicationContext.removeApplicationListener()`.\n\nIf there is some more elegant way to do what I\'m trying to do please let me know. But just from the face of it, it seems weirdly asymmetrical to have a public `addFooListener()` method without a corresponding `removeFooListener()` method.\n\nThanks.\n\n---\n\n**Affects:** 3.1.1\n\n**Issue Links:**\n- #14027 Support DisposableBean on prototype and `@Configurable` beans using weak references\n\n1 votes, 4 watchers\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081642792', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/14023#issuecomment-1081642792', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14023', 'id': 1081642792, 'node_id': 'IC_kwDOABGHUc5AeI8o', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T09:29:26Z', 'updated_at': '2022-03-29T09:29:26Z', 'author_association': 'CONTRIBUTOR', 'body': 'Scheduling for 6.0 with a chance to explore a backport to 5.3.x.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081642792/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20991000266,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-29T09:17:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/14371', 'id': 398152827, 'node_id': 'MDU6SXNzdWUzOTgxNTI4Mjc=', 'number': 14371, 'title': 'Support setting threadNamePrefix in the <task:executor> XML tag [SPR-9737]', 'user': {'login': 'spring-projects-issues', 'id': 16028288, 'node_id': 'MDQ6VXNlcjE2MDI4Mjg4', 'avatar_url': 'https://avatars.githubusercontent.com/u/16028288?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects-issues', 'html_url': 'https://github.com/spring-projects-issues', 'followers_url': 'https://api.github.com/users/spring-projects-issues/followers', 'following_url': 'https://api.github.com/users/spring-projects-issues/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects-issues/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects-issues/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects-issues/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects-issues/orgs', 'repos_url': 'https://api.github.com/users/spring-projects-issues/repos', 'events_url': 'https://api.github.com/users/spring-projects-issues/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects-issues/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}, {'id': 1189449303, 'node_id': 'MDU6TGFiZWwxMTg5NDQ5MzAz', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20bulk-closed', 'name': 'status: bulk-closed', 'color': 'fef2c0', 'default': False, 'description': ""An outdated, unresolved issue that's closed in bulk as part of a cleaning process""}, {'id': 3480266436, 'node_id': 'LA_kwDOABGHUc7PcKbE', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/for:%20team-meeting', 'name': 'for: team-meeting', 'color': 'c5def5', 'default': False, 'description': ""An issue we'd like to discuss as a team to make progress""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 8, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-29T09:14:46Z', 'due_on': None, 'closed_at': None}, 'comments': 6, 'created_at': '2012-08-28T19:16:18Z', 'updated_at': '2022-03-29T09:17:03Z', 'closed_at': None, 'author_association': 'COLLABORATOR', 'active_lock_reason': None, 'body': '**[Archie Cobbs](https://jira.spring.io/secure/ViewProfile.jspa?name=archie172)** opened **[SPR-9737](https://jira.spring.io/browse/SPR-9737?redirect=false)** and commented\n\nThe `<task:executor id=""foo"">` XML element automatically sets the thread name prefix to `foo-`.\n\nThis is usually sufficient, but I have a need to set a different thread name prefix from the bean name.\n\nRequest support for e.g. `<task:executor id=""foo"" threadNamePrefix=""bar-"">` which would set the thread name prefix to `bar-` for that executor.\n\n\n\n---\n\n**Affects:** 3.1.2\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081630112', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/14371#issuecomment-1081630112', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/14371', 'id': 1081630112, 'node_id': 'IC_kwDOABGHUc5AeF2g', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T09:17:03Z', 'updated_at': '2022-03-29T09:17:03Z', 'author_association': 'CONTRIBUTOR', 'body': ""Considering this is an old issue, today we would expect this to be declared in Java config. Can you clarify if this is still relevant and if so why? Generally, we don't intend to add additional attributes to the XML namespace."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081630112/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20989838506,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-29T08:18:55Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28138', 'id': 1160359268, 'node_id': 'I_kwDOABGHUc5FKa1k', 'number': 28138, 'title': 'CodeGenerationException thrown when using AnnotationMBeanExporter on JDK 17', 'user': {'login': 'lizongbo', 'id': 1670666, 'node_id': 'MDQ6VXNlcjE2NzA2NjY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1670666?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/lizongbo', 'html_url': 'https://github.com/lizongbo', 'followers_url': 'https://api.github.com/users/lizongbo/followers', 'following_url': 'https://api.github.com/users/lizongbo/following{/other_user}', 'gists_url': 'https://api.github.com/users/lizongbo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/lizongbo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/lizongbo/subscriptions', 'organizations_url': 'https://api.github.com/users/lizongbo/orgs', 'repos_url': 'https://api.github.com/users/lizongbo/repos', 'events_url': 'https://api.github.com/users/lizongbo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/lizongbo/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188512000, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDAw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20core', 'name': 'in: core', 'color': 'e8f9de', 'default': False, 'description': 'Issues in core modules (aop, beans, core, context, expression)'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'sbrannen', 'id': 104798, 'node_id': 'MDQ6VXNlcjEwNDc5OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/104798?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sbrannen', 'html_url': 'https://github.com/sbrannen', 'followers_url': 'https://api.github.com/users/sbrannen/followers', 'following_url': 'https://api.github.com/users/sbrannen/following{/other_user}', 'gists_url': 'https://api.github.com/users/sbrannen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sbrannen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sbrannen/subscriptions', 'organizations_url': 'https://api.github.com/users/sbrannen/orgs', 'repos_url': 'https://api.github.com/users/sbrannen/repos', 'events_url': 'https://api.github.com/users/sbrannen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sbrannen/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'sbrannen', 'id': 104798, 'node_id': 'MDQ6VXNlcjEwNDc5OA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/104798?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sbrannen', 'html_url': 'https://github.com/sbrannen', 'followers_url': 'https://api.github.com/users/sbrannen/followers', 'following_url': 'https://api.github.com/users/sbrannen/following{/other_user}', 'gists_url': 'https://api.github.com/users/sbrannen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sbrannen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sbrannen/subscriptions', 'organizations_url': 'https://api.github.com/users/sbrannen/orgs', 'repos_url': 'https://api.github.com/users/sbrannen/repos', 'events_url': 'https://api.github.com/users/sbrannen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sbrannen/received_events', 'type': 'User', 'site_admin': False}, {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-29T08:13:24Z', 'due_on': None, 'closed_at': None}, 'comments': 2, 'created_at': '2022-03-05T13:58:59Z', 'updated_at': '2022-03-29T08:18:55Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '### Versions\r\n\r\n- Spring Version 5.3.16\r\n- JDK Version : Eclipse Adoptium Temurin-17.0.2+\r\n\r\n### Overview\r\n\r\ncreate some bean (`com.alibaba.druid.filter.stat.StatFilter`) with class extends `javax.management.NotificationBroadcasterSupport`.  \r\n\r\n`AnnotationMBeanExporter` Bean:\r\n\r\n```java\r\n@Configuration\r\npublic class TestJmxBean {\r\n    private static final Logger LOG = LoggerFactory.getLogger(TestJmxBean.class);\r\n    @Bean\r\n    @Lazy(false)\r\n    public AnnotationMBeanExporter annotationMBeanExporter() {\r\n        LOG.info(""TestJmxBean.annotationMBeanExporter|REPLACE_EXISTING"");\r\n        AnnotationMBeanExporter exporter = new AnnotationMBeanExporter();\r\n        exporter.setRegistrationPolicy(RegistrationPolicy.REPLACE_EXISTING);\r\n        return exporter;\r\n    }\r\n}\r\n```\r\n\r\nthe demo project in the attach file: \r\n[springquartzdemo.zip](https://github.com/spring-projects/spring-framework/files/8190778/springquartzdemo.zip)\r\n\r\n### Steps to Reproduce\r\n\r\n1. import the project to ide.\r\n2. run gradlew build\r\n3. use jdk 8 run the main class success.\r\n4. use jdk 17 run the main class  fail\r\n5. see the stack trace。\r\n6. cause : the package name `$javax.management` is not equals to `javax.management` ?\r\n\r\n```\r\nD:\\Java\\ide\\workspace\\springquartzdemo>D:\\Java\\jdk-17.0.2+8\\bin\\java -verbose:gc --add-opens java.management/javax.management=ALL-UNNAMED  -cp dist/conf;dist/lib/* -Dcom.sun.management.jmxremote.port=19881 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dfile.encoding=UTF-8 com.lizongbo.springdemo.SpringQuartzBugTest\r\n[0.025s][info][gc] Using G1\r\n[0.870s][info][gc] GC(0) Pause Young (Normal) (G1 Evacuation Pause) 23M->5M(128M) 7.105ms\r\n2022-03-05 21:39:11,366 main INFO The lookups option will be ignored. Message Lookups are no longer supported.\r\n[1.398s][info][gc] GC(1) Pause Young (Normal) (G1 Evacuation Pause) 29M->7M(128M) 6.926ms\r\n2022-03-05 21:39:11.987 [main] INFO  TestJmxBean.annotationMBeanExporter(TestJmxBean.java:17) - TestJmxBean.annotationMBeanExporter|REPLACE_EXISTING\r\nException in thread ""main"" org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [stat-filter] with key \'stat-filter\'; nested exception is org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalArgumentException-->$javax.management.NotificationBroadcasterSupport$$FastClassBySpringCGLIB$$824990df not in same package as lookup class\r\n        at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:626)\r\n        at org.springframework.jmx.export.MBeanExporter.lambda$registerBeans$2(MBeanExporter.java:552)\r\n        at java.base/java.util.HashMap.forEach(HashMap.java:1421)\r\n        at org.springframework.jmx.export.MBeanExporter.registerBeans(MBeanExporter.java:552)\r\n        at org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:435)\r\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:972)\r\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\r\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\r\n        at com.lizongbo.springdemo.SpringQuartzBugTest.main(SpringQuartzBugTest.java:18)\r\nCaused by: org.springframework.cglib.core.CodeGenerationException: java.lang.IllegalArgumentException-->$javax.management.NotificationBroadcasterSupport$$FastClassBySpringCGLIB$$824990df not in same package as lookup class\r\n        at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:580)\r\n        at org.springframework.cglib.core.AbstractClassGenerator.generate(AbstractClassGenerator.java:363)\r\n        at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:110)\r\n        at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData$3.apply(AbstractClassGenerator.java:108)\r\n        at org.springframework.cglib.core.internal.LoadingCache$2.call(LoadingCache.java:54)\r\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n        at org.springframework.cglib.core.internal.LoadingCache.createEntry(LoadingCache.java:61)\r\n        at org.springframework.cglib.core.internal.LoadingCache.get(LoadingCache.java:34)\r\n        at org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData.get(AbstractClassGenerator.java:134)\r\n        at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:319)\r\n        at org.springframework.cglib.reflect.FastClass$Generator.create(FastClass.java:65)\r\n        at org.springframework.cglib.proxy.MethodProxy.helper(MethodProxy.java:135)\r\n        at org.springframework.cglib.proxy.MethodProxy.init(MethodProxy.java:76)\r\n        at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:216)\r\n        at org.springframework.aop.framework.CglibAopProxy$DynamicUnadvisedInterceptor.intercept(CglibAopProxy.java:481)\r\n        at com.lizongbo.springdemo.SqlChcekStatFilter$$EnhancerBySpringCGLIB$$f714b8d3.getNotificationInfo(<generated>)\r\n        at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.findNotifications(MBeanIntrospector.java:447)\r\n        at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.getMBeanInfo(MBeanIntrospector.java:393)\r\n        at java.management/com.sun.jmx.mbeanserver.MBeanSupport.<init>(MBeanSupport.java:139)\r\n        at java.management/com.sun.jmx.mbeanserver.StandardMBeanSupport.<init>(StandardMBeanSupport.java:60)\r\n        at java.management/com.sun.jmx.mbeanserver.Introspector.makeDynamicMBean(Introspector.java:194)\r\n        at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:893)\r\n        at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:320)\r\n        at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:523)\r\n        at org.springframework.jmx.support.MBeanRegistrationSupport.doRegister(MBeanRegistrationSupport.java:138)\r\n        at org.springframework.jmx.export.MBeanExporter.registerLazyInit(MBeanExporter.java:715)\r\n        at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:597)\r\n        ... 8 more\r\nCaused by: java.lang.IllegalArgumentException: $javax.management.NotificationBroadcasterSupport$$FastClassBySpringCGLIB$$824990df not in same package as lookup class\r\n        at java.base/java.lang.invoke.MethodHandleStatics.newIllegalArgumentException(MethodHandleStatics.java:167)\r\n        at java.base/java.lang.invoke.MethodHandles$Lookup$ClassFile.newInstance(MethodHandles.java:2283)\r\n        at java.base/java.lang.invoke.MethodHandles$Lookup.makeClassDefiner(MethodHandles.java:2318)\r\n        at java.base/java.lang.invoke.MethodHandles$Lookup.defineClass(MethodHandles.java:1843)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n        at org.springframework.cglib.core.ReflectUtils.defineClass(ReflectUtils.java:577)\r\n        ... 34 more\r\n[1.809s][info][gc] GC(2) Pause Young (Concurrent Start) (Metadata GC Threshold) 32M->9M(128M) 5.691ms\r\n[1.811s][info][gc] GC(3) Concurrent Mark Cycle\r\n[1.821s][info][gc] GC(3) Pause Remark 10M->10M(40M) 2.380ms\r\n[1.823s][info][gc] GC(3) Pause Cleanup 10M->10M(40M) 0.067ms\r\n[1.826s][info][gc] GC(3) Concurrent Mark Cycle 15.156ms\r\n```\r\n\r\n![bug004](https://user-images.githubusercontent.com/1670666/156886423-8557462f-93b3-4f94-8b28-9e5efeb34722.png)\r\n\r\n![bug005](https://user-images.githubusercontent.com/1670666/156886432-97dfcb3f-2700-4bd7-96f6-ded43c75e797.png)\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081570097', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28138#issuecomment-1081570097', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28138', 'id': 1081570097, 'node_id': 'IC_kwDOABGHUc5Ad3Mx', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-29T08:18:55Z', 'updated_at': '2022-03-29T08:18:55Z', 'author_association': 'CONTRIBUTOR', 'body': 'Could you re-attach the demo project? The link is no longer working.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1081570097/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20981061298,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-28T19:59:50Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T11:32:47Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 7, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-28T19:59:50Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The [RSocket protocol](https://rsocket.io/) has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams signals on the wire to complete a stream from the server side or to cancel it from the client side. That means, GraphQL over RSocket does not require a spec other than agreeing on the format for serialized requests and response. For that we can follow the [HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) defined format `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 7, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081080170', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339#issuecomment-1081080170', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'id': 1081080170, 'node_id': 'IC_kwDOEMJUCs5Ab_lq', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-28T19:59:50Z', 'updated_at': '2022-03-28T19:59:50Z', 'author_association': 'CONTRIBUTOR', 'body': ""I'm not sure I follow what you're saying, why would the GraphQL request be in the metadata?"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1081080170/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20978511602,CommitCommentEvent,rstoyanchev/spring-framework,0.0,2022-03-28T17:26:17Z,"{'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738754', 'html_url': 'https://github.com/rstoyanchev/spring-framework/commit/93ba51ddc1dddd23175584323c49222eda310c26#r69738754', 'id': 69738754, 'node_id': 'CC_kwDOADEvl84EKCEC', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'position': 108, 'line': 108, 'path': 'spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceMethod.java', 'commit_id': '93ba51ddc1dddd23175584323c49222eda310c26', 'created_at': '2022-03-28T17:26:17Z', 'updated_at': '2022-03-28T17:26:17Z', 'author_association': 'OWNER', 'body': 'Yes, each resolver can decide what it needs to inspect, including annotations.', 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738754/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}}}",,Java
20978498745,CommitCommentEvent,rstoyanchev/spring-framework,0.0,2022-03-28T17:25:33Z,"{'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738715', 'html_url': 'https://github.com/rstoyanchev/spring-framework/commit/93ba51ddc1dddd23175584323c49222eda310c26#r69738715', 'id': 69738715, 'node_id': 'CC_kwDOADEvl84EKCDb', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'position': 68, 'line': 68, 'path': 'spring-web/src/main/java/org/springframework/web/service/annotation/HttpRequest.java', 'commit_id': '93ba51ddc1dddd23175584323c49222eda310c26', 'created_at': '2022-03-28T17:25:33Z', 'updated_at': '2022-03-28T17:25:33Z', 'author_association': 'OWNER', 'body': 'I thought about that for a moment but when creating a request there is usually no default so I think it makes sense to leave it without a default. In practice, I expect that HTTP method specific shortcuts would almost always be used at the method level, making this a non-issue.\r\n', 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738715/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}}}",,Java
20978451468,CommitCommentEvent,rstoyanchev/spring-framework,0.0,2022-03-28T17:22:51Z,"{'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738537', 'html_url': 'https://github.com/rstoyanchev/spring-framework/commit/93ba51ddc1dddd23175584323c49222eda310c26#r69738537', 'id': 69738537, 'node_id': 'CC_kwDOADEvl84EKCAp', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'position': 41, 'line': 41, 'path': 'spring-web/src/main/java/org/springframework/web/service/annotation/HttpRequest.java', 'commit_id': '93ba51ddc1dddd23175584323c49222eda310c26', 'created_at': '2022-03-28T17:22:51Z', 'updated_at': '2022-03-28T17:22:51Z', 'author_association': 'OWNER', 'body': ""It's for path prefix but not limited. You could also set `contentType` or `accept` at the class level for all methods to inherit as a default. The `HttpMethod` is less likely to be shared but not out of the range or possibilities. It's very much analogous to a class-level `@RequestMapping`."", 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738537/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}}}",,Java
20978385123,CommitCommentEvent,rstoyanchev/spring-framework,0.0,2022-03-28T17:19:08Z,"{'comment': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738324', 'html_url': 'https://github.com/rstoyanchev/spring-framework/commit/93ba51ddc1dddd23175584323c49222eda310c26#r69738324', 'id': 69738324, 'node_id': 'CC_kwDOADEvl84EKB9U', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'position': 44, 'line': 44, 'path': 'spring-web/src/main/java/org/springframework/web/service/annotation/HttpRequest.java', 'commit_id': '93ba51ddc1dddd23175584323c49222eda310c26', 'created_at': '2022-03-28T17:19:08Z', 'updated_at': '2022-03-28T17:19:08Z', 'author_association': 'OWNER', 'body': ""Good catch, didn't even notice this!"", 'reactions': {'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/comments/69738324/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}}}",,Java
20977750379,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-28T16:43:14Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27973', 'id': 1113032599, 'node_id': 'I_kwDOABGHUc5CV4eX', 'number': 27973, 'title': 'Issue with WebSocket transport compression for RSocket', 'user': {'login': 'ekuleshov', 'id': 440954, 'node_id': 'MDQ6VXNlcjQ0MDk1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/440954?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ekuleshov', 'html_url': 'https://github.com/ekuleshov', 'followers_url': 'https://api.github.com/users/ekuleshov/followers', 'following_url': 'https://api.github.com/users/ekuleshov/following{/other_user}', 'gists_url': 'https://api.github.com/users/ekuleshov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ekuleshov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ekuleshov/subscriptions', 'organizations_url': 'https://api.github.com/users/ekuleshov/orgs', 'repos_url': 'https://api.github.com/users/ekuleshov/repos', 'events_url': 'https://api.github.com/users/ekuleshov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ekuleshov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511784, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzg0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20messaging', 'name': 'in: messaging', 'color': 'e8f9de', 'default': False, 'description': 'Issues in messaging modules (jms, messaging)'}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-28T16:43:13Z', 'due_on': None, 'closed_at': None}, 'comments': 8, 'created_at': '2022-01-20T20:25:15Z', 'updated_at': '2022-03-28T16:43:13Z', 'closed_at': '2022-03-28T16:43:13Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': '<!--\r\nThanks for raising a Spring Boot issue. Please take the time to review the following\r\ncategories as some of them do not apply here.\r\n\r\n🙅 ""Please DO NOT Raise an Issue"" Cases\r\n- Question\r\nSTOP!! Please ask questions about how to use something, or to understand why something isn\'t\r\nworking as you expect it to, on Stack Overflow using the spring-boot tag.\r\n- Security Vulnerability\r\nSTOP!! Please don\'t raise security vulnerabilities here. Head over to https://spring.io/security-policy to learn how to disclose them responsibly.\r\n- Managed Dependency Upgrade\r\nYou DO NOT need to raise an issue for a managed dependency version upgrade as there\'s a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.\r\n- With an Immediate Pull Request\r\nAn issue will be closed as a duplicate of the immediate pull request, so you don\'t have to raise an issue if you plan to create a pull request immediately.\r\n\r\n🐞 Bug report (please don\'t include this emoji/text, just add your details)\r\nPlease provide details of the problem, including the version of Spring Boot that you\r\nare using. If possible, please provide a test case or sample application that reproduces\r\nthe problem. This makes it much easier for us to diagnose the problem and to verify that\r\nwe have fixed it.\r\n\r\n🎁 Enhancement (please don\'t include this emoji/text, just add your details)\r\nPlease start by describing the problem that you are trying to solve. There may already\r\nbe a solution, or there may be a way to solve it that you hadn\'t considered.\r\n\r\n\r\nTIP: You can always edit your issue if it isn\'t formatted correctly.\r\n     See https://guides.github.com/features/mastering-markdown \r\n-->\r\n\r\nUnable to make WebSocket transport compression work in RSocket client/server Spring Boot applications running with Netty backend and Spring Boot version 2.5.9.\r\n\r\nThe Spring Boot allows to specify the server-side RSocket transport and endpoint path in the application.properties, but there are no any additional configuration parameters available besides that. The autoconfig creates an instance of the `RSocketWebSocketNettyRouteProvider` which doesn\'t have compression enabled and also doesn\'t have any customizers to enable it.\r\n\r\nTo get around that I removed `spring.rsocket.server.mapping-path` property and declared a bean like this in the server config to pass a `WebsocketServerSpec` with compress option enabled to `httpServerRoutes.ws(...)` call:\r\n\r\n```\r\n    @Bean\r\n    NettyRouteProvider rSocketWebsocketRouteProvider(\r\n            RSocketProperties properties, RSocketMessageHandler messageHandler,\r\n            ObjectProvider<RSocketServerCustomizer> customizers) {\r\n        return new NettyRouteProvider() {\r\n            public HttpServerRoutes apply(HttpServerRoutes httpServerRoutes) {\r\n                RSocketServer server = RSocketServer.create(messageHandler.responder());\r\n                customizers.forEach((customizer) -> customizer.customize(server));\r\n\r\n                return httpServerRoutes.ws(""/rsocket"",\r\n                        WebsocketRouteTransport.newHandler(server.asConnectionAcceptor()),\r\n                        WebsocketServerSpec.builder().compress(true).build());\r\n            }\r\n        };\r\n    }\r\n```\r\n\r\nOn the client side I\'m creating `RSocketRequester` like this:\r\n\r\n```\r\nRSocketRequester requester = builder\r\n                .setupRoute(""/backend/connect"")\r\n                .setupData(id)\r\n                .rsocketConnector(connector -> connector\r\n                        .reconnect(Retry.fixedDelay(Integer.MAX_VALUE, Duration.ofSeconds(5)))\r\n                        .acceptor(RSocketMessageHandler.responder(strategies, backendController)) // ****** (1)\r\n                )\r\n                .dataMimeType(MediaType.APPLICATION_JSON)\r\n                .transport(() -> {\r\n                    // httpClient is immutable - baseUrl() creates a copy\r\n                    ClientTransport t = WebsocketClientTransport.create(\r\n                                HttpClient.create().baseUrl(backendUrl), ""/rsocket"")\r\n                            .webSocketSpec(configurer -> configurer\r\n                                    .compress(true) // ****** (2)\r\n                                    .maxFramePayloadLength(65536));\r\n                    return t.connect();\r\n                });\r\n```\r\n\r\nThe `webSocketSpec` need to have compress flag enabled. Otherwise I don\'t see compression applied when looking at the traffic in Charles proxy with a simple port forwarding enabled.\r\n\r\nThe problem is that when compress is enabled on line (2) the client can\'t complete the connection sequence.\r\nHowever if I comment out the `.acceptor()` configuration on line (1) the connect is working and I see server to client calls going through and I can see data is being compressed. But without the acceptor server can\'t call the client.\r\n\r\nHere is an example project repository https://github.com/maximdim/rsocket2/tree/rsocket-compression\r\nYou can launch `BackendApplication` and `AgentApplication` to observe described issue.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/timeline', 'performed_via_github_app': None}}",closed,Java
20977750263,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-28T16:43:13Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27973', 'id': 1113032599, 'node_id': 'I_kwDOABGHUc5CV4eX', 'number': 27973, 'title': 'Issue with WebSocket transport compression for RSocket', 'user': {'login': 'ekuleshov', 'id': 440954, 'node_id': 'MDQ6VXNlcjQ0MDk1NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/440954?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ekuleshov', 'html_url': 'https://github.com/ekuleshov', 'followers_url': 'https://api.github.com/users/ekuleshov/followers', 'following_url': 'https://api.github.com/users/ekuleshov/following{/other_user}', 'gists_url': 'https://api.github.com/users/ekuleshov/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ekuleshov/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ekuleshov/subscriptions', 'organizations_url': 'https://api.github.com/users/ekuleshov/orgs', 'repos_url': 'https://api.github.com/users/ekuleshov/repos', 'events_url': 'https://api.github.com/users/ekuleshov/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ekuleshov/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511784, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzg0', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20messaging', 'name': 'in: messaging', 'color': 'e8f9de', 'default': False, 'description': 'Issues in messaging modules (jms, messaging)'}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-28T16:43:13Z', 'due_on': None, 'closed_at': None}, 'comments': 7, 'created_at': '2022-01-20T20:25:15Z', 'updated_at': '2022-03-28T16:43:13Z', 'closed_at': '2022-03-28T16:43:13Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': '<!--\r\nThanks for raising a Spring Boot issue. Please take the time to review the following\r\ncategories as some of them do not apply here.\r\n\r\n🙅 ""Please DO NOT Raise an Issue"" Cases\r\n- Question\r\nSTOP!! Please ask questions about how to use something, or to understand why something isn\'t\r\nworking as you expect it to, on Stack Overflow using the spring-boot tag.\r\n- Security Vulnerability\r\nSTOP!! Please don\'t raise security vulnerabilities here. Head over to https://spring.io/security-policy to learn how to disclose them responsibly.\r\n- Managed Dependency Upgrade\r\nYou DO NOT need to raise an issue for a managed dependency version upgrade as there\'s a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.\r\n- With an Immediate Pull Request\r\nAn issue will be closed as a duplicate of the immediate pull request, so you don\'t have to raise an issue if you plan to create a pull request immediately.\r\n\r\n🐞 Bug report (please don\'t include this emoji/text, just add your details)\r\nPlease provide details of the problem, including the version of Spring Boot that you\r\nare using. If possible, please provide a test case or sample application that reproduces\r\nthe problem. This makes it much easier for us to diagnose the problem and to verify that\r\nwe have fixed it.\r\n\r\n🎁 Enhancement (please don\'t include this emoji/text, just add your details)\r\nPlease start by describing the problem that you are trying to solve. There may already\r\nbe a solution, or there may be a way to solve it that you hadn\'t considered.\r\n\r\n\r\nTIP: You can always edit your issue if it isn\'t formatted correctly.\r\n     See https://guides.github.com/features/mastering-markdown \r\n-->\r\n\r\nUnable to make WebSocket transport compression work in RSocket client/server Spring Boot applications running with Netty backend and Spring Boot version 2.5.9.\r\n\r\nThe Spring Boot allows to specify the server-side RSocket transport and endpoint path in the application.properties, but there are no any additional configuration parameters available besides that. The autoconfig creates an instance of the `RSocketWebSocketNettyRouteProvider` which doesn\'t have compression enabled and also doesn\'t have any customizers to enable it.\r\n\r\nTo get around that I removed `spring.rsocket.server.mapping-path` property and declared a bean like this in the server config to pass a `WebsocketServerSpec` with compress option enabled to `httpServerRoutes.ws(...)` call:\r\n\r\n```\r\n    @Bean\r\n    NettyRouteProvider rSocketWebsocketRouteProvider(\r\n            RSocketProperties properties, RSocketMessageHandler messageHandler,\r\n            ObjectProvider<RSocketServerCustomizer> customizers) {\r\n        return new NettyRouteProvider() {\r\n            public HttpServerRoutes apply(HttpServerRoutes httpServerRoutes) {\r\n                RSocketServer server = RSocketServer.create(messageHandler.responder());\r\n                customizers.forEach((customizer) -> customizer.customize(server));\r\n\r\n                return httpServerRoutes.ws(""/rsocket"",\r\n                        WebsocketRouteTransport.newHandler(server.asConnectionAcceptor()),\r\n                        WebsocketServerSpec.builder().compress(true).build());\r\n            }\r\n        };\r\n    }\r\n```\r\n\r\nOn the client side I\'m creating `RSocketRequester` like this:\r\n\r\n```\r\nRSocketRequester requester = builder\r\n                .setupRoute(""/backend/connect"")\r\n                .setupData(id)\r\n                .rsocketConnector(connector -> connector\r\n                        .reconnect(Retry.fixedDelay(Integer.MAX_VALUE, Duration.ofSeconds(5)))\r\n                        .acceptor(RSocketMessageHandler.responder(strategies, backendController)) // ****** (1)\r\n                )\r\n                .dataMimeType(MediaType.APPLICATION_JSON)\r\n                .transport(() -> {\r\n                    // httpClient is immutable - baseUrl() creates a copy\r\n                    ClientTransport t = WebsocketClientTransport.create(\r\n                                HttpClient.create().baseUrl(backendUrl), ""/rsocket"")\r\n                            .webSocketSpec(configurer -> configurer\r\n                                    .compress(true) // ****** (2)\r\n                                    .maxFramePayloadLength(65536));\r\n                    return t.connect();\r\n                });\r\n```\r\n\r\nThe `webSocketSpec` need to have compress flag enabled. Otherwise I don\'t see compression applied when looking at the traffic in Charles proxy with a simple port forwarding enabled.\r\n\r\nThe problem is that when compress is enabled on line (2) the client can\'t complete the connection sequence.\r\nHowever if I comment out the `.acceptor()` configuration on line (1) the connect is working and I see server to client calls going through and I can see data is being compressed. But without the acceptor server can\'t call the client.\r\n\r\nHere is an example project repository https://github.com/maximdim/rsocket2/tree/rsocket-compression\r\nYou can launch `BackendApplication` and `AgentApplication` to observe described issue.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1080892243', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27973#issuecomment-1080892243', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27973', 'id': 1080892243, 'node_id': 'IC_kwDOABGHUc5AbRtT', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-28T16:43:13Z', 'updated_at': '2022-03-28T16:43:13Z', 'author_association': 'CONTRIBUTOR', 'body': ""@ekuleshov apologies for the delay. I have been able to reproduce this and the issue seems to be related to the client acceptor not being able to read anything from the `SETUP` payload. This is for any client acceptor, and it's reproducible with just RSocket Java. I've created https://github.com/rsocket/rsocket-java/issues/1045 to supersede this one.\r\n\r\nThanks for the report!"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1080892243/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20977650055,IssuesEvent,rsocket/rsocket-java,0.0,2022-03-28T16:37:35Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045', 'repository_url': 'https://api.github.com/repos/rsocket/rsocket-java', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045/labels{/name}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045/comments', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045/events', 'html_url': 'https://github.com/rsocket/rsocket-java/issues/1045', 'id': 1183700130, 'node_id': 'I_kwDOAk8BS85GjdSi', 'number': 1045, 'title': ""Client SocketAcceptor can't access ConnectionSetupPayload if compression is on"", 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-28T16:37:35Z', 'updated_at': '2022-03-28T16:37:35Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'If compression is enabled on client and server, the client acceptor fails with `ArrayIndexOutOfBoundsException` if it tries to access properties of `ConnectionSetupPayload`. \r\n\r\nHere is the diff with changes to the [WebSocketAggregationSample](https://github.com/rsocket/rsocket-java/blob/master/rsocket-examples/src/main/java/io/rsocket/examples/transport/ws/WebSocketAggregationSample.java) to demonstrate the issue:\r\n```diff\r\ndiff --git a/rsocket-examples/src/main/java/io/rsocket/examples/transport/ws/WebSocketAggregationSample.java b/rsocket-examples/src/main/java/io/rsocket/examples/transport/ws/WebSocketAggregationSample.java\r\nindex 89304853..59a54c39 100644\r\n--- a/rsocket-examples/src/main/java/io/rsocket/examples/transport/ws/WebSocketAggregationSample.java\r\n+++ b/rsocket-examples/src/main/java/io/rsocket/examples/transport/ws/WebSocketAggregationSample.java\r\n@@ -33,6 +33,7 @@\r\n import reactor.netty.Connection;\r\n import reactor.netty.DisposableServer;\r\n import reactor.netty.http.server.HttpServer;\r\n+import reactor.netty.http.server.WebsocketServerSpec;\r\n \r\n public class WebSocketAggregationSample {\r\n \r\n@@ -57,16 +58,27 @@ public static void main(String[] args) {\r\n                                 .apply(\r\n                                     new WebsocketDuplexConnection(\r\n                                         (Connection) in.aggregateFrames()))\r\n-                                .then(out.neverComplete())))\r\n+                                .then(out.neverComplete()),\r\n+                            WebsocketServerSpec.builder().compress(true).build()))\r\n             .bindNow();\r\n \r\n     WebsocketClientTransport transport =\r\n-        WebsocketClientTransport.create(server.host(), server.port());\r\n+        WebsocketClientTransport.create(server.host(), server.port())\r\n+                .webSocketSpec(builder -> builder.compress(true));\r\n \r\n     RSocket clientRSocket =\r\n         RSocketConnector.create()\r\n             .keepAlive(Duration.ofMinutes(10), Duration.ofMinutes(10))\r\n             .payloadDecoder(PayloadDecoder.ZERO_COPY)\r\n+            .acceptor((setup, sendingSocket) -> {\r\n+                try {\r\n+                    setup.dataMimeType();\r\n+                }\r\n+                catch (Exception ex) {\r\n+                    ex.printStackTrace();\r\n+                }\r\n+              return Mono.just(new RSocket() {});\r\n+            })\r\n             .connect(transport)\r\n             .block();\r\n ```\r\n\r\nI have noticed that the server acceptor has no trouble reading the `ConnectionSetupPayload` so it must be something client-side related, and it could be deeper in Reactor Netty.\r\n\r\nThis was originally reported in https://github.com/spring-projects/spring-framework/issues/27973 by @ekuleshov but the issue can be demonstrated without Spring. \r\n', 'reactions': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1045/timeline', 'performed_via_github_app': None}}",opened,Java
20976103711,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-28T15:20:38Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653', 'id': 1047355222, 'node_id': 'I_kwDOABGHUc4-bV9W', 'number': 27653, 'title': 'When using HandshakeInterceptor with ServerHttpAsyncRequestControl, Jetty10RequestUpgradeStrategy throws exception due to null servletContext', 'user': {'login': 'ajr3-gen', 'id': 93659748, 'node_id': 'U_kgDOBZUiZA', 'avatar_url': 'https://avatars.githubusercontent.com/u/93659748?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ajr3-gen', 'html_url': 'https://github.com/ajr3-gen', 'followers_url': 'https://api.github.com/users/ajr3-gen/followers', 'following_url': 'https://api.github.com/users/ajr3-gen/following{/other_user}', 'gists_url': 'https://api.github.com/users/ajr3-gen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ajr3-gen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ajr3-gen/subscriptions', 'organizations_url': 'https://api.github.com/users/ajr3-gen/orgs', 'repos_url': 'https://api.github.com/users/ajr3-gen/repos', 'events_url': 'https://api.github.com/users/ajr3-gen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ajr3-gen/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1189495432, 'node_id': 'MDU6TGFiZWwxMTg5NDk1NDMy', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-28T15:04:07Z', 'due_on': None, 'closed_at': None}, 'comments': 8, 'created_at': '2021-11-03T14:45:18Z', 'updated_at': '2022-03-28T15:20:38Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""We are upgrading our project from Jetty v9 to v10 and have encountered a problem with the new spring-boot Jetty implementation.\r\n\r\nOur WebSocketController includes a custom HandshakeInterceptor.  In the beforeHandshake() method, we use this line:\r\n```\r\n        ServerHttpAsyncRequestControl requestControl = request.getAsyncRequestControl(response);\r\n        requestControl.start();\r\n```\r\nso that we can authorize the request before completing it.  We do that authorization in a separate thread and then call DefaultHandshakeHandler to complete the handshake:\r\n```\r\n        handshakeHandler.doHandshake(request, response, wsHandler, attributes);\r\n        requestControl.complete();\r\n```\r\nwhile the beforeHandshake method exits on the main thread.\r\n\r\nThis worked fine with Jetty v9 (which is implemented in spring-boot via the class `org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy`).  However, with Jetty v10 (which uses a new class: `org.springframework.web.socket.server.jetty.Jetty10RequestUpgradeStrategy`), there is a NullPointerException.  This is because Jetty10RequestUpgradeStrategy uses reflection to invoke `JettyWebSocketServerContainer getContainer(ServletContext servletContext)` which tries to resolve an attribute from the request's servletContext -- **but servletContext has now been cleared out** as we have exited the beforeHandshake() method on the main thread.\r\n\r\nI confirmed this by adding a Thread.sleep() to our beforeHandshake() method to delay it from returning for a couple of seconds, and this allowed the thread with DefaultHandshakeHandler to complete.  Without this delay, we catch this error and the handshake does not complete:\r\n`    org.springframework.web.socket.server.HandshakeFailureException: Failed to upgrade; nested exception is java.lang.NullPointerException`\r\n\r\nVersions used:\r\nspring.boot = 2.5.6\r\njetty.version = 10.0.6\r\nspring.framework = 5.3.12\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1080788809', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653#issuecomment-1080788809', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'id': 1080788809, 'node_id': 'IC_kwDOABGHUc5Aa4dJ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-28T15:20:38Z', 'updated_at': '2022-03-28T15:20:38Z', 'author_association': 'CONTRIBUTOR', 'body': ""The Java/Jakarta EE WebSocket API did not make it possible to initiate a WebSocket handshake at runtime and we've had to find ways to do it on each container. The way we did it on Jetty 9 made it possible to do what you want to do. However, the Jetty WebSocket API in Jetty changed significantly from 9 to 10, and we had to change too, even request an API change to enable what we needed to do, see https://github.com/eclipse/jetty.project/issues/5866. Now we're using the only API that we can and the upgrade requires access to the `ServletContext`. You can [see the same](https://github.com/spring-projects/spring-framework/blob/50973f73c70723198752d6ded3ad6af2c05b5674/spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java#L66-L100) in the `main` branch which compiles against Jetty 10 and hence does not need reflection. It is the same there, i.e. this is not related to the use of reflection.\r\n\r\nI'm afraid I don't know what else we can do about this. It's the only mechanism we have to use, and I don't know what your application does with WebSocket (STOMP, raw WebSocket, etc) to be able to suggest other changes like using WebFlux or otherwise dropping on a lower level.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1080788809/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20970407703,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-28T10:48:54Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T11:32:47Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 4, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-28T10:48:54Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The [RSocket protocol](https://rsocket.io/) has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams signals on the wire to complete a stream from the server side or to cancel it from the client side. That means, GraphQL over RSocket does not require a spec other than agreeing on the format for serialized requests and response. For that we can follow the [HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) defined format `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 7, '+1': 4, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 2, 'rocket': 1, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1080494433', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339#issuecomment-1080494433', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'id': 1080494433, 'node_id': 'IC_kwDOEMJUCs5AZwlh', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-28T10:48:54Z', 'updated_at': '2022-03-28T10:48:54Z', 'author_association': 'CONTRIBUTOR', 'body': '@linux-china the only thing that I see for the metadata is a route that maps to the GraphQL handler on the server side. The mime types ""application/graphql+json"" or ""application/json"" are for the data payload that carry the GraphQL requests and responses.\r\n\r\n@viglucci awesome to hear this is progressing on the RSocket-JS side in parallel. Yes this should work but it would be great to try out. It\'s available in `spring-graphql` snapshots but we\'ll also need a Boot snapshot due to the renaming of the `web` package to `server`. We\'re considering some further changes in the Boot GraphQL starter for this with https://github.com/spring-projects/spring-boot/issues/30453. I\'ll update this issue when it\'s a good time to try. \r\n\r\nOverall, yes it should work find since Spring\'s `Jackson2JsonDecoder` is configured to support `application/*+json` and will get involved for any JSON mime type such as `application/graphql+json`. \r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1080494433/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20970127249,IssueCommentEvent,spring-projects/spring-boot,0.0,2022-03-28T10:33:08Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-boot', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453/events', 'html_url': 'https://github.com/spring-projects/spring-boot/issues/30453', 'id': 1183177205, 'node_id': 'I_kwDOAGAU1s5Ghdn1', 'number': 30453, 'title': 'Support RSocket transport in GraphQL', 'user': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 16916893, 'node_id': 'MDU6TGFiZWwxNjkxNjg5Mw==', 'url': 'https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/milestones/234', 'html_url': 'https://github.com/spring-projects/spring-boot/milestone/234', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-boot/milestones/234/labels', 'id': 7286916, 'node_id': 'MI_kwDOAGAU1s4AbzCE', 'number': 234, 'title': '2.7.x', 'description': 'Issues that we want to solve in the 2.7.x line', 'creator': {'login': 'philwebb', 'id': 519772, 'node_id': 'MDQ6VXNlcjUxOTc3Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/519772?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/philwebb', 'html_url': 'https://github.com/philwebb', 'followers_url': 'https://api.github.com/users/philwebb/followers', 'following_url': 'https://api.github.com/users/philwebb/following{/other_user}', 'gists_url': 'https://api.github.com/users/philwebb/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/philwebb/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/philwebb/subscriptions', 'organizations_url': 'https://api.github.com/users/philwebb/orgs', 'repos_url': 'https://api.github.com/users/philwebb/repos', 'events_url': 'https://api.github.com/users/philwebb/events{/privacy}', 'received_events_url': 'https://api.github.com/users/philwebb/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 21, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-10-25T16:01:55Z', 'updated_at': '2022-03-28T09:47:21Z', 'due_on': None, 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-28T09:47:21Z', 'updated_at': '2022-03-28T10:33:08Z', 'closed_at': None, 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': 'Since spring-projects/spring-graphql#339, Spring for GraphQL also allows RSocket transport.\r\nSpring Boot should also support this by auto-configuring a Controller that, using `RSocketGraphQlHandler`, handles RSocket messages at a configured path.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/comments/1080480594', 'html_url': 'https://github.com/spring-projects/spring-boot/issues/30453#issuecomment-1080480594', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30453', 'id': 1080480594, 'node_id': 'IC_kwDOAGAU1s5AZtNS', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-28T10:33:07Z', 'updated_at': '2022-03-28T10:33:07Z', 'author_association': 'CONTRIBUTOR', 'body': 'Note there is also an `RSocketGraphQlClient` and `RSocketGraphQlTester` which use `RSocketRequester`. \r\n\r\nCurrently, if you start with  `RSocketGraphQlClient.builder()`, it will create a new `RSocketRequester.Builder` and set the `dataMimeType` to ""application/graphql+json"", but if you start with `builder(RSocketRequester.Builder)`, which could be the builder from Boot\'s RSocket starter, then you\'d have to make it `builder(RSocketRequester.Builder).dataMimeType(""application/graphql+json"")`. Either the Boot start should provide an `RSocketRequester.Builder` for GraphQL or we could set the `dataMimeType` even when we are given a builder.\r\n\r\nIn any case, if we there isn\'t anything to be added on the Boot side for the client or tester, a short update in the documentation with guidance would also make sense.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/comments/1080480594/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20968573750,PullRequestReviewEvent,rsocket/rsocket-java,0.0,2022-03-28T09:12:37Z,"{'action': 'created', 'review': {'id': 922838573, 'node_id': 'PRR_kwDOAk8BS843AWYt', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Looks good. \r\n\r\nHowever, considering the description under #1034:\r\n\r\n> faulty implementation of the block method, which in turn was a near-duplicate of the subscribe method. Mono's implementation of the block methods already delegate to subscribe in a safe way, as it seems, so there seems to be no obvious (documented) reason why the block method needs to be overridden.\r\n\r\nIt would be good to add to the Java doc of those `block` methods that explains the reason they are there.\r\n\r\n"", 'commit_id': 'd0650b64cfc3f2816c9fdeacd83753048a2516c1', 'submitted_at': '2022-03-28T09:09:49Z', 'state': 'approved', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1044#pullrequestreview-922838573', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044', 'author_association': 'CONTRIBUTOR', '_links': {'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1044#pullrequestreview-922838573'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044', 'id': 889893234, 'node_id': 'PR_kwDOAk8BS841CrFy', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1044', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1044.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1044.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044', 'number': 1044, 'state': 'open', 'locked': False, 'title': 'fixes `block()` in MetadataPushRequesterMono', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'closes #1033. Supersedes #1034  \r\n\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\nSigned-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\n', 'created_at': '2022-03-25T20:45:57Z', 'updated_at': '2022-03-28T09:12:37Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '0e26e1e9c151881a299d3c95c50d3c4e37e311a0', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/d0650b64cfc3f2816c9fdeacd83753048a2516c1', 'head': {'label': 'rsocket:bugfix/1033', 'ref': 'bugfix/1033', 'sha': 'd0650b64cfc3f2816c9fdeacd83753048a2516c1', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-27T11:28:43Z', 'pushed_at': '2022-03-27T20:44:24Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5878, 'stargazers_count': 2136, 'watchers_count': 2136, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2136, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'd8cccbe4e69e5ff358b0f75321fc7589e693dff9', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-27T11:28:43Z', 'pushed_at': '2022-03-27T20:44:24Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5878, 'stargazers_count': 2136, 'watchers_count': 2136, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2136, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1044'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/d0650b64cfc3f2816c9fdeacd83753048a2516c1'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20968516013,PullRequestReviewEvent,rsocket/rsocket-java,0.0,2022-03-28T09:09:50Z,"{'action': 'created', 'review': {'id': 922838573, 'node_id': 'PRR_kwDOAk8BS843AWYt', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Looks good. \r\n\r\nHowever, considering the description under #1034:\r\n\r\n> faulty implementation of the block method, which in turn was a near-duplicate of the subscribe method. Mono's implementation of the block methods already delegate to subscribe in a safe way, as it seems, so there seems to be no obvious (documented) reason why the block method needs to be overridden.\r\n\r\nIt would be good as to add something to the Java doc of those `block` method overrides that explains the reason they are there.\r\n\r\n"", 'commit_id': 'd0650b64cfc3f2816c9fdeacd83753048a2516c1', 'submitted_at': '2022-03-28T09:09:49Z', 'state': 'approved', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1044#pullrequestreview-922838573', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044', 'author_association': 'CONTRIBUTOR', '_links': {'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1044#pullrequestreview-922838573'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044', 'id': 889893234, 'node_id': 'PR_kwDOAk8BS841CrFy', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1044', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1044.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1044.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044', 'number': 1044, 'state': 'open', 'locked': False, 'title': 'fixes `block()` in MetadataPushRequesterMono', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'closes #1033. Supersedes #1034  \r\n\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\nSigned-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\n', 'created_at': '2022-03-25T20:45:57Z', 'updated_at': '2022-03-28T09:09:49Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '0e26e1e9c151881a299d3c95c50d3c4e37e311a0', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/d0650b64cfc3f2816c9fdeacd83753048a2516c1', 'head': {'label': 'rsocket:bugfix/1033', 'ref': 'bugfix/1033', 'sha': 'd0650b64cfc3f2816c9fdeacd83753048a2516c1', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-27T11:28:43Z', 'pushed_at': '2022-03-27T20:44:24Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5878, 'stargazers_count': 2136, 'watchers_count': 2136, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2136, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'd8cccbe4e69e5ff358b0f75321fc7589e693dff9', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-27T11:28:43Z', 'pushed_at': '2022-03-27T20:44:24Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5878, 'stargazers_count': 2136, 'watchers_count': 2136, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2136, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1044'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1044/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1044/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/d0650b64cfc3f2816c9fdeacd83753048a2516c1'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20968148238,PushEvent,spring-projects/spring-graphql,0.0,2022-03-28T08:50:56Z,"{'push_id': 9465421050, 'size': 8, 'distinct_size': 8, 'ref': 'refs/heads/main', 'head': 'a5a5594e6453b7cc0bc771cb326430610f1956e5', 'before': 'e71ea056bd835b6692b67f12fdfa130ec9b23a99', 'commits': [{'sha': '1462050005dbc3ebd6d15816b076e320ff6b2b58', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add RSocketGraphQlClient and GraphQlRSocketHandler\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/1462050005dbc3ebd6d15816b076e320ff6b2b58'}, {'sha': '36425afb0e2156591b3e686765b078aba729bc03', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add interception for RSocket handler\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/36425afb0e2156591b3e686765b078aba729bc03'}, {'sha': '6584b883012e61f9b1716f2b3150ccd263620d01', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Shorten names of [Web|RSocket]GraphQlHandlerInterceptor\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/6584b883012e61f9b1716f2b3150ccd263620d01'}, {'sha': 'eb9a369f0034e5d1f0dcf06d3764b182dfdbc0bb', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""Rename ~.web package to ~.server\n\nNow that RSocket is included, it's more obvious it's not just web.\n\nSee gh-339"", 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/eb9a369f0034e5d1f0dcf06d3764b182dfdbc0bb'}, {'sha': '309032866611140f90b75892a254780cdf428018', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Insert WebSocket in the names of GraphQlMessage[Type]\n\nThose are specific to the GraphQL over WebSocket protocol.\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/309032866611140f90b75892a254780cdf428018'}, {'sha': '5b93c1fce7be16a73f63bf151996264e790c9739', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'RSocket support for SubscriptionErrorException\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/5b93c1fce7be16a73f63bf151996264e790c9739'}, {'sha': '681a0dcf4dbb2f063e033779b0b2a8f9499b74b8', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update documentation for RSocket\n\nSee gh-339', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/681a0dcf4dbb2f063e033779b0b2a8f9499b74b8'}, {'sha': 'a5a5594e6453b7cc0bc771cb326430610f1956e5', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Pin samples to 1.0.0-M6', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/a5a5594e6453b7cc0bc771cb326430610f1956e5'}]}",,Java
20944377671,IssueCommentEvent,spring-projects/spring-boot,0.0,2022-03-25T21:12:56Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-boot', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158/events', 'html_url': 'https://github.com/spring-projects/spring-boot/issues/30158', 'id': 1165112676, 'node_id': 'I_kwDOAGAU1s5FcjVk', 'number': 30158, 'title': ""When Actuator's running on top of Spring MVC a WebEndpointResponse<Mono> response is not serialised correctly"", 'user': {'login': 'wilkinsona', 'id': 914682, 'node_id': 'MDQ6VXNlcjkxNDY4Mg==', 'avatar_url': 'https://avatars.githubusercontent.com/u/914682?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wilkinsona', 'html_url': 'https://github.com/wilkinsona', 'followers_url': 'https://api.github.com/users/wilkinsona/followers', 'following_url': 'https://api.github.com/users/wilkinsona/following{/other_user}', 'gists_url': 'https://api.github.com/users/wilkinsona/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wilkinsona/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wilkinsona/subscriptions', 'organizations_url': 'https://api.github.com/users/wilkinsona/orgs', 'repos_url': 'https://api.github.com/users/wilkinsona/repos', 'events_url': 'https://api.github.com/users/wilkinsona/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wilkinsona/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 16916891, 'node_id': 'MDU6TGFiZWwxNjkxNjg5MQ==', 'url': 'https://api.github.com/repos/spring-projects/spring-boot/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/milestones/185', 'html_url': 'https://github.com/spring-projects/spring-boot/milestone/185', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-boot/milestones/185/labels', 'id': 5867751, 'node_id': 'MDk6TWlsZXN0b25lNTg2Nzc1MQ==', 'number': 185, 'title': '2.5.x', 'description': 'Issues that we want to solve in the 2.5.x line.', 'creator': {'login': 'snicoll', 'id': 490484, 'node_id': 'MDQ6VXNlcjQ5MDQ4NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/490484?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/snicoll', 'html_url': 'https://github.com/snicoll', 'followers_url': 'https://api.github.com/users/snicoll/followers', 'following_url': 'https://api.github.com/users/snicoll/following{/other_user}', 'gists_url': 'https://api.github.com/users/snicoll/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/snicoll/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/snicoll/subscriptions', 'organizations_url': 'https://api.github.com/users/snicoll/orgs', 'repos_url': 'https://api.github.com/users/snicoll/repos', 'events_url': 'https://api.github.com/users/snicoll/events{/privacy}', 'received_events_url': 'https://api.github.com/users/snicoll/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 73, 'closed_issues': 0, 'state': 'open', 'created_at': '2020-09-11T14:10:03Z', 'updated_at': '2022-03-25T15:29:11Z', 'due_on': None, 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-10T11:40:00Z', 'updated_at': '2022-03-25T21:12:55Z', 'closed_at': None, 'author_association': 'MEMBER', 'active_lock_reason': None, 'body': 'The Actuator\'s endpoints are registered with Spring MVC through this handler method:\r\n\r\nhttps://github.com/spring-projects/spring-boot/blob/8f898ba74db75679926f249c824d1a8829e6da36/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/web/servlet/AbstractWebMvcEndpointHandlerMapping.java#L419-L422\r\n\r\nReturning `Object` means that the method signature provides minimal type information to MVC about the response. This minimal type information isn\'t a problem when a `Mono` is returned directly as `ResponseBodyEmitterReturnValueHandler` can still identify that a `Mono` is being returned and handle the return value. When the further indirection of returning a `ResponseEntity<Mono>` is introduced, `ResponseBodyEmitterReturnValueHandler` fails to identify that a `Mono` is being returned and does not handle the return value.\r\n\r\nThis behaviour can be illustrated without Actuator with the following handler methods on a `@RestController`:\r\n\r\n```\r\n@GetMapping(""mono"")\r\npublic Mono<String> mono() {\r\n    return Mono.just(""a"");\r\n}\r\n\r\n@GetMapping(""monoAsObject"")\r\npublic Object monoAsObject() {\r\n    return Mono.just(""a"");\r\n}\r\n\r\n@GetMapping(""responseEntity"")\r\npublic ResponseEntity<Mono<String>> responseEntity() {\r\n    return ResponseEntity.ok().body(Mono.just(""a""));\r\n}\r\n\r\n@GetMapping(""responseEntityAsObject"")\r\npublic Object responseEntityAsObject() {\r\n    return ResponseEntity.ok().body(Mono.just(""a""));\r\n}\r\n```\r\n\r\nThe first three are fine, each producing a response similar to the following:\r\n\r\n```       \r\nHTTP/1.1 200 \r\nConnection: keep-alive\r\nContent-Length: 1\r\nContent-Type: text/plain;charset=UTF-8\r\nDate: Thu, 10 Mar 2022 11:13:55 GMT\r\nKeep-Alive: timeout=60\r\n\r\na\r\n```\r\n\r\nThe fourth doesn\'t work. No async handling is performed and instead the `Mono` itself is serialised to JSON:\r\n\r\n```\r\n$ http :8080/responseEntityAsObject\r\nHTTP/1.1 200 \r\nConnection: keep-alive\r\nContent-Type: application/json\r\nDate: Thu, 10 Mar 2022 11:14:08 GMT\r\nKeep-Alive: timeout=60\r\nTransfer-Encoding: chunked\r\n\r\n{\r\n    ""scanAvailable"": true\r\n}\r\n```\r\n\r\nThe problem doesn\'t not occur with WebFlux, either with Actuator or directly with a `@RestController` with the four handler methods above. As such, this may be a Spring MVC bug or limitation.\r\n\r\nWhen `ResponseBodyEmitterReturnValueHandler.supportsReturnType(MethodParameter)` is called, a `HandlerMethod$ReturnValueMethodParameter` is passed in. Its `returnValue` contains the `ResponseEntity` with the `Mono` `body`. This means that, in this specific case at least, there is sufficient information available to determine that it\'s a `Mono` response but that information is not being used at the moment.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/comments/1079438091', 'html_url': 'https://github.com/spring-projects/spring-boot/issues/30158#issuecomment-1079438091', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/30158', 'id': 1079438091, 'node_id': 'IC_kwDOAGAU1s5AVusL', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-25T21:12:55Z', 'updated_at': '2022-03-25T21:12:55Z', 'author_association': 'CONTRIBUTOR', 'body': ""The short answer, more of a limitation. We aim to support reactive types in Spring MVC but not all possible combinations. \r\n\r\nIn particular for `ResponseEntity` we need to decide between two handlers, HttpEntityMethodProcessor which handles regular ResponseEntity and ResponseBodyEmitterReturnValueHandler which handles various streaming and reactive type scenarios, also in combination with ResponseEntity. The challenge is that in `supportsReturnType` we can only use the `MethodParameter` information which in this case is very general and while we have something in place to check the `Class` from the actual value, we can't get any generic type information, which prevents us from recognizing it as a reactive body.\r\n\r\nIt's worth pointing out that `ResponseEntity<Mono<?>>` is somewhat unusual in the sense that usually you want to resolve the body and then decide on the overall response, otherwise the response is committed and you no longer can change the status in case the `Mono` completes with an error. `Mono<ResponseEntity<?>>` makes more sense and gives the same result with more flexibility.\r\n\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-boot/issues/comments/1079438091/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20944190327,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-25T20:57:39Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28199', 'id': 1174209361, 'node_id': 'I_kwDOABGHUc5F_QNR', 'number': 28199, 'title': 'Mono Object wrapped by ResponseEntity cannot be passed correctly by mvc framework', 'user': {'login': 'YuanHao97', 'id': 35182447, 'node_id': 'MDQ6VXNlcjM1MTgyNDQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/35182447?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/YuanHao97', 'html_url': 'https://github.com/YuanHao97', 'followers_url': 'https://api.github.com/users/YuanHao97/followers', 'following_url': 'https://api.github.com/users/YuanHao97/following{/other_user}', 'gists_url': 'https://api.github.com/users/YuanHao97/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/YuanHao97/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/YuanHao97/subscriptions', 'organizations_url': 'https://api.github.com/users/YuanHao97/orgs', 'repos_url': 'https://api.github.com/users/YuanHao97/repos', 'events_url': 'https://api.github.com/users/YuanHao97/events{/privacy}', 'received_events_url': 'https://api.github.com/users/YuanHao97/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-19T08:26:49Z', 'updated_at': '2022-03-25T20:57:39Z', 'closed_at': '2022-03-25T20:57:39Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""<!--\r\n!!! For Security Vulnerabilities, please go to https://spring.io/security-policy !!!\r\n-->\r\n**Affects:** 5.3.x\r\n\r\n---\r\n<!--\r\nThanks for taking the time to create an issue. Please read the following:\r\n\r\n- Questions should be asked on Stack Overflow.\r\n- For bugs, specify affected versions and explain what you are trying to do.\r\n- For enhancements, provide context and describe the problem.\r\n\r\nIssue or Pull Request? Create only one, not both. GitHub treats them as the same.\r\nIf unsure, start with an issue, and if you submit a pull request later, the\r\nissue will be closed as superseded.\r\n-->\r\nPlease refer to this [disscusion ](https://github.com/spring-projects/spring-boot/issues/30158)for more detailed information.\r\nIn function `ResponseBodyEmitterReturnValueHandler.supportsReturnType`, it failed to recognize the correct type when a controller returns an object having a Mono object wrapped by ResponseEntity. However, the parameter `HandlerMethod.ReturnValueMethodParameter` actually has an attribute `returnValue` containing enough information.\r\n\r\nI wonder if there's a way taking return value into consideration. I tried to fetch the actual return value at runtime, but the subclass `HandlerMethod.ReturnValueMethodParameter` is protected, so the type cannot be converted from `MethodParameter` to `HandlerMethod.ReturnValueMethodParameter`.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/timeline', 'performed_via_github_app': None}}",closed,Java
20944190256,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-25T20:57:39Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28199', 'id': 1174209361, 'node_id': 'I_kwDOABGHUc5F_QNR', 'number': 28199, 'title': 'Mono Object wrapped by ResponseEntity cannot be passed correctly by mvc framework', 'user': {'login': 'YuanHao97', 'id': 35182447, 'node_id': 'MDQ6VXNlcjM1MTgyNDQ3', 'avatar_url': 'https://avatars.githubusercontent.com/u/35182447?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/YuanHao97', 'html_url': 'https://github.com/YuanHao97', 'followers_url': 'https://api.github.com/users/YuanHao97/followers', 'following_url': 'https://api.github.com/users/YuanHao97/following{/other_user}', 'gists_url': 'https://api.github.com/users/YuanHao97/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/YuanHao97/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/YuanHao97/subscriptions', 'organizations_url': 'https://api.github.com/users/YuanHao97/orgs', 'repos_url': 'https://api.github.com/users/YuanHao97/repos', 'events_url': 'https://api.github.com/users/YuanHao97/events{/privacy}', 'received_events_url': 'https://api.github.com/users/YuanHao97/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-19T08:26:49Z', 'updated_at': '2022-03-25T20:57:39Z', 'closed_at': '2022-03-25T20:57:39Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""<!--\r\n!!! For Security Vulnerabilities, please go to https://spring.io/security-policy !!!\r\n-->\r\n**Affects:** 5.3.x\r\n\r\n---\r\n<!--\r\nThanks for taking the time to create an issue. Please read the following:\r\n\r\n- Questions should be asked on Stack Overflow.\r\n- For bugs, specify affected versions and explain what you are trying to do.\r\n- For enhancements, provide context and describe the problem.\r\n\r\nIssue or Pull Request? Create only one, not both. GitHub treats them as the same.\r\nIf unsure, start with an issue, and if you submit a pull request later, the\r\nissue will be closed as superseded.\r\n-->\r\nPlease refer to this [disscusion ](https://github.com/spring-projects/spring-boot/issues/30158)for more detailed information.\r\nIn function `ResponseBodyEmitterReturnValueHandler.supportsReturnType`, it failed to recognize the correct type when a controller returns an object having a Mono object wrapped by ResponseEntity. However, the parameter `HandlerMethod.ReturnValueMethodParameter` actually has an attribute `returnValue` containing enough information.\r\n\r\nI wonder if there's a way taking return value into consideration. I tried to fetch the actual return value at runtime, but the subclass `HandlerMethod.ReturnValueMethodParameter` is protected, so the type cannot be converted from `MethodParameter` to `HandlerMethod.ReturnValueMethodParameter`.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1079428690', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28199#issuecomment-1079428690', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28199', 'id': 1079428690, 'node_id': 'IC_kwDOABGHUc5AVsZS', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-25T20:57:39Z', 'updated_at': '2022-03-25T20:57:39Z', 'author_association': 'CONTRIBUTOR', 'body': ""Please, don't create additional issues for existing issues."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1079428690/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20941090997,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-25T17:31:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27052', 'id': 918614925, 'node_id': 'MDU6SXNzdWU5MTg2MTQ5MjU=', 'number': 27052, 'title': 'Support for problem details based on RFC 7807 ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/287', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287/labels', 'id': 7605225, 'node_id': 'MI_kwDOABGHUc4AdAvp', 'number': 287, 'title': '6.0.0-M4', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 33, 'closed_issues': 9, 'state': 'open', 'created_at': '2022-01-24T17:15:01Z', 'updated_at': '2022-03-24T15:35:59Z', 'due_on': '2022-05-11T07:00:00Z', 'closed_at': None}, 'comments': 2, 'created_at': '2021-06-11T11:16:51Z', 'updated_at': '2022-03-25T17:31:30Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'This has been requested a number of times but so far has been deferred to Spring Boot which supports error response details. The corresponding https://github.com/spring-projects/spring-boot/issues/19525 issue in Spring Boot has gathered quite a bit of feedback and comments.\r\n\r\nFor Spring Framework 6 we have an opportunity to revisit this topic and more generally, web error handling. Given a standard such as RFC 7807 for the format of error responses, the Spring Framework could provide more infrastructure that Boot can build on.\r\n\r\n- [x] #28187\r\n- [ ] #28189\r\n- [ ] #28190 \r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052/reactions', 'total_count': 25, '+1': 25, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1079248940', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27052#issuecomment-1079248940', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27052', 'id': 1079248940, 'node_id': 'IC_kwDOABGHUc5AVAgs', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-25T17:31:30Z', 'updated_at': '2022-03-25T17:31:30Z', 'author_association': 'CONTRIBUTOR', 'body': '@vy thanks for the review and comments. \r\n\r\nFor `ProblemDetail` extensions, my thought was that sub-classes will use Jackson\'s `@JsonTypeInfo` (or similar) like is done in Zalando for example, but I\'ve yet to confirm this end to end, which will be the goal for #28190. I suspect we might need an interface for a ""mix-in"" but I\'m not sure until I try. I\'m also thinking on the client side there could be an option to specify the class to deserialize to.\r\n\r\nFor `Map<String, Object> attributes`, the it adds a level of nesting with an ""attributes"" key, which for once reveals a framework detail, and generally leads to questions about how customize this or eliminate it. An applications might then try to extend in order to add Jackson\'s `@JsonUnwrapped` which brings us back to extending.\r\n\r\nFor mutability, indeed immutable would be my preferred choice, but I\'m just thinking though, (de-)serialization friendliness aside, that the case here is rather specific. We\'re talking about an exception type, or a type carried within an exception that short-circuits regular handling and follows a straight line towards being serialized to the response body. Moreover, there are already reasons to allow mutability, such as when a `ResponseErrorException` is extended, or handled in places like `ResponseEntityExceptionHandler`.\r\n\r\n\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1079248940/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20939401067,PushEvent,rstoyanchev/spring-framework,0.0,2022-03-25T15:53:17Z,"{'push_id': 9449376605, 'size': 144, 'distinct_size': 144, 'ref': 'refs/heads/http-contract-client', 'head': '93ba51ddc1dddd23175584323c49222eda310c26', 'before': 'fa8892669604e13942a3f0911fc9aeb9db772a15', 'commits': [{'sha': '9340e9b716e336f131b42d3c0e03883ae7d22fe8', 'author': {'email': 'bclozel@vmware.com', 'name': 'Brian Clozel'}, 'message': 'Upgrade to Kotlin 1.6.20-RC', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/9340e9b716e336f131b42d3c0e03883ae7d22fe8'}, {'sha': '6f41180cc5e2f96b11950d483a41454d384defc9', 'author': {'email': 'bclozel@vmware.com', 'name': 'Brian Clozel'}, 'message': 'Align AsyncRestTemplate error logging with RestTemplate\n\nPrior to this commit, `AsyncRestTemplate` would log errors (including\nsimple 404s) with WARN level. Such errors are quite common and should\nnot clutter logs.\n\nThis commit aligns the logging strategy with RestTemplate, using the\nDEBUG level for such cases.\n\nFixes gh-28049', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/6f41180cc5e2f96b11950d483a41454d384defc9'}, {'sha': 'c9795597c8f6cc662976282bf3bdc8bfcde64579', 'author': {'email': 'bclozel@vmware.com', 'name': 'Brian Clozel'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/c9795597c8f6cc662976282bf3bdc8bfcde64579'}, {'sha': 'beab8ab4e752fa7da27a1df3904fe4f628236e06', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Test claims regarding SpEL support for T(Character)\n\nSee gh-28112', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/beab8ab4e752fa7da27a1df3904fe4f628236e06'}, {'sha': '84de100fc64cbb96719d7ac18e977e7aa668074a', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Polishing', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/84de100fc64cbb96719d7ac18e977e7aa668074a'}, {'sha': '27ee9cdcde26e0e2a024c4b48c833ff1f36ed4d5', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/27ee9cdcde26e0e2a024c4b48c833ff1f36ed4d5'}, {'sha': 'a7d5fbfbea1b1c4948a8f8cc5541f90bd2a1d972', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Fix log messages for init/destroy method registration', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/a7d5fbfbea1b1c4948a8f8cc5541f90bd2a1d972'}, {'sha': 'f96872404d9ab495a2821955b649fec9a28f92ed', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Ensure private init/destroy method is invoked only once\n\nCloses gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/f96872404d9ab495a2821955b649fec9a28f92ed'}, {'sha': 'af14eea1ef76576acd07ba90cd0a656bd6b31969', 'author': {'email': 'vikeytk@gmail.com', 'name': 'Vikey Chen'}, 'message': 'Introduce tests for gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/af14eea1ef76576acd07ba90cd0a656bd6b31969'}, {'sha': 'a524857bd548dbb3245771a374e9ef609dfae7c0', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Fix init/destroy lifecycle method tests\n\nSee gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/a524857bd548dbb3245771a374e9ef609dfae7c0'}, {'sha': 'dcdea986f6316344705aa0b70d79a4c60ab96121', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Polish init/destroy lifecycle method tests\n\nSee gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/dcdea986f6316344705aa0b70d79a4c60ab96121'}, {'sha': 'd67034f99b5dad82e2daecc1e31ce99b1c551593', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Document semantics for externally managed init/destroy methods\n\nThis commit introduces Javadoc to explain the difference between\ninit/destroy method names when such methods are private, namely that a\nprivate method is registered via its qualified method name; whereas, a\nnon-private method is registered via its simple name.\n\nSee gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/d67034f99b5dad82e2daecc1e31ce99b1c551593'}, {'sha': '466dd825ac5921b40f83de5eaf0b5d465a4c9bd6', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'\n\n# Conflicts:\n#\tspring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java\n#\tspring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java\n#\tspring-beans/src/main/java/org/springframework/beans/factory/support/DisposableBeanAdapter.java\n#\tspring-context/src/test/java/org/springframework/context/annotation/Spr3775InitDestroyLifecycleTests.java"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/466dd825ac5921b40f83de5eaf0b5d465a4c9bd6'}, {'sha': '66e9095ee9b9293a1879f47326ca5c666f7414dc', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Fix links and tests broken during merge\n\nSee gh-28083', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/66e9095ee9b9293a1879f47326ca5c666f7414dc'}, {'sha': '67b91b239091afe169045cf0dafa800aaa5884aa', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Polish RollbackRuleTests\n\nSee gh-28098', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/67b91b239091afe169045cf0dafa800aaa5884aa'}, {'sha': '14ae522172be4f7323cbdf7a6c406098adca7415', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/14ae522172be4f7323cbdf7a6c406098adca7415'}, {'sha': '25aa295c2c78e5d4047bf2f4fa1229c2ad0862d8', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Rename test class to adhere to conventions', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/25aa295c2c78e5d4047bf2f4fa1229c2ad0862d8'}, {'sha': '340f41af6d52b8a780ffc813727333ad10247382', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Suppress warnings in Gradle build', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/340f41af6d52b8a780ffc813727333ad10247382'}, {'sha': '68757073b0cf69c41d5c17e8abdffbc388cdbabe', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': ""Merge branch '5.3.x'"", 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/68757073b0cf69c41d5c17e8abdffbc388cdbabe'}, {'sha': 'b3e5f86277e73c91990a85d23779509225085d63', 'author': {'email': 'sbrannen@vmware.com', 'name': 'Sam Brannen'}, 'message': 'Polish rollback rule support', 'distinct': True, 'url': 'https://api.github.com/repos/rstoyanchev/spring-framework/commits/b3e5f86277e73c91990a85d23779509225085d63'}]}",,Java
20914391630,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-24T12:10:47Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/259', 'id': 1104739456, 'node_id': 'I_kwDOEMJUCs5B2PyA', 'number': 259, 'title': 'Support custom argument resolvers for @SchemaMapping methods', 'user': {'login': 'marceloverdijk', 'id': 197004, 'node_id': 'MDQ6VXNlcjE5NzAwNA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/197004?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/marceloverdijk', 'html_url': 'https://github.com/marceloverdijk', 'followers_url': 'https://api.github.com/users/marceloverdijk/followers', 'following_url': 'https://api.github.com/users/marceloverdijk/following{/other_user}', 'gists_url': 'https://api.github.com/users/marceloverdijk/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/marceloverdijk/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/marceloverdijk/subscriptions', 'organizations_url': 'https://api.github.com/users/marceloverdijk/orgs', 'repos_url': 'https://api.github.com/users/marceloverdijk/repos', 'events_url': 'https://api.github.com/users/marceloverdijk/events{/privacy}', 'received_events_url': 'https://api.github.com/users/marceloverdijk/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/3', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3/labels', 'id': 6777656, 'node_id': 'MDk6TWlsZXN0b25lNjc3NzY1Ng==', 'number': 3, 'title': '1.0 Backlog', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-05-20T14:45:21Z', 'updated_at': '2022-03-24T09:25:16Z', 'due_on': None, 'closed_at': None}, 'comments': 1, 'created_at': '2022-01-15T14:43:32Z', 'updated_at': '2022-03-24T12:10:47Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'As discussed in https://github.com/spring-projects/spring-graphql/issues/250 this is feature request for support of custom argument resolvers in GraphQL controllers.\r\n\r\nE.g. to support\r\n\r\n```\r\n@QueryMapping\r\npublic Page<Season> seasons(Pageable pageable) {\r\n    int first = pageable.getFirst();\r\n    int offset = pageable.getOffset();\r\n    ..\r\n}\r\n```\r\n\r\nThe plain example as above could already be implemented using a `@ProjectedPayload` \r\n\r\n```\r\n@ProjectedPayload\r\npublic interface Pageable {\r\n\r\n    int getFirst();\r\n    int getOffset();\r\n}\r\n```\r\n\r\n(Note: using the `@Argument` annotation for above case does not work me, see https://github.com/spring-projects/spring-graphql/issues/258)\r\n\r\nBut supporting custom argument resolvers could offer more flexibility I was looking for like the ability to use a custom `@interface` to provide defaults , e.g.\r\n\r\n```\r\n@QueryMapping\r\npublic Page<Season> seasons(@PageableDefault(first=10, offset=0) Pageable pageable) {\r\n    ..\r\n}\r\n\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/reactions', 'total_count': 1, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 1, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077560729', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/259#issuecomment-1077560729', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/259', 'id': 1077560729, 'node_id': 'IC_kwDOEMJUCs5AOkWZ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-24T12:10:47Z', 'updated_at': '2022-03-24T12:10:47Z', 'author_association': 'CONTRIBUTOR', 'body': ""@marceloverdijk I'm wondering if the changes for #258 addressed the case here with `Pageable` or do you have another use case in mind? \r\n\r\nGenerally, both `@SchemaMapping` and `@BatchMapping` methods could have custom resolvers but they resolve from different contexts, `DataFetchingEnvironment` vs `BatchLoaderEnvironment`, and can't share a contracts. I'm also not certain what this would be used for, considering that we expose more or less everything there is.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077560729/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20914066989,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-24T11:53:32Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232', 'id': 1086437038, 'node_id': 'I_kwDOEMJUCs5Awbau', 'number': 232, 'title': '@BatchMapping support @Argument', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 8, 'created_at': '2021-12-22T04:24:26Z', 'updated_at': '2022-03-24T11:53:32Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""I think that both source and argument are necessary. It will great that `@BatchingMapping` support `@Argument`.\r\n\r\nSchema like blow. 'like' means whether the visitor like this book or author, and `Book.author` bind DataLoader.\r\n```graphql\r\n\r\ntype Query{\r\n      books(visitorId:Int, bookIds:[Int]):[Book]\r\n}\r\n\r\ntype Book{\r\n    id: Int\r\n    like: Boolean\r\n    authorId: Int\r\n    author(visitorId:Int): Author\r\n}\r\n\r\ntype Author{\r\n    id: Int\r\n    name: String\r\n    like: Boolean\r\n}\r\n```\r\n\r\nquery like blow:\r\n```graphql\r\nquery ($visitorId: Int){\r\n   books(visitorId:$visitorId, bookIds:[1,2,3]){\r\n      authorId\r\n      # need visitorId\r\n       author(visitorId:$visitorId){\r\n             id\r\n       }\r\n  }\r\n}\r\n```\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077546089', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232#issuecomment-1077546089', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'id': 1077546089, 'node_id': 'IC_kwDOEMJUCs5AOgxp', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-24T11:53:32Z', 'updated_at': '2022-03-24T11:53:32Z', 'author_association': 'CONTRIBUTOR', 'body': ""I think you're missing the main points.\r\n\r\nOne, `@BatchMapping` is a convenience that aims to hide the details of using a `DataLoader`. You point to customization of the caching key. That is a step in the opposite direction towards a deeper customization and you shouldn't be using the `@BatchMapping` shortcut for that.\r\n\r\nTwo, I think the caching problem is deeper than you suspect. To work generally, the caching key would have to take into account the arguments used and the selection set. Imagine entities loaded for different parts of the response with different arguments and selection sets. There is a [library called GOM](https://github.com/qudini/gom) that solves this problem in a general way but this is not something we are looking to do at this time.\r\n\r\nAs for this not being available in GraphQL Java, you can see this issue for example https://github.com/graphql-java/java-dataloader/issues/26.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077546089/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20913688229,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-24T11:32:47Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/339', 'id': 1179386374, 'node_id': 'I_kwDOEMJUCs5GTAIG', 'number': 339, 'title': 'Support RSocket as a transport', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T11:32:47Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-24T11:32:47Z', 'updated_at': '2022-03-24T11:32:47Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The RSocket protocol has all the semantics required to carry GraphQL requests. The `request-response` interaction maps to queries and mutations while `request-stream` maps to subscriptions. RSocket supports Reactive Streams messages to complete a stream from the server side or to cancel it from the client side. In short, implementing GraphQL over RSocket does not require anything special other than agreeing on the format for serialized requests and response, but we can follow the HTTP spec for that, i.e. `""application/graphql+json""`.\r\n\r\nOn the implementation, this should be very straight-forward, given the transport abstractions we have in place for client and server. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/339/timeline', 'performed_via_github_app': None}}",opened,Java
20911252669,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-24T09:31:21Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/108', 'id': 965042834, 'node_id': 'MDU6SXNzdWU5NjUwNDI4MzQ=', 'number': 108, 'title': 'Support for application/graphql content type', 'user': {'login': 'vangapr', 'id': 11789427, 'node_id': 'MDQ6VXNlcjExNzg5NDI3', 'avatar_url': 'https://avatars.githubusercontent.com/u/11789427?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/vangapr', 'html_url': 'https://github.com/vangapr', 'followers_url': 'https://api.github.com/users/vangapr/followers', 'following_url': 'https://api.github.com/users/vangapr/following{/other_user}', 'gists_url': 'https://api.github.com/users/vangapr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/vangapr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/vangapr/subscriptions', 'organizations_url': 'https://api.github.com/users/vangapr/orgs', 'repos_url': 'https://api.github.com/users/vangapr/repos', 'events_url': 'https://api.github.com/users/vangapr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/vangapr/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T09:25:16Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 2, 'created_at': '2021-08-10T14:27:22Z', 'updated_at': '2022-03-24T09:31:21Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Current spring boot graphql does not seem to support application/graphql content type with query text as body as specified  here ( https://graphql.org/learn/serving-over-http ).\r\n\r\nquote from the above specification:\r\n\r\n>In addition to the above, we recommend supporting two additional cases:\r\n>\r\n> * If the ""query"" query string parameter is present (as in the GET example above), it should be parsed and handled in the same way as the HTTP GET case.\r\n> * If the ""application/graphql"" Content-Type header is present, treat the HTTP POST body contents as the GraphQL query string.\r\n\r\nFrom GraphQlWebFluxAutoConfiguration.java:\r\n\r\n```\r\nRouterFunctions.Builder builder = RouterFunctions.route()\r\n\t\t\t\t.GET(graphQLPath, request ->\r\n\t\t\t\t\t\tServerResponse.status(HttpStatus.METHOD_NOT_ALLOWED)\r\n\t\t\t\t\t\t\t\t.headers(headers -> headers.setAllow(Collections.singleton(HttpMethod.POST)))\r\n\t\t\t\t\t\t\t\t.build())\r\n\t\t\t\t.POST(graphQLPath,\r\n\t\t\t\t\t\taccept(MediaType.APPLICATION_JSON).and(contentType(MediaType.APPLICATION_JSON)),\r\n\t\t\t\t\t\thandler::handleRequest);\r\n```\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077419250', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/108#issuecomment-1077419250', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/108', 'id': 1077419250, 'node_id': 'IC_kwDOEMJUCs5AOBzy', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-24T09:31:21Z', 'updated_at': '2022-03-24T09:31:21Z', 'author_association': 'CONTRIBUTOR', 'body': ""After discussing this further, the spec draft [now requires](https://github.com/graphql/graphql-over-http/blob/main/spec/GraphQLOverHTTP.md#content-types) this and keeps application/json as a fallback for compatibility. We should make sure the server supports both and uses the one that's requested, while the client will use `application/graph+json` by default."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077419250/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20910595806,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-24T08:57:18Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/163', 'id': 1021705083, 'node_id': 'I_kwDOEMJUCs485ft7', 'number': 163, 'title': 'GraphQlTester support for WebSocket', 'user': {'login': 'hantsy', 'id': 854520, 'node_id': 'MDQ6VXNlcjg1NDUyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/854520?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hantsy', 'html_url': 'https://github.com/hantsy', 'followers_url': 'https://api.github.com/users/hantsy/followers', 'following_url': 'https://api.github.com/users/hantsy/following{/other_user}', 'gists_url': 'https://api.github.com/users/hantsy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hantsy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hantsy/subscriptions', 'organizations_url': 'https://api.github.com/users/hantsy/orgs', 'repos_url': 'https://api.github.com/users/hantsy/repos', 'events_url': 'https://api.github.com/users/hantsy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hantsy/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}, {'id': 3109769765, 'node_id': 'MDU6TGFiZWwzMTA5NzY5NzY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/in:%20test', 'name': 'in: test', 'color': 'e8f9de', 'default': False, 'description': 'Issues related to the test module'}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/3', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3/labels', 'id': 6777656, 'node_id': 'MDk6TWlsZXN0b25lNjc3NzY1Ng==', 'number': 3, 'title': '1.0 Backlog', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 8, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-05-20T14:45:21Z', 'updated_at': '2022-03-24T08:57:18Z', 'due_on': None, 'closed_at': None}, 'comments': 7, 'created_at': '2021-10-09T13:07:55Z', 'updated_at': '2022-03-24T08:57:18Z', 'closed_at': '2022-03-24T08:57:18Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I enabled the WebSocket transport in a WebFlux Spring Graphql example, [the complete source codes](https://github.com/hantsy/spring-graphql-sample/tree/master/spring-graphql-webflux) is here.\r\n\r\n```properties\r\nspring.graphql.websocket.path=/ws/graphql\r\n```\r\n\r\nI have written a test to verify the subscription like this.\r\n\r\n```java\r\n@SpringBootTest()\r\n@Slf4j\r\n@AutoConfigureGraphQlTester\r\n@AutoConfigureWebTestClient\r\nclass SubscriptionTests {\r\n\r\n    @Autowired\r\n    WebGraphQlTester graphQlTester;\r\n\r\n    @MockBean\r\n    PostService postService;\r\n\r\n    @MockBean\r\n    AuthorService authorService;\r\n\r\n    @Autowired\r\n    PostsDataFetcher dataFetcher;\r\n\r\n    @Test\r\n    void createCommentAndSubscription() {\r\n        when(postService.addComment(any(CommentInput.class))).thenReturn(Mono.just(UUID.randomUUID()));\r\n        when(postService.getCommentById(anyString())).thenReturn(Mono.just(\r\n                Comment.builder().id(UUID.randomUUID().toString())\r\n                        .content(""test comment"")\r\n                        .postId(UUID.randomUUID().toString())\r\n                        .build()\r\n        ));\r\n\r\n        String query = ""subscription onCommentAdded { commentAdded { id postId content } }"";\r\n        var verifier = graphQlTester.query(query)\r\n                .executeSubscription()\r\n                .toFlux(""commentAdded.content"", String.class)\r\n                .as(StepVerifier::create)\r\n                .expectNext(""test comment"")\r\n                .thenCancel()\r\n                .verifyLater();\r\n\r\n        // add comment\r\n        dataFetcher.addComment(\r\n                        CommentInput.builder()\r\n                                .postId(UUID.randomUUID().toString())\r\n                                .content(""test content"")\r\n                                .build()\r\n                )\r\n                .as(StepVerifier::create)\r\n                .consumeNextWith(comment -> assertThat(comment.getContent()).isEqualTo(""test comment""))\r\n                .verifyComplete();\r\n\r\n        // verify the subscription now.\r\n        verifier.verify();\r\n\r\n        // verify the invocation of the mocks.\r\n        verify(postService, times(1)).addComment(any(CommentInput.class));\r\n        verify(postService, times(1)).getCommentById(anyString());\r\n        verifyNoMoreInteractions(postService);\r\n    }\r\n}\r\n```\r\n\r\nI got an 404 error , /graphql url not found. **The test tried to connect to HTTP not Web Socket endpoint**.\r\n\r\nIn the standalone console output, found the following info:\r\n\r\n```bash \r\n2021-10-09 20:57:13.025  INFO 6364 --- [    Test worker] o.s.g.b.GraphQlWebFluxAutoConfiguration  : GraphQL endpoint HTTP POST /graphql\r\n2021-10-09 20:57:13.061 DEBUG 6364 --- [    Test worker] o.s.w.r.f.s.s.RouterFunctionMapping      : 1 RouterFunction(s) in \'routerFunctionMapping\'\r\n2021-10-09 20:57:13.101 DEBUG 6364 --- [    Test worker] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in \'resourceHandlerMapping\'\r\n2021-10-09 20:57:13.162  INFO 6364 --- [    Test worker] o.s.g.b.GraphQlWebFluxAutoConfiguration  : GraphQL endpoint WebSocket /ws/graphql\r\n2021-10-09 20:57:13.163 DEBUG 6364 --- [    Test worker] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/ws/graphql] in \'graphQlWebSocketEndpoint\'\r\n2021-10-09 20:57:13.219 DEBUG 6364 --- [    Test worker] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: none\r\n2021-10-09 20:57:13.313 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.727 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.751 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.841  INFO 6364 --- [    Test worker] com.example.demo.SubscriptionTests       : Started SubscriptionTests in 6.257 seconds (JVM running for 8.562)\r\n2021-10-09 20:57:13.845  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : start data initialization...\r\n2021-10-09 20:57:14.622  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : deleted rows: authors: 1, comments: 18, posts: 5\r\n2021-10-09 20:57:14.713  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : done data initialization...\r\n2021-10-09 20:57:14.710  INFO 6364 --- [actor-tcp-nio-1] com.example.demo.DataInitializer         : author: AuthorEntity[id=72e03543-c53a-47b0-8e65-c0e82626c468, name=user, email=user@example.com, createdAt=2021-10-09T20:57:14.629179]\r\n2021-10-09 20:57:14.944 DEBUG 6364 --- [    Test worker] o.s.w.r.f.client.ExchangeFunctions       : [2954c429] HTTP POST /graphql\r\n2021-10-09 20:57:14.979 DEBUG 6364 --- [     parallel-2] o.s.http.codec.json.Jackson2JsonEncoder  : [2954c429] Encoding [{query=subscription onCommentAdded { commentAdded { id postId content } }}]\r\n2021-10-09 20:57:15.012 DEBUG 6364 --- [     parallel-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [40a06180] HTTP POST ""/graphql""\r\n2021-10-09 20:57:15.032 DEBUG 6364 --- [     parallel-2] o.s.w.r.handler.SimpleUrlHandlerMapping  : [40a06180] Mapped to ResourceWebHandler [""classpath:/META-INF/resources/"", ""classpath:/resources/"", ""classpath:/static/"", ""classpath:/public/""]\r\n2021-10-09 20:57:15.037 DEBUG 6364 --- [     parallel-2] o.s.w.r.resource.ResourceWebHandler      : [40a06180] Resource not found\r\n2021-10-09 20:57:15.052 DEBUG 6364 --- [     parallel-2] org.springframework.web.HttpLogging      : [40a06180] Resolved [ResponseStatusException: 404 NOT_FOUND] for HTTP POST /graphql\r\n2021-10-09 20:57:15.067 DEBUG 6364 --- [     parallel-2] o.s.http.codec.json.Jackson2JsonEncoder  : [40a06180] Encoding [{timestamp=Sat Oct 09 20:57:15 CST 2021, path=/graphql, status=404, error=Not Found, message=null, r (truncated)...]\r\n2021-10-09 20:57:15.102 DEBUG 6364 --- [     parallel-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [40a06180] Completed 404 NOT_FOUND\r\n2021-10-09 20:57:15.108 DEBUG 6364 --- [     parallel-2] o.s.w.r.f.client.ExchangeFunctions       : [2954c429] [44f83767] Response 404 NOT_FOUND\r\n2021-10-09 20:57:15.123 ERROR 6364 --- [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:\r\n\r\n> POST /graphql\r\n> WebTestClient-Request-Id: [1]\r\n> Content-Type: [application/json]\r\n> Accept: [text/event-stream]\r\n> Content-Length: [78]\r\n\r\n{""query"":""subscription onCommentAdded { commentAdded { id postId content } }""}\r\n\r\n< 404 NOT_FOUND Not Found\r\n< Content-Type: [application/json]\r\n< Content-Length: [134]\r\n\r\n{""timestamp"":""2021-10-09T12:57:15.048+00:00"",""path"":""/graphql"",""status"":404,""error"":""Not Found"",""message"":null,""requestId"":""40a06180""}\r\n```\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/timeline', 'performed_via_github_app': None}}",closed,Java
20910595717,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-24T08:57:18Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/163', 'id': 1021705083, 'node_id': 'I_kwDOEMJUCs485ft7', 'number': 163, 'title': 'GraphQlTester support for WebSocket', 'user': {'login': 'hantsy', 'id': 854520, 'node_id': 'MDQ6VXNlcjg1NDUyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/854520?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hantsy', 'html_url': 'https://github.com/hantsy', 'followers_url': 'https://api.github.com/users/hantsy/followers', 'following_url': 'https://api.github.com/users/hantsy/following{/other_user}', 'gists_url': 'https://api.github.com/users/hantsy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hantsy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hantsy/subscriptions', 'organizations_url': 'https://api.github.com/users/hantsy/orgs', 'repos_url': 'https://api.github.com/users/hantsy/repos', 'events_url': 'https://api.github.com/users/hantsy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hantsy/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}, {'id': 3109769765, 'node_id': 'MDU6TGFiZWwzMTA5NzY5NzY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/in:%20test', 'name': 'in: test', 'color': 'e8f9de', 'default': False, 'description': 'Issues related to the test module'}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/3', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/3/labels', 'id': 6777656, 'node_id': 'MDk6TWlsZXN0b25lNjc3NzY1Ng==', 'number': 3, 'title': '1.0 Backlog', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 8, 'closed_issues': 1, 'state': 'open', 'created_at': '2021-05-20T14:45:21Z', 'updated_at': '2022-03-24T08:57:18Z', 'due_on': None, 'closed_at': None}, 'comments': 7, 'created_at': '2021-10-09T13:07:55Z', 'updated_at': '2022-03-24T08:57:18Z', 'closed_at': '2022-03-24T08:57:18Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'I enabled the WebSocket transport in a WebFlux Spring Graphql example, [the complete source codes](https://github.com/hantsy/spring-graphql-sample/tree/master/spring-graphql-webflux) is here.\r\n\r\n```properties\r\nspring.graphql.websocket.path=/ws/graphql\r\n```\r\n\r\nI have written a test to verify the subscription like this.\r\n\r\n```java\r\n@SpringBootTest()\r\n@Slf4j\r\n@AutoConfigureGraphQlTester\r\n@AutoConfigureWebTestClient\r\nclass SubscriptionTests {\r\n\r\n    @Autowired\r\n    WebGraphQlTester graphQlTester;\r\n\r\n    @MockBean\r\n    PostService postService;\r\n\r\n    @MockBean\r\n    AuthorService authorService;\r\n\r\n    @Autowired\r\n    PostsDataFetcher dataFetcher;\r\n\r\n    @Test\r\n    void createCommentAndSubscription() {\r\n        when(postService.addComment(any(CommentInput.class))).thenReturn(Mono.just(UUID.randomUUID()));\r\n        when(postService.getCommentById(anyString())).thenReturn(Mono.just(\r\n                Comment.builder().id(UUID.randomUUID().toString())\r\n                        .content(""test comment"")\r\n                        .postId(UUID.randomUUID().toString())\r\n                        .build()\r\n        ));\r\n\r\n        String query = ""subscription onCommentAdded { commentAdded { id postId content } }"";\r\n        var verifier = graphQlTester.query(query)\r\n                .executeSubscription()\r\n                .toFlux(""commentAdded.content"", String.class)\r\n                .as(StepVerifier::create)\r\n                .expectNext(""test comment"")\r\n                .thenCancel()\r\n                .verifyLater();\r\n\r\n        // add comment\r\n        dataFetcher.addComment(\r\n                        CommentInput.builder()\r\n                                .postId(UUID.randomUUID().toString())\r\n                                .content(""test content"")\r\n                                .build()\r\n                )\r\n                .as(StepVerifier::create)\r\n                .consumeNextWith(comment -> assertThat(comment.getContent()).isEqualTo(""test comment""))\r\n                .verifyComplete();\r\n\r\n        // verify the subscription now.\r\n        verifier.verify();\r\n\r\n        // verify the invocation of the mocks.\r\n        verify(postService, times(1)).addComment(any(CommentInput.class));\r\n        verify(postService, times(1)).getCommentById(anyString());\r\n        verifyNoMoreInteractions(postService);\r\n    }\r\n}\r\n```\r\n\r\nI got an 404 error , /graphql url not found. **The test tried to connect to HTTP not Web Socket endpoint**.\r\n\r\nIn the standalone console output, found the following info:\r\n\r\n```bash \r\n2021-10-09 20:57:13.025  INFO 6364 --- [    Test worker] o.s.g.b.GraphQlWebFluxAutoConfiguration  : GraphQL endpoint HTTP POST /graphql\r\n2021-10-09 20:57:13.061 DEBUG 6364 --- [    Test worker] o.s.w.r.f.s.s.RouterFunctionMapping      : 1 RouterFunction(s) in \'routerFunctionMapping\'\r\n2021-10-09 20:57:13.101 DEBUG 6364 --- [    Test worker] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/webjars/**, /**] in \'resourceHandlerMapping\'\r\n2021-10-09 20:57:13.162  INFO 6364 --- [    Test worker] o.s.g.b.GraphQlWebFluxAutoConfiguration  : GraphQL endpoint WebSocket /ws/graphql\r\n2021-10-09 20:57:13.163 DEBUG 6364 --- [    Test worker] o.s.w.r.handler.SimpleUrlHandlerMapping  : Patterns [/ws/graphql] in \'graphQlWebSocketEndpoint\'\r\n2021-10-09 20:57:13.219 DEBUG 6364 --- [    Test worker] o.s.w.r.r.m.a.ControllerMethodResolver   : ControllerAdvice beans: none\r\n2021-10-09 20:57:13.313 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.727 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.751 DEBUG 6364 --- [    Test worker] o.s.w.s.adapter.HttpWebHandlerAdapter    : enableLoggingRequestDetails=\'false\': form data and headers will be masked to prevent unsafe logging of potentially sensitive data\r\n2021-10-09 20:57:13.841  INFO 6364 --- [    Test worker] com.example.demo.SubscriptionTests       : Started SubscriptionTests in 6.257 seconds (JVM running for 8.562)\r\n2021-10-09 20:57:13.845  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : start data initialization...\r\n2021-10-09 20:57:14.622  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : deleted rows: authors: 1, comments: 18, posts: 5\r\n2021-10-09 20:57:14.713  INFO 6364 --- [    Test worker] com.example.demo.DataInitializer         : done data initialization...\r\n2021-10-09 20:57:14.710  INFO 6364 --- [actor-tcp-nio-1] com.example.demo.DataInitializer         : author: AuthorEntity[id=72e03543-c53a-47b0-8e65-c0e82626c468, name=user, email=user@example.com, createdAt=2021-10-09T20:57:14.629179]\r\n2021-10-09 20:57:14.944 DEBUG 6364 --- [    Test worker] o.s.w.r.f.client.ExchangeFunctions       : [2954c429] HTTP POST /graphql\r\n2021-10-09 20:57:14.979 DEBUG 6364 --- [     parallel-2] o.s.http.codec.json.Jackson2JsonEncoder  : [2954c429] Encoding [{query=subscription onCommentAdded { commentAdded { id postId content } }}]\r\n2021-10-09 20:57:15.012 DEBUG 6364 --- [     parallel-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [40a06180] HTTP POST ""/graphql""\r\n2021-10-09 20:57:15.032 DEBUG 6364 --- [     parallel-2] o.s.w.r.handler.SimpleUrlHandlerMapping  : [40a06180] Mapped to ResourceWebHandler [""classpath:/META-INF/resources/"", ""classpath:/resources/"", ""classpath:/static/"", ""classpath:/public/""]\r\n2021-10-09 20:57:15.037 DEBUG 6364 --- [     parallel-2] o.s.w.r.resource.ResourceWebHandler      : [40a06180] Resource not found\r\n2021-10-09 20:57:15.052 DEBUG 6364 --- [     parallel-2] org.springframework.web.HttpLogging      : [40a06180] Resolved [ResponseStatusException: 404 NOT_FOUND] for HTTP POST /graphql\r\n2021-10-09 20:57:15.067 DEBUG 6364 --- [     parallel-2] o.s.http.codec.json.Jackson2JsonEncoder  : [40a06180] Encoding [{timestamp=Sat Oct 09 20:57:15 CST 2021, path=/graphql, status=404, error=Not Found, message=null, r (truncated)...]\r\n2021-10-09 20:57:15.102 DEBUG 6364 --- [     parallel-2] o.s.w.s.adapter.HttpWebHandlerAdapter    : [40a06180] Completed 404 NOT_FOUND\r\n2021-10-09 20:57:15.108 DEBUG 6364 --- [     parallel-2] o.s.w.r.f.client.ExchangeFunctions       : [2954c429] [44f83767] Response 404 NOT_FOUND\r\n2021-10-09 20:57:15.123 ERROR 6364 --- [    Test worker] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:\r\n\r\n> POST /graphql\r\n> WebTestClient-Request-Id: [1]\r\n> Content-Type: [application/json]\r\n> Accept: [text/event-stream]\r\n> Content-Length: [78]\r\n\r\n{""query"":""subscription onCommentAdded { commentAdded { id postId content } }""}\r\n\r\n< 404 NOT_FOUND Not Found\r\n< Content-Type: [application/json]\r\n< Content-Length: [134]\r\n\r\n{""timestamp"":""2021-10-09T12:57:15.048+00:00"",""path"":""/graphql"",""status"":404,""error"":""Not Found"",""message"":null,""requestId"":""40a06180""}\r\n```\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077387536', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/163#issuecomment-1077387536', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/163', 'id': 1077387536, 'node_id': 'IC_kwDOEMJUCs5AN6EQ', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-24T08:57:17Z', 'updated_at': '2022-03-24T08:57:17Z', 'author_association': 'CONTRIBUTOR', 'body': 'This is available now as of M6 and was done as part of #317.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1077387536/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20910508140,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-24T08:52:32Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/338', 'id': 1179197787, 'node_id': 'I_kwDOEMJUCs5GSSFb', 'number': 338, 'title': 'Improve configuration and defaults for document location', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/8', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/8/labels', 'id': 7591975, 'node_id': 'MI_kwDOEMJUCs4Ac9gn', 'number': 8, 'title': '1.0.0-RC1', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-20T08:36:00Z', 'updated_at': '2022-03-24T08:52:32Z', 'due_on': '2022-04-19T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-24T08:52:32Z', 'updated_at': '2022-03-24T08:52:32Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/338/timeline', 'performed_via_github_app': None}}",opened,Java
20887462758,PullRequestReviewCommentEvent,rsocket/rsocket-java,0.0,2022-03-23T07:27:38Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931485', 'pull_request_review_id': 918309258, 'id': 832931485, 'node_id': 'PRRC_kwDOAk8BS84xpYad', 'diff_hunk': '@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2015-Present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.rsocket.examples.transport.tcp.metadata.routing;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufAllocator;\n+import io.netty.buffer.ByteBufUtil;\n+import io.netty.buffer.CompositeByteBuf;\n+import io.rsocket.RSocket;\n+import io.rsocket.SocketAcceptor;\n+import io.rsocket.core.RSocketConnector;\n+import io.rsocket.core.RSocketServer;\n+import io.rsocket.metadata.CompositeMetadata;\n+import io.rsocket.metadata.CompositeMetadataCodec;\n+import io.rsocket.metadata.RoutingMetadata;\n+import io.rsocket.metadata.TaggingMetadataCodec;\n+import io.rsocket.metadata.WellKnownMimeType;\n+import io.rsocket.transport.netty.client.TcpClientTransport;\n+import io.rsocket.transport.netty.server.TcpServerTransport;\n+import io.rsocket.util.ByteBufPayload;\n+import java.util.Collections;\n+import java.util.Objects;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import reactor.core.publisher.Mono;\n+\n+public class CompositeMetadataExample {\n+  static final Logger logger = LoggerFactory.getLogger(CompositeMetadataExample.class);\n+\n+  public static void main(String[] args) {\n+    RSocketServer.create(\n+            SocketAcceptor.forRequestResponse(\n+                payload -> {\n+                  final String route = decodeRoute(payload.sliceMetadata());\n+\n+                  logger.info(""Received RequestResponse[route={}]"", route);\n+\n+                  if (""my.test.route"".equals(route)) {\n+                    payload.release();', 'path': 'rsocket-examples/src/main/java/io/rsocket/examples/transport/tcp/metadata/routing/CompositeMetadataExample.java', 'position': 53, 'original_position': 53, 'commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'original_commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Not sure why the payload release is inside the `if` condition? It doesn't seem related."", 'created_at': '2022-03-23T07:27:38Z', 'updated_at': '2022-03-23T07:28:28Z', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021#discussion_r832931485', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'author_association': 'CONTRIBUTOR', '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931485'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021#discussion_r832931485'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}}, 'reactions': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931485/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 53, 'original_line': 53, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'id': 678972509, 'node_id': 'MDExOlB1bGxSZXF1ZXN0Njc4OTcyNTA5', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1021.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1021.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021', 'number': 1021, 'state': 'open', 'locked': False, 'title': 'adds routing example with TaggingMetadata and CompositeMetadata', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Signed-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\n', 'created_at': '2021-06-28T11:46:12Z', 'updated_at': '2022-03-23T07:28:28Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '485ba78e784653a55230e3f479231409ea4ed7bf', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1933732535, 'node_id': 'MDU6TGFiZWwxOTMzNzMyNTM1', 'url': 'https://api.github.com/repos/rsocket/rsocket-java/labels/documentation', 'name': 'documentation', 'color': 'baf9a4', 'default': True, 'description': ''}], 'milestone': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17', 'html_url': 'https://github.com/rsocket/rsocket-java/milestone/17', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17/labels', 'id': 6703082, 'node_id': 'MDk6TWlsZXN0b25lNjcwMzA4Mg==', 'number': 17, 'title': '1.1.2', 'description': '', 'creator': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 4, 'state': 'open', 'created_at': '2021-04-27T09:24:28Z', 'updated_at': '2022-03-18T10:29:49Z', 'due_on': '2022-03-24T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493', 'head': {'label': 'rsocket:docs/routing-example', 'ref': 'docs/routing-example', 'sha': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'f02867d1fda2f2050a35191c468aba764c64ec1d', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20887462763,PullRequestReviewCommentEvent,rsocket/rsocket-java,0.0,2022-03-23T07:27:54Z,"{'action': 'created', 'comment': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931773', 'pull_request_review_id': 918309258, 'id': 832931773, 'node_id': 'PRRC_kwDOAk8BS84xpYe9', 'diff_hunk': '@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2015-Present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the ""License"");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an ""AS IS"" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.rsocket.examples.transport.tcp.metadata.routing;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufAllocator;\n+import io.netty.buffer.ByteBufUtil;\n+import io.rsocket.RSocket;\n+import io.rsocket.SocketAcceptor;\n+import io.rsocket.core.RSocketConnector;\n+import io.rsocket.core.RSocketServer;\n+import io.rsocket.metadata.RoutingMetadata;\n+import io.rsocket.metadata.TaggingMetadataCodec;\n+import io.rsocket.metadata.WellKnownMimeType;\n+import io.rsocket.transport.netty.client.TcpClientTransport;\n+import io.rsocket.transport.netty.server.TcpServerTransport;\n+import io.rsocket.util.ByteBufPayload;\n+import java.util.Collections;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import reactor.core.publisher.Mono;\n+\n+public class RoutingMetadataExample {\n+  static final Logger logger = LoggerFactory.getLogger(RoutingMetadataExample.class);\n+\n+  public static void main(String[] args) {\n+    RSocketServer.create(\n+            SocketAcceptor.forRequestResponse(\n+                payload -> {\n+                  final String route = decodeRoute(payload.sliceMetadata());\n+\n+                  logger.info(""Received RequestResponse[route={}]"", route);\n+\n+                  if (""my.test.route"".equals(route)) {\n+                    payload.release();', 'path': 'rsocket-examples/src/main/java/io/rsocket/examples/transport/tcp/metadata/routing/RoutingMetadataExample.java', 'position': 49, 'original_position': 49, 'commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'original_commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Same here.', 'created_at': '2022-03-23T07:27:54Z', 'updated_at': '2022-03-23T07:28:28Z', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021#discussion_r832931773', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'author_association': 'CONTRIBUTOR', '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931773'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021#discussion_r832931773'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}}, 'reactions': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments/832931773/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'start_line': None, 'original_start_line': None, 'start_side': None, 'line': 49, 'original_line': 49, 'side': 'RIGHT'}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'id': 678972509, 'node_id': 'MDExOlB1bGxSZXF1ZXN0Njc4OTcyNTA5', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1021.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1021.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021', 'number': 1021, 'state': 'open', 'locked': False, 'title': 'adds routing example with TaggingMetadata and CompositeMetadata', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Signed-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\n', 'created_at': '2021-06-28T11:46:12Z', 'updated_at': '2022-03-23T07:28:28Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '485ba78e784653a55230e3f479231409ea4ed7bf', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1933732535, 'node_id': 'MDU6TGFiZWwxOTMzNzMyNTM1', 'url': 'https://api.github.com/repos/rsocket/rsocket-java/labels/documentation', 'name': 'documentation', 'color': 'baf9a4', 'default': True, 'description': ''}], 'milestone': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17', 'html_url': 'https://github.com/rsocket/rsocket-java/milestone/17', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17/labels', 'id': 6703082, 'node_id': 'MDk6TWlsZXN0b25lNjcwMzA4Mg==', 'number': 17, 'title': '1.1.2', 'description': '', 'creator': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 4, 'state': 'open', 'created_at': '2021-04-27T09:24:28Z', 'updated_at': '2022-03-18T10:29:49Z', 'due_on': '2022-03-24T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493', 'head': {'label': 'rsocket:docs/routing-example', 'ref': 'docs/routing-example', 'sha': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'f02867d1fda2f2050a35191c468aba764c64ec1d', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20887462755,PullRequestReviewEvent,rsocket/rsocket-java,0.0,2022-03-23T07:28:28Z,"{'action': 'created', 'review': {'id': 918309258, 'node_id': 'PRR_kwDOAk8BS842vEmK', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Looks good, just one minor point on the payload release inside an if-condition.', 'commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'submitted_at': '2022-03-23T07:28:28Z', 'state': 'approved', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021#pullrequestreview-918309258', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'author_association': 'CONTRIBUTOR', '_links': {'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021#pullrequestreview-918309258'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'id': 678972509, 'node_id': 'MDExOlB1bGxSZXF1ZXN0Njc4OTcyNTA5', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1021.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1021.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021', 'number': 1021, 'state': 'open', 'locked': False, 'title': 'adds routing example with TaggingMetadata and CompositeMetadata', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Signed-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\n', 'created_at': '2021-06-28T11:46:12Z', 'updated_at': '2022-03-23T07:28:28Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '485ba78e784653a55230e3f479231409ea4ed7bf', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1933732535, 'node_id': 'MDU6TGFiZWwxOTMzNzMyNTM1', 'url': 'https://api.github.com/repos/rsocket/rsocket-java/labels/documentation', 'name': 'documentation', 'color': 'baf9a4', 'default': True, 'description': ''}], 'milestone': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17', 'html_url': 'https://github.com/rsocket/rsocket-java/milestone/17', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17/labels', 'id': 6703082, 'node_id': 'MDk6TWlsZXN0b25lNjcwMzA4Mg==', 'number': 17, 'title': '1.1.2', 'description': '', 'creator': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 4, 'state': 'open', 'created_at': '2021-04-27T09:24:28Z', 'updated_at': '2022-03-18T10:29:49Z', 'due_on': '2022-03-24T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493', 'head': {'label': 'rsocket:docs/routing-example', 'ref': 'docs/routing-example', 'sha': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'f02867d1fda2f2050a35191c468aba764c64ec1d', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20887462663,PullRequestReviewEvent,rsocket/rsocket-java,0.0,2022-03-23T07:28:28Z,"{'action': 'created', 'review': {'id': 918309258, 'node_id': 'PRR_kwDOAk8BS842vEmK', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Looks good, just one minor point on the payload release inside an if-condition.', 'commit_id': '3f65c4887f351df60869653a5e36241a4d93f493', 'submitted_at': '2022-03-23T07:28:28Z', 'state': 'approved', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021#pullrequestreview-918309258', 'pull_request_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'author_association': 'CONTRIBUTOR', '_links': {'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021#pullrequestreview-918309258'}, 'pull_request': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}}}, 'pull_request': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021', 'id': 678972509, 'node_id': 'MDExOlB1bGxSZXF1ZXN0Njc4OTcyNTA5', 'html_url': 'https://github.com/rsocket/rsocket-java/pull/1021', 'diff_url': 'https://github.com/rsocket/rsocket-java/pull/1021.diff', 'patch_url': 'https://github.com/rsocket/rsocket-java/pull/1021.patch', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021', 'number': 1021, 'state': 'open', 'locked': False, 'title': 'adds routing example with TaggingMetadata and CompositeMetadata', 'user': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'body': 'Signed-off-by: Oleh Dokuka <oleh.dokuka@icloud.com>\r\nSigned-off-by: Oleh Dokuka <odokuka@vmware.com>\r\n', 'created_at': '2021-06-28T11:46:12Z', 'updated_at': '2022-03-23T07:28:28Z', 'closed_at': None, 'merged_at': None, 'merge_commit_sha': '485ba78e784653a55230e3f479231409ea4ed7bf', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1933732535, 'node_id': 'MDU6TGFiZWwxOTMzNzMyNTM1', 'url': 'https://api.github.com/repos/rsocket/rsocket-java/labels/documentation', 'name': 'documentation', 'color': 'baf9a4', 'default': True, 'description': ''}], 'milestone': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17', 'html_url': 'https://github.com/rsocket/rsocket-java/milestone/17', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17/labels', 'id': 6703082, 'node_id': 'MDk6TWlsZXN0b25lNjcwMzA4Mg==', 'number': 17, 'title': '1.1.2', 'description': '', 'creator': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 4, 'state': 'open', 'created_at': '2021-04-27T09:24:28Z', 'updated_at': '2022-03-18T10:29:49Z', 'due_on': '2022-03-24T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits', 'review_comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments', 'review_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493', 'head': {'label': 'rsocket:docs/routing-example', 'ref': 'docs/routing-example', 'sha': '3f65c4887f351df60869653a5e36241a4d93f493', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, 'base': {'label': 'rsocket:master', 'ref': 'master', 'sha': 'f02867d1fda2f2050a35191c468aba764c64ec1d', 'user': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 38732107, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODczMjEwNw==', 'name': 'rsocket-java', 'full_name': 'rsocket/rsocket-java', 'private': False, 'owner': {'login': 'rsocket', 'id': 25459855, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjI1NDU5ODU1', 'avatar_url': 'https://avatars.githubusercontent.com/u/25459855?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rsocket', 'html_url': 'https://github.com/rsocket', 'followers_url': 'https://api.github.com/users/rsocket/followers', 'following_url': 'https://api.github.com/users/rsocket/following{/other_user}', 'gists_url': 'https://api.github.com/users/rsocket/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rsocket/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rsocket/subscriptions', 'organizations_url': 'https://api.github.com/users/rsocket/orgs', 'repos_url': 'https://api.github.com/users/rsocket/repos', 'events_url': 'https://api.github.com/users/rsocket/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rsocket/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/rsocket/rsocket-java', 'description': 'Java implementation of RSocket', 'fork': False, 'url': 'https://api.github.com/repos/rsocket/rsocket-java', 'forks_url': 'https://api.github.com/repos/rsocket/rsocket-java/forks', 'keys_url': 'https://api.github.com/repos/rsocket/rsocket-java/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/rsocket/rsocket-java/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/rsocket/rsocket-java/teams', 'hooks_url': 'https://api.github.com/repos/rsocket/rsocket-java/hooks', 'issue_events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/events{/number}', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/events', 'assignees_url': 'https://api.github.com/repos/rsocket/rsocket-java/assignees{/user}', 'branches_url': 'https://api.github.com/repos/rsocket/rsocket-java/branches{/branch}', 'tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/tags', 'blobs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/rsocket/rsocket-java/languages', 'stargazers_url': 'https://api.github.com/repos/rsocket/rsocket-java/stargazers', 'contributors_url': 'https://api.github.com/repos/rsocket/rsocket-java/contributors', 'subscribers_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscribers', 'subscription_url': 'https://api.github.com/repos/rsocket/rsocket-java/subscription', 'commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/rsocket/rsocket-java/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/rsocket/rsocket-java/contents/{+path}', 'compare_url': 'https://api.github.com/repos/rsocket/rsocket-java/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/rsocket/rsocket-java/merges', 'archive_url': 'https://api.github.com/repos/rsocket/rsocket-java/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/rsocket/rsocket-java/downloads', 'issues_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues{/number}', 'pulls_url': 'https://api.github.com/repos/rsocket/rsocket-java/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/rsocket/rsocket-java/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/labels{/name}', 'releases_url': 'https://api.github.com/repos/rsocket/rsocket-java/releases{/id}', 'deployments_url': 'https://api.github.com/repos/rsocket/rsocket-java/deployments', 'created_at': '2015-07-08T04:36:42Z', 'updated_at': '2022-03-23T01:11:04Z', 'pushed_at': '2022-03-18T18:45:19Z', 'git_url': 'git://github.com/rsocket/rsocket-java.git', 'ssh_url': 'git@github.com:rsocket/rsocket-java.git', 'clone_url': 'https://github.com/rsocket/rsocket-java.git', 'svn_url': 'https://github.com/rsocket/rsocket-java', 'homepage': 'http://rsocket.io', 'size': 5856, 'stargazers_count': 2134, 'watchers_count': 2134, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 321, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 30, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['aeron', 'java', 'netty', 'reactive', 'reactor-core', 'rsocket', 'rxjava', 'stream'], 'visibility': 'public', 'forks': 321, 'open_issues': 30, 'watchers': 2134, 'default_branch': 'master'}}, '_links': {'self': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021'}, 'html': {'href': 'https://github.com/rsocket/rsocket-java/pull/1021'}, 'issue': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021'}, 'comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1021/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/pulls/1021/commits'}, 'statuses': {'href': 'https://api.github.com/repos/rsocket/rsocket-java/statuses/3f65c4887f351df60869653a5e36241a4d93f493'}}, 'author_association': 'MEMBER', 'auto_merge': None, 'active_lock_reason': None}}",created,Java
20878984623,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-22T18:48:53Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/329', 'id': 1169361381, 'node_id': 'I_kwDOEMJUCs5Fswnl', 'number': 329, 'title': ""Logo isn't readable on a dark background"", 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-03-15T08:48:51Z', 'updated_at': '2022-03-22T18:48:53Z', 'closed_at': '2022-03-22T18:47:44Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'When using the dimmed dark theme for GitHub, the text in the logo isn\'t very readable:\r\n\r\n![image](https://user-images.githubusercontent.com/351038/158340138-f44b0905-aa06-4346-b59c-35b93bd0ba75.png)\r\n\r\nAnd with the dark theme it isn\'t readable at all:\r\n\r\n<img width=""737"" alt=""image"" src=""https://user-images.githubusercontent.com/351038/158340535-162a2127-3623-4981-9a8b-19978758a20d.png"">\r\n\r\nMaybe a white outline on the text could help?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1075510453', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/329#issuecomment-1075510453', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329', 'id': 1075510453, 'node_id': 'IC_kwDOEMJUCs5AGvy1', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-22T18:48:53Z', 'updated_at': '2022-03-22T18:48:53Z', 'author_association': 'CONTRIBUTOR', 'body': 'This should be better now. Thanks for noticing.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1075510453/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20878965356,PushEvent,spring-projects/spring-graphql,0.0,2022-03-22T18:47:45Z,"{'push_id': 9419248939, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': 'e71ea056bd835b6692b67f12fdfa130ec9b23a99', 'before': '89b174d9ee901f7cfb500b4361a1ef923fb59bc6', 'commits': [{'sha': 'e71ea056bd835b6692b67f12fdfa130ec9b23a99', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Switch to icon without text\n\nCloses gh-329', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/e71ea056bd835b6692b67f12fdfa130ec9b23a99'}]}",,Java
20878965282,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-22T18:47:44Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/329', 'id': 1169361381, 'node_id': 'I_kwDOEMJUCs5Fswnl', 'number': 329, 'title': ""Logo isn't readable on a dark background"", 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-15T08:48:51Z', 'updated_at': '2022-03-22T18:47:44Z', 'closed_at': '2022-03-22T18:47:44Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'When using the dimmed dark theme for GitHub, the text in the logo isn\'t very readable:\r\n\r\n![image](https://user-images.githubusercontent.com/351038/158340138-f44b0905-aa06-4346-b59c-35b93bd0ba75.png)\r\n\r\nAnd with the dark theme it isn\'t readable at all:\r\n\r\n<img width=""737"" alt=""image"" src=""https://user-images.githubusercontent.com/351038/158340535-162a2127-3623-4981-9a8b-19978758a20d.png"">\r\n\r\nMaybe a white outline on the text could help?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/timeline', 'performed_via_github_app': None}}",closed,Java
20874017748,PushEvent,spring-projects/spring-graphql,0.0,2022-03-22T14:22:20Z,"{'push_id': 9416902573, 'size': 2, 'distinct_size': 2, 'ref': 'refs/heads/main', 'head': '0e2c5be01b71d740b824c94cd0d1f9ca4d87a297', 'before': '7e43223031b7c46c36f0685e3a5c823d01c67edb', 'commits': [{'sha': 'fc1e05bbf01d8db3166cff0c669f308dfa4c582c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Fix variable names following recent rename', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/fc1e05bbf01d8db3166cff0c669f308dfa4c582c'}, {'sha': '0e2c5be01b71d740b824c94cd0d1f9ca4d87a297', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Minor refactoring\n\nAvoid creating a map for a nested list.\n\nSee gh-280', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/0e2c5be01b71d740b824c94cd0d1f9ca4d87a297'}]}",,Java
20871684507,PushEvent,spring-projects/spring-graphql,0.0,2022-03-22T12:34:14Z,"{'push_id': 9415781583, 'size': 5, 'distinct_size': 5, 'ref': 'refs/heads/main', 'head': '7e43223031b7c46c36f0685e3a5c823d01c67edb', 'before': '9bc4c40a24ffc01c1f57af1d243a48ce01b42142', 'commits': [{'sha': '1f53a555da45503830d80d86e35bf6eddd9a609e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/1f53a555da45503830d80d86e35bf6eddd9a609e'}, {'sha': '09a12586e73a33bcaad13c88f1a6122e245b8921', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/09a12586e73a33bcaad13c88f1a6122e245b8921'}, {'sha': '98b70c3afe47a5cd03c37b0fdf98a07d962b3f28', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/98b70c3afe47a5cd03c37b0fdf98a07d962b3f28'}, {'sha': '0ecf921ce9ece415e436b45d5279e4bcf69398e9', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'GraphQlArgumentInitializer support for BindException\n\nGraphQlArgumentInitializer now keeps track of the argument path and\naccumulates binding errors whose field set to the argument path.\n\nIn case of a binding error, it continues with other constructor args\nor list elements, accumulating as many errors as possible, and raising\na BindingException at the end.\n\nCloses gh-280', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/0ecf921ce9ece415e436b45d5279e4bcf69398e9'}, {'sha': '7e43223031b7c46c36f0685e3a5c823d01c67edb', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing\n\nSee gh-280', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/7e43223031b7c46c36f0685e3a5c823d01c67edb'}]}",,Java
20871684247,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-22T12:34:13Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/280', 'id': 1123429914, 'node_id': 'I_kwDOEMJUCs5C9i4a', 'number': 280, 'title': 'Review exceptions raised from GraphQlArgumentInitializer', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 0, 'closed_issues': 33, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-22T12:34:13Z', 'due_on': '2022-03-22T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-02-03T18:39:06Z', 'updated_at': '2022-03-22T12:34:13Z', 'closed_at': '2022-03-22T12:34:13Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently it may raise a `TypeMismatchException` if a constructor argument cannot be converted to the expected type, and others like `IllegalStateException`, but if `DataBinder` is used then conversion errors are not checked in the `BindingResult`. We should ensure a `BindException` is raised consistently indicating which fields could not be bound.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/280/timeline', 'performed_via_github_app': None}}",closed,Java
20855039692,PushEvent,spring-projects/spring-graphql,0.0,2022-03-21T16:34:00Z,"{'push_id': 9407610157, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': '9bc4c40a24ffc01c1f57af1d243a48ce01b42142', 'before': '83001522f6828fc3bfd2825abd8b6c315e209475', 'commits': [{'sha': '9bc4c40a24ffc01c1f57af1d243a48ce01b42142', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Re-enable samples', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/9bc4c40a24ffc01c1f57af1d243a48ce01b42142'}]}",,Java
20853114393,PushEvent,spring-projects/spring-graphql,0.0,2022-03-21T15:05:19Z,"{'push_id': 9406709487, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': '83001522f6828fc3bfd2825abd8b6c315e209475', 'before': '4d50ecd6f17c22d2568ade722271858684edef18', 'commits': [{'sha': '83001522f6828fc3bfd2825abd8b6c315e209475', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refactoring in DefaultGraphQlTester\n\nAlign with similar changes in GraphQlClient.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/83001522f6828fc3bfd2825abd8b6c315e209475'}]}",,Java
20848822270,PushEvent,spring-projects/spring-graphql,0.0,2022-03-21T11:35:41Z,"{'push_id': 9404649628, 'size': 3, 'distinct_size': 3, 'ref': 'refs/heads/main', 'head': '4d50ecd6f17c22d2568ade722271858684edef18', 'before': 'e3ac804015c9839b834eddaf33a36d8678fadc18', 'commits': [{'sha': '4e639701754c62048078ec3c197ca42708115083', 'author': {'email': 'koen@koenpunt.nl', 'name': 'Koen Punt'}, 'message': 'Fix implementation of containsExactly\n\nSee gh-327', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/4e639701754c62048078ec3c197ca42708115083'}, {'sha': '3d638918f46311efabeed91691308c5307cfc5a8', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing\n\nCloses gh-327', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/3d638918f46311efabeed91691308c5307cfc5a8'}, {'sha': '4d50ecd6f17c22d2568ade722271858684edef18', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revise JSON path options in GraphQlTester\n\nCloses gh-278', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/4d50ecd6f17c22d2568ade722271858684edef18'}]}",,Java
20848822070,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-21T11:35:40Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/278', 'id': 1118543675, 'node_id': 'I_kwDOEMJUCs5Cq587', 'number': 278, 'title': 'Revise JSONPath options in GraphQlTester', 'user': {'login': 'jord1e', 'id': 30464310, 'node_id': 'MDQ6VXNlcjMwNDY0MzEw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30464310?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jord1e', 'html_url': 'https://github.com/jord1e', 'followers_url': 'https://api.github.com/users/jord1e/followers', 'following_url': 'https://api.github.com/users/jord1e/following{/other_user}', 'gists_url': 'https://api.github.com/users/jord1e/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jord1e/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jord1e/subscriptions', 'organizations_url': 'https://api.github.com/users/jord1e/orgs', 'repos_url': 'https://api.github.com/users/jord1e/repos', 'events_url': 'https://api.github.com/users/jord1e/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jord1e/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 32, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T11:35:40Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 4, 'created_at': '2022-01-30T13:50:11Z', 'updated_at': '2022-03-21T11:35:40Z', 'closed_at': '2022-03-21T11:35:40Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The existing methods do not cover this case. The `valueIsEmpty` and `valueIsNotEmpty` methods do way more checks.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/timeline', 'performed_via_github_app': None}}",closed,Java
20848822038,PullRequestEvent,spring-projects/spring-graphql,0.0,2022-03-21T11:35:40Z,"{'action': 'closed', 'number': 327, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327', 'id': 878974160, 'node_id': 'PR_kwDOEMJUCs40ZBTQ', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/327', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/327.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/327.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327', 'number': 327, 'state': 'closed', 'locked': False, 'title': 'Fix implementation of `containsExactly`', 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'body': ""The implementation was the same for `contains` and `containsExactly`, but `containsExactly` should fail when the number items doesn't match the size of the expected items list."", 'created_at': '2022-03-14T12:08:02Z', 'updated_at': '2022-03-21T11:35:40Z', 'closed_at': '2022-03-21T11:35:39Z', 'merged_at': None, 'merge_commit_sha': '7c28d0ea3e29fc1668f811e508ffa40825b4ee50', 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 31, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T11:35:40Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/fd9768a2940d2856b3f817d70e184a7e5c23430c', 'head': {'label': 'koenpunt:fix-containsExactly', 'ref': 'fix-containsExactly', 'sha': 'fd9768a2940d2856b3f817d70e184a7e5c23430c', 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 386246755, 'node_id': 'MDEwOlJlcG9zaXRvcnkzODYyNDY3NTU=', 'name': 'spring-graphql', 'full_name': 'koenpunt/spring-graphql', 'private': False, 'owner': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/koenpunt/spring-graphql', 'description': 'Spring integration for GraphQL ', 'fork': True, 'url': 'https://api.github.com/repos/koenpunt/spring-graphql', 'forks_url': 'https://api.github.com/repos/koenpunt/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/koenpunt/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/koenpunt/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/koenpunt/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/koenpunt/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/koenpunt/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/koenpunt/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/koenpunt/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/koenpunt/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/koenpunt/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/koenpunt/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/koenpunt/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/koenpunt/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/koenpunt/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/koenpunt/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/koenpunt/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/koenpunt/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/koenpunt/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/koenpunt/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/koenpunt/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/koenpunt/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/koenpunt/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/koenpunt/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/koenpunt/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/koenpunt/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/koenpunt/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/koenpunt/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/koenpunt/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/koenpunt/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/koenpunt/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/koenpunt/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/koenpunt/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/koenpunt/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/koenpunt/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/koenpunt/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/koenpunt/spring-graphql/deployments', 'created_at': '2021-07-15T10:14:23Z', 'updated_at': '2021-09-19T17:06:56Z', 'pushed_at': '2022-03-18T14:24:31Z', 'git_url': 'git://github.com/koenpunt/spring-graphql.git', 'ssh_url': 'git@github.com:koenpunt/spring-graphql.git', 'clone_url': 'https://github.com/koenpunt/spring-graphql.git', 'svn_url': 'https://github.com/koenpunt/spring-graphql', 'homepage': '', 'size': 1988, 'stargazers_count': 0, 'watchers_count': 0, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 0, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': 'b2b1e2d506aba402fb07bf7d3b149f439c7f729e', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 281170954, 'node_id': 'MDEwOlJlcG9zaXRvcnkyODExNzA5NTQ=', 'name': 'spring-graphql', 'full_name': 'spring-projects/spring-graphql', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-graphql', 'description': 'Spring Integration for GraphQL ', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/deployments', 'created_at': '2020-07-20T16:35:00Z', 'updated_at': '2022-03-21T10:10:59Z', 'pushed_at': '2022-03-21T11:35:38Z', 'git_url': 'git://github.com/spring-projects/spring-graphql.git', 'ssh_url': 'git@github.com:spring-projects/spring-graphql.git', 'clone_url': 'https://github.com/spring-projects/spring-graphql.git', 'svn_url': 'https://github.com/spring-projects/spring-graphql', 'homepage': '', 'size': 2202, 'stargazers_count': 1049, 'watchers_count': 1049, 'language': 'Java', 'has_issues': True, 'has_projects': False, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 138, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 41, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['graphql', 'spring-graphql'], 'visibility': 'public', 'forks': 138, 'open_issues': 41, 'watchers': 1049, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327'}, 'html': {'href': 'https://github.com/spring-projects/spring-graphql/pull/327'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/fd9768a2940d2856b3f817d70e184a7e5c23430c'}}, 'author_association': 'CONTRIBUTOR', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': None, 'rebaseable': None, 'mergeable_state': 'unknown', 'merged_by': None, 'comments': 4, 'review_comments': 0, 'maintainer_can_modify': False, 'commits': 1, 'additions': 1, 'deletions': 1, 'changed_files': 1}}",closed,Java
20848433764,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-21T11:12:35Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/278', 'id': 1118543675, 'node_id': 'I_kwDOEMJUCs5Cq587', 'number': 278, 'title': 'Add `GraphQlTester.PathSpec#is(Not)Null()` methods', 'user': {'login': 'jord1e', 'id': 30464310, 'node_id': 'MDQ6VXNlcjMwNDY0MzEw', 'avatar_url': 'https://avatars.githubusercontent.com/u/30464310?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jord1e', 'html_url': 'https://github.com/jord1e', 'followers_url': 'https://api.github.com/users/jord1e/followers', 'following_url': 'https://api.github.com/users/jord1e/following{/other_user}', 'gists_url': 'https://api.github.com/users/jord1e/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jord1e/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jord1e/subscriptions', 'organizations_url': 'https://api.github.com/users/jord1e/orgs', 'repos_url': 'https://api.github.com/users/jord1e/repos', 'events_url': 'https://api.github.com/users/jord1e/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jord1e/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 30, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T10:24:22Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 3, 'created_at': '2022-01-30T13:50:11Z', 'updated_at': '2022-03-21T11:12:35Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'The existing methods do not cover this case. The `valueIsEmpty` and `valueIsNotEmpty` methods do way more checks.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1073769944', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/278#issuecomment-1073769944', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/278', 'id': 1073769944, 'node_id': 'IC_kwDOEMJUCs5AAG3Y', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-21T11:12:35Z', 'updated_at': '2022-03-21T11:12:35Z', 'author_association': 'CONTRIBUTOR', 'body': ""On further thought and review, 'm going to re-purpose this to do a broader update of the options. The current choice is confusing, with some completely overlapping (`valueExists` and `valueIsNotEmpty`) and lack of guidance (it's hard to choose from a long list). \r\n\r\nAs far as I can see, the following should suffice:\r\n\r\n- `hasValue` - valid field, possibly partial but not null\r\n- `isNull` - failed field, or optional field set to `null`\r\n- `doesNotExist` - the path is not even present\r\n\r\nNote, the `isNull` check can only apply to single value paths, e.g. `books`, `books[1].title`. Indefinite paths like `book[*]`, `book[?(@.category = 'fiction')]` cannot be supported and will be rejected.\r\n\r\nFor anything beyond, there is `toEntity` and `toEntityList`.\r\n\r\n "", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1073769944/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20846226870,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-21T09:08:31Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/332', 'id': 1171499546, 'node_id': 'I_kwDOEMJUCs5F06oa', 'number': 332, 'title': 'Add client-side interception on GraphQlClient', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 30, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T09:06:28Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T20:11:38Z', 'updated_at': '2022-03-21T09:08:31Z', 'closed_at': '2022-03-21T09:06:27Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Similar to the `WebInterceptor` chain on the server side but for use with `GraphQlClient`. This would also include a WebSocket specific interceptor for WebSocket specific needs (`connection_init` and `connection_ack` payload, disconnects, etc).', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1073658706', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/332#issuecomment-1073658706', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332', 'id': 1073658706, 'node_id': 'IC_kwDOEMJUCs4__rtS', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-21T09:08:31Z', 'updated_at': '2022-03-21T09:08:31Z', 'author_association': 'CONTRIBUTOR', 'body': 'Also commits f54ee52d and bb628086 incorrectly linked to different issue.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1073658706/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20846191701,PushEvent,spring-projects/spring-graphql,0.0,2022-03-21T09:06:30Z,"{'push_id': 9403378838, 'size': 12, 'distinct_size': 12, 'ref': 'refs/heads/main', 'head': 'e3ac804015c9839b834eddaf33a36d8678fadc18', 'before': '982cbbaa453f98b7acdcec10046ea7947faba314', 'commits': [{'sha': '08597c9e8aebfff9cd9a5d4b8f9bf6e8f54b3b61', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Recreate SimpleTypeConverter if ConversionService not set\n\nCloses gh-315', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/08597c9e8aebfff9cd9a5d4b8f9bf6e8f54b3b61'}, {'sha': 'be05b031d6a132a52a076f5c5dbcfe626b1067d2', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Extract GraphQlRequest interface\n\nSee gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/be05b031d6a132a52a076f5c5dbcfe626b1067d2'}, {'sha': '182e9e66f045b7990dd9e5c3944ccd80c0bf645a', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Extract ExecutionGraphQl[Request|Response] interfaces\n\nRename the implementation classes Request[Input|Output] accordingly to\nmatch the interfaces, and move them into the support package.\n\nCreate AbstractGraphQlResponse in the support package that\npre-implements response field access.\n\nThis leaves mainly contracts in the top-level package.\n\nSee gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/182e9e66f045b7990dd9e5c3944ccd80c0bf645a'}, {'sha': '67711f7331330fed9e17c9b3d2f02966e0f530f0', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Rename Web[Input|Output] to WebGraphQl[Request|Response]\n\nSee gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/67711f7331330fed9e17c9b3d2f02966e0f530f0'}, {'sha': '91e7f285fa15772b6e4741640df0d4eb932c6d12', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Shorten GraphQlResponse[Field|Error] and rename GraphQlService\n\nRename GraphQlService to ExecutionGraphQlService following the renaming\nof the request and response to ExecutionGraphQl[Request|Response].\n\nSee gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/91e7f285fa15772b6e4741640df0d4eb932c6d12'}, {'sha': 'bb4ebf6cb8ef91968f8f4e52bdf2bd191aafd511', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Correct names of AbstractDirectTransport and subclasses\n\nSee gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/bb4ebf6cb8ef91968f8f4e52bdf2bd191aafd511'}, {'sha': '92547de5d093157b0259dfd960766cb2f38c4651', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add client side interception\n\nCloses gh-332', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/92547de5d093157b0259dfd960766cb2f38c4651'}, {'sha': 'f54ee52d62c9dcf148e9d6c2a95980b05d1015b8', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add WebSocketGraphQlClientInterceptor\n\nSee gh-322', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/f54ee52d62c9dcf148e9d6c2a95980b05d1015b8'}, {'sha': 'bb6280863aacd4897637fa29bf65561bbeae12a7', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update documentation for client interception\n\nSee gh-322', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/bb6280863aacd4897637fa29bf65561bbeae12a7'}, {'sha': 'c0f97d3f9b3085c4ed80801e57d3fa3a1ea95464', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Move WebInterceptorChain into WebInterceptor\n\nShorter name on method declaration within the interceptor, also for\nconsistency with GraphQlClientInterceptor.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/c0f97d3f9b3085c4ed80801e57d3fa3a1ea95464'}, {'sha': 'dfff40085cb3eaaa148c4698aaa19149b97ef2d4', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Rename [Web|Socket]Interceptor\n\nUse more qualified names [Web|Socket]GraphQlHandlerInterceptor to\ndifferentiate with ClientGraphQlInterceptor and to align with other\ntypes in the same package.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/dfff40085cb3eaaa148c4698aaa19149b97ef2d4'}, {'sha': 'e3ac804015c9839b834eddaf33a36d8678fadc18', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Temporarily disable samples', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/e3ac804015c9839b834eddaf33a36d8678fadc18'}]}",,Java
20846191084,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-21T09:06:28Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/332', 'id': 1171499546, 'node_id': 'I_kwDOEMJUCs5F06oa', 'number': 332, 'title': 'Add client-side interception on GraphQlClient', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 30, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T09:06:28Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T20:11:38Z', 'updated_at': '2022-03-21T09:06:28Z', 'closed_at': '2022-03-21T09:06:27Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Similar to the `WebInterceptor` chain on the server side but for use with `GraphQlClient`. This would also include a WebSocket specific interceptor for WebSocket specific needs (`connection_init` and `connection_ack` payload, disconnects, etc).', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/timeline', 'performed_via_github_app': None}}",closed,Java
20846190876,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-21T09:06:27Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/315', 'id': 1157962955, 'node_id': 'I_kwDOEMJUCs5FBRzL', 'number': 315, 'title': 'ArgumentMethodArgumentResolver and QueryByExampleDataFetcher are not thread safe', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 29, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-21T09:06:27Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 2, 'created_at': '2022-03-03T04:42:02Z', 'updated_at': '2022-03-21T09:06:27Z', 'closed_at': '2022-03-21T09:06:26Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': '>Note: Due to its reliance on PropertyEditors, SimpleTypeConverter is not thread-safe. Use a separate instance for each thread.\r\nhttps://github.com/spring-projects/spring-framework/blob/68757073b0cf69c41d5c17e8abdffbc388cdbabe/spring-beans/src/main/java/org/springframework/beans/SimpleTypeConverter.java#L26\r\n\r\nIt seems that all the concurrent operations in `ArgumentMethodArgumentResolver` share one `SimpleTypeConverter`, as well as `QueryByExampleDataFetcher`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/timeline', 'performed_via_github_app': None}}",closed,Java
20823917304,PushEvent,spring-projects/spring-graphql,0.0,2022-03-18T18:19:33Z,"{'push_id': 9389806603, 'size': 6, 'distinct_size': 6, 'ref': 'refs/heads/main', 'head': '982cbbaa453f98b7acdcec10046ea7947faba314', 'before': 'b2b1e2d506aba402fb07bf7d3b149f439c7f729e', 'commits': [{'sha': '3c30376cbabf7a6ce288254606ac675c111e1615', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine null handling in GraphQlClient for retrieve\n\nIf a field is null but without errors, i.e. declared optional in the\nschema, it is more natural for toEntity to complete empty instead of\nraising a FieldAccessException.\n\nThis aligns better with the execute method where handling the field\ndirectly allows treating a null but valid field as optional.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/3c30376cbabf7a6ce288254606ac675c111e1615'}, {'sha': '96135183f5ca18e5d5db3e0988ff054b9a3d290e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refactor MapGraphQlResponse\n\nMapGraphQlResponse is a simple wrapper around the response map exposing\nit as GraphQlResponse. It is now package private and made accessible\nthrough a static factory method on GraphQlTransport.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/96135183f5ca18e5d5db3e0988ff054b9a3d290e'}, {'sha': 'db24c8f62b760b1483845ded26ebb07e6138b167', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Replace GraphQLError with GraphQlResponseError\n\nThis allows exposing additional conveniences for inspecting errors.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/db24c8f62b760b1483845ded26ebb07e6138b167'}, {'sha': '827b70b71d30d581322da18b62f15731db554e67', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update GraphQlResponseError contract\n\nAdd a String path representation making it easy to filter errors by\npath using String comparison, and refine nullability.\n\nTake advantage of the String error paths to simplify internal filtering\nof error fields.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/827b70b71d30d581322da18b62f15731db554e67'}, {'sha': 'cdd8b67fedd3c741a4c4a8db25882ecd1c6eadbe', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine GraphQlResponseField getError()\n\nInstead of a simple check, looking for an associated field error at or\nabove the field, this method now more focused on finding the reason for\na failure when the field has no value.\n\nThis allows performing a more thorough search including cases when the\nfield error is at, above, or even below (e.g. non-null nested field\nthat bubbled up), in the end falling back on request errors (e.g.\nfailed response without any field errors).\n\nAlso, rename ResponseField to GraphQlResponseField and move to a\ntop-level class.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/cdd8b67fedd3c741a4c4a8db25882ecd1c6eadbe'}, {'sha': '982cbbaa453f98b7acdcec10046ea7947faba314', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Extract GraphQlResponseField in the top-level package\n\nGraphQlResponseField is now extracted as a super type at the top-level\npackage and is exposed from GraphQlResponse. ClientGraphQlResponseField\nextends this to provide decoding options.\n\nThe change ensures consistency with both GraphQlResponseField and\nGraphQlResponseError accessible through GraphQlResponse, also making\nboth available for client and server side handling.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/982cbbaa453f98b7acdcec10046ea7947faba314'}]}",,Java
20816075576,IssueCommentEvent,rsocket/rsocket-java,0.0,2022-03-18T10:25:17Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026', 'repository_url': 'https://api.github.com/repos/rsocket/rsocket-java', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026/labels{/name}', 'comments_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026/comments', 'events_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026/events', 'html_url': 'https://github.com/rsocket/rsocket-java/issues/1026', 'id': 1015287923, 'node_id': 'I_kwDOAk8BS848hBBz', 'number': 1026, 'title': 'Support returning ApplicationError with cause', 'user': {'login': 'LifeIsStrange', 'id': 12934716, 'node_id': 'MDQ6VXNlcjEyOTM0NzE2', 'avatar_url': 'https://avatars.githubusercontent.com/u/12934716?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/LifeIsStrange', 'html_url': 'https://github.com/LifeIsStrange', 'followers_url': 'https://api.github.com/users/LifeIsStrange/followers', 'following_url': 'https://api.github.com/users/LifeIsStrange/following{/other_user}', 'gists_url': 'https://api.github.com/users/LifeIsStrange/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/LifeIsStrange/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/LifeIsStrange/subscriptions', 'organizations_url': 'https://api.github.com/users/LifeIsStrange/orgs', 'repos_url': 'https://api.github.com/users/LifeIsStrange/repos', 'events_url': 'https://api.github.com/users/LifeIsStrange/events{/privacy}', 'received_events_url': 'https://api.github.com/users/LifeIsStrange/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17', 'html_url': 'https://github.com/rsocket/rsocket-java/milestone/17', 'labels_url': 'https://api.github.com/repos/rsocket/rsocket-java/milestones/17/labels', 'id': 6703082, 'node_id': 'MDk6TWlsZXN0b25lNjcwMzA4Mg==', 'number': 17, 'title': '1.1.2', 'description': None, 'creator': {'login': 'OlegDokuka', 'id': 5380167, 'node_id': 'MDQ6VXNlcjUzODAxNjc=', 'avatar_url': 'https://avatars.githubusercontent.com/u/5380167?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/OlegDokuka', 'html_url': 'https://github.com/OlegDokuka', 'followers_url': 'https://api.github.com/users/OlegDokuka/followers', 'following_url': 'https://api.github.com/users/OlegDokuka/following{/other_user}', 'gists_url': 'https://api.github.com/users/OlegDokuka/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/OlegDokuka/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/OlegDokuka/subscriptions', 'organizations_url': 'https://api.github.com/users/OlegDokuka/orgs', 'repos_url': 'https://api.github.com/users/OlegDokuka/repos', 'events_url': 'https://api.github.com/users/OlegDokuka/events{/privacy}', 'received_events_url': 'https://api.github.com/users/OlegDokuka/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 4, 'state': 'open', 'created_at': '2021-04-27T09:24:28Z', 'updated_at': '2022-03-18T10:20:17Z', 'due_on': None, 'closed_at': None}, 'comments': 0, 'created_at': '2021-10-04T14:57:34Z', 'updated_at': '2022-03-18T10:25:17Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Rsocket define two ApplicationError constructors, which match the standard Java Exception interface:\r\n\r\n``` Java\r\npublic final class ApplicationErrorException extends RSocketErrorException {\r\n\r\n  private static final long serialVersionUID = 7873267740343446585L;\r\n\r\n  /**\r\n   * Constructs a new exception with the specified message.\r\n   *\r\n   * @param message the message\r\n   */\r\n  public ApplicationErrorException(String message) {\r\n    this(message, null);\r\n  }\r\n\r\n  /**\r\n   * Constructs a new exception with the specified message and cause.\r\n   *\r\n   * @param message the message\r\n   * @param cause the cause of this exception\r\n   */\r\n  public ApplicationErrorException(String message, @Nullable Throwable cause) {\r\n    super(ErrorFrameCodec.APPLICATION_ERROR, message, cause);\r\n  }\r\n}\r\n```\r\nfrom https://github.com/rsocket/rsocket-java/blob/c80b3cb6437046f3ccc79136a66299448f58c561/rsocket-core/src/main/java/io/rsocket/exceptions/ApplicationErrorException.java\r\n\r\nMy use case is trivial and extremely common, I have a Spring webflux RSocket route that return a Flux<Model>\r\nhowever in case where validation fail, we need to throw an error.\r\nThe error inherit ExceptIon(message, cause) where cause is a Throwable Exception that contains useful data about the error (like the Exception name, error code, timestamp) which is crucial for debugging/observability and reacting to specific exceptions.\r\n\r\nHowever as we can see in the code of the Exceptions file in RSocket-core:\r\n``` Java\r\n      switch (errorCode) {\r\n        case APPLICATION_ERROR:\r\n          return new ApplicationErrorException(message);\r\n```\r\nfrom https://github.com/rsocket/rsocket-java/blob/c80b3cb6437046f3ccc79136a66299448f58c561/rsocket-core/src/main/java/io/rsocket/exceptions/Exceptions.java\r\n\r\nWhen we throw an error, it will never use the ApplicationErrorException(message, **cause**) constructor, in fact this constructor is not called even once in the RSocket-core codebase.\r\nThis crucial limitation prevent the use of RSocket in enterprise code in my opinion. \r\nProposed Solution:\r\nSerialize not just the message but also the cause if RSocket detect an APPLICATION_ERROR. If the cause is not null, provide it in the constructor which will enable clients to consume the Error metadatas (cause)\r\n\r\nfriendly ping:\r\n@OlegDokuka \r\n@arodionov \r\n@rstoyanchev ', 'reactions': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments/1072274428', 'html_url': 'https://github.com/rsocket/rsocket-java/issues/1026#issuecomment-1072274428', 'issue_url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/1026', 'id': 1072274428, 'node_id': 'IC_kwDOAk8BS84_6Zv8', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-18T10:25:17Z', 'updated_at': '2022-03-18T10:25:17Z', 'author_association': 'CONTRIBUTOR', 'body': ""@LifeIsStrange thanks for raising this. \r\n\r\nI think we need to change this so that the error details in the ERROR frame are explicitly chosen by the application. Automatically using the message of a `Throwable` or its cause is problematic since it is likely to reveal implementation details that aren't meant to be sent remotely.\r\n\r\nWhat we can do is enhance `RSocketException` to accept error data in addition to the error code, separately from the Throwable message. That way the application can choose what should be on the wire as an explanation but by default we would not include a Throwable's message."", 'reactions': {'url': 'https://api.github.com/repos/rsocket/rsocket-java/issues/comments/1072274428/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20807475756,PullRequestEvent,spring-projects/spring-graphql,0.0,2022-03-17T20:53:10Z,"{'action': 'closed', 'number': 322, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322', 'id': 875998530, 'node_id': 'PR_kwDOEMJUCs40Nq1C', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/322.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/322.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'number': 322, 'state': 'closed', 'locked': False, 'title': 'Replace argument type with `@Source` to determine source/parent', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'body': ""Annotation way will be more precise. \r\n\r\n## leniency model: argument type\r\nI think argumentType way may lead mismatch. There will be various parameter types when spring-graphql support custom `HandlerMethodArgumentResolver`.\r\n\r\nThis way also require strict restriction of code: `SourceMethodArgumentResolver` must be put after other `HandlerMethodArgumentResolver`.\r\n\r\n## strictness model: `@Source`\r\n\r\nDevelopers will easily know whether argument is source/parent by `@Source`, they don't have to look at the implementations of `HandlerMethodArgumentResolver` to determine which one supports the parameter.\r\n\r\nAnd there is no need to take `SourceMethodArgumentResolver` as fallback.\r\n\r\n"", 'created_at': '2022-03-10T04:50:07Z', 'updated_at': '2022-03-17T20:53:10Z', 'closed_at': '2022-03-17T20:53:10Z', 'merged_at': None, 'merge_commit_sha': 'bcc2548f06b01d192ae81ea017acaa8308df43da', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'milestone': None, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/d2800fcac12cba2ef82afcfb15105ba60a758841', 'head': {'label': 'dugenkui03:supportSourceMethodParameter', 'ref': 'supportSourceMethodParameter', 'sha': 'd2800fcac12cba2ef82afcfb15105ba60a758841', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 377463720, 'node_id': 'MDEwOlJlcG9zaXRvcnkzNzc0NjM3MjA=', 'name': 'spring-graphql', 'full_name': 'dugenkui03/spring-graphql', 'private': False, 'owner': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/dugenkui03/spring-graphql', 'description': 'Spring integration for GraphQL ', 'fork': True, 'url': 'https://api.github.com/repos/dugenkui03/spring-graphql', 'forks_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/deployments', 'created_at': '2021-06-16T10:53:30Z', 'updated_at': '2021-12-21T15:10:21Z', 'pushed_at': '2022-03-17T16:47:22Z', 'git_url': 'git://github.com/dugenkui03/spring-graphql.git', 'ssh_url': 'git@github.com:dugenkui03/spring-graphql.git', 'clone_url': 'https://github.com/dugenkui03/spring-graphql.git', 'svn_url': 'https://github.com/dugenkui03/spring-graphql', 'homepage': '', 'size': 2497, 'stargazers_count': 0, 'watchers_count': 0, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 4, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 4, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': 'f42563424e2e037c1da7233173e39ba026a60568', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 281170954, 'node_id': 'MDEwOlJlcG9zaXRvcnkyODExNzA5NTQ=', 'name': 'spring-graphql', 'full_name': 'spring-projects/spring-graphql', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-graphql', 'description': 'Spring Integration for GraphQL ', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/deployments', 'created_at': '2020-07-20T16:35:00Z', 'updated_at': '2022-03-17T07:43:43Z', 'pushed_at': '2022-03-17T16:25:00Z', 'git_url': 'git://github.com/spring-projects/spring-graphql.git', 'ssh_url': 'git@github.com:spring-projects/spring-graphql.git', 'clone_url': 'https://github.com/spring-projects/spring-graphql.git', 'svn_url': 'https://github.com/spring-projects/spring-graphql', 'homepage': '', 'size': 1972, 'stargazers_count': 1038, 'watchers_count': 1038, 'language': 'Java', 'has_issues': True, 'has_projects': False, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 138, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 43, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['graphql', 'spring-graphql'], 'visibility': 'public', 'forks': 138, 'open_issues': 43, 'watchers': 1038, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322'}, 'html': {'href': 'https://github.com/spring-projects/spring-graphql/pull/322'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/d2800fcac12cba2ef82afcfb15105ba60a758841'}}, 'author_association': 'CONTRIBUTOR', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': True, 'rebaseable': False, 'mergeable_state': 'clean', 'merged_by': None, 'comments': 5, 'review_comments': 0, 'maintainer_can_modify': False, 'commits': 1, 'additions': 55, 'deletions': 22, 'changed_files': 6}}",closed,Java
20807475646,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T20:53:10Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'id': 1164750004, 'node_id': 'PR_kwDOEMJUCs40Nq1C', 'number': 322, 'title': 'Replace argument type with `@Source` to determine source/parent', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2022-03-10T04:50:07Z', 'updated_at': '2022-03-17T20:53:10Z', 'closed_at': '2022-03-17T20:53:10Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/322.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/322.patch', 'merged_at': None}, 'body': ""Annotation way will be more precise. \r\n\r\n## leniency model: argument type\r\nI think argumentType way may lead mismatch. There will be various parameter types when spring-graphql support custom `HandlerMethodArgumentResolver`.\r\n\r\nThis way also require strict restriction of code: `SourceMethodArgumentResolver` must be put after other `HandlerMethodArgumentResolver`.\r\n\r\n## strictness model: `@Source`\r\n\r\nDevelopers will easily know whether argument is source/parent by `@Source`, they don't have to look at the implementations of `HandlerMethodArgumentResolver` to determine which one supports the parameter.\r\n\r\nAnd there is no need to take `SourceMethodArgumentResolver` as fallback.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071455192', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322#issuecomment-1071455192', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'id': 1071455192, 'node_id': 'IC_kwDOEMJUCs4_3RvY', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T20:53:09Z', 'updated_at': '2022-03-17T20:53:09Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for elaborating. For now, I'm closing this but we can always reconsider when it becomes an actual issue. "", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071455192/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20804041244,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T17:22:40Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316', 'id': 1160364106, 'node_id': 'I_kwDOEMJUCs5FKcBK', 'number': 316, 'title': 'Asynchronous execution and fetching field in parallel', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 8, 'created_at': '2022-03-05T14:20:30Z', 'updated_at': '2022-03-17T17:22:40Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Asynchronous execution is key point to ensure high performance of query, details in [asynchronous-execution](https://www.graphql-java.com/documentation/execution#asynchronous-execution).\r\n\r\nIt seems that all the invoketion of @Controller handler method is serial by default. Will spring graphql support asynchronous execution of fetching field (probably similar to [mvc-ann-async](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-async))?\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071118428', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316#issuecomment-1071118428', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'id': 1071118428, 'node_id': 'IC_kwDOEMJUCs4_1_hc', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T17:22:40Z', 'updated_at': '2022-03-17T17:22:40Z', 'author_association': 'CONTRIBUTOR', 'body': '@hepin1989 if we support `Supplier<?>` as a return value that would be similar to the idea of an `@Blocking` annotation.\r\n\r\n@pinguinjkeke you can use suspend but Reactor is still a required dependency and used in our APIs where contracts need to be asynchronous or where we need to compose asynchronous logic. This is comparable to WebFlux.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071118428/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20803936045,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T17:17:22Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316', 'id': 1160364106, 'node_id': 'I_kwDOEMJUCs5FKcBK', 'number': 316, 'title': 'Asynchronous execution and fetching field in parallel', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 6, 'created_at': '2022-03-05T14:20:30Z', 'updated_at': '2022-03-17T17:17:22Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Asynchronous execution is key point to ensure high performance of query, details in [asynchronous-execution](https://www.graphql-java.com/documentation/execution#asynchronous-execution).\r\n\r\nIt seems that all the invoketion of @Controller handler method is serial by default. Will spring graphql support asynchronous execution of fetching field (probably similar to [mvc-ann-async](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-async))?\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071112362', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316#issuecomment-1071112362', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'id': 1071112362, 'node_id': 'IC_kwDOEMJUCs4_1-Cq', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T17:17:22Z', 'updated_at': '2022-03-17T17:17:22Z', 'author_association': 'CONTRIBUTOR', 'body': ""@dugenkui03 think we could consider some simple steps to assist a data fetching controller method to become asynchronous. \r\n\r\nFor example considering that GraphQL Java expects `CompletableFuture`, we could turn a `Supplier<?>` return value from a controller method into `CompletableFuture.supplyAsync(supplier, this.executor)` along with some executor, configured centrally. \r\n\r\nHowever, I would draw the line there. For anything more, e.g. want a timeout, or a different executor, just use `CompletableFuture` from the controller. Similarly if you are integrating with some asynchronous API and need something more like like Spring MVC's `DeferredResult`, I would say just use `CompletableFuture` agian.\r\n\r\nWhat do you think?\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071112362/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20803114856,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T16:37:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'id': 1164750004, 'node_id': 'PR_kwDOEMJUCs40Nq1C', 'number': 322, 'title': 'Replace argument type with `@Source` to determine source/parent', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-10T04:50:07Z', 'updated_at': '2022-03-17T16:37:29Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/322.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/322.patch', 'merged_at': None}, 'body': ""Annotation way will be more precise. \r\n\r\n## leniency model: argument type\r\nI think argumentType way may lead mismatch. There will be various parameter types when spring-graphql support custom `HandlerMethodArgumentResolver`.\r\n\r\nThis way also require strict restriction of code: `SourceMethodArgumentResolver` must be put after other `HandlerMethodArgumentResolver`.\r\n\r\n## strictness model: `@Source`\r\n\r\nDevelopers will easily know whether argument is source/parent by `@Source`, they don't have to look at the implementations of `HandlerMethodArgumentResolver` to determine which one supports the parameter.\r\n\r\nAnd there is no need to take `SourceMethodArgumentResolver` as fallback.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071062100', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322#issuecomment-1071062100', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'id': 1071062100, 'node_id': 'IC_kwDOEMJUCs4_1xxU', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T16:37:29Z', 'updated_at': '2022-03-17T16:37:29Z', 'author_association': 'CONTRIBUTOR', 'body': ""To address specifically the arguments brought up:\r\n\r\n> There will be various parameter types when spring-graphql support custom HandlerMethodArgumentResolver.\r\n\r\nI don't see how it could lead to a mismatch since custom arguments are before the `SourceMethodArgumentResolver`.\r\n\r\n> This way also require strict restriction of code: SourceMethodArgumentResolver must be put after other HandlerMethodArgumentResolver.\r\n\r\nThis is an internal implementation detail, and there is no reason to expose it."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071062100/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20803046392,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T16:34:26Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'id': 1164750004, 'node_id': 'PR_kwDOEMJUCs40Nq1C', 'number': 322, 'title': 'Replace argument type with `@Source` to determine source/parent', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 0, 'created_at': '2022-03-10T04:50:07Z', 'updated_at': '2022-03-17T16:34:25Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/322', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/322.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/322.patch', 'merged_at': None}, 'body': ""Annotation way will be more precise. \r\n\r\n## leniency model: argument type\r\nI think argumentType way may lead mismatch. There will be various parameter types when spring-graphql support custom `HandlerMethodArgumentResolver`.\r\n\r\nThis way also require strict restriction of code: `SourceMethodArgumentResolver` must be put after other `HandlerMethodArgumentResolver`.\r\n\r\n## strictness model: `@Source`\r\n\r\nDevelopers will easily know whether argument is source/parent by `@Source`, they don't have to look at the implementations of `HandlerMethodArgumentResolver` to determine which one supports the parameter.\r\n\r\nAnd there is no need to take `SourceMethodArgumentResolver` as fallback.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071058533', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/322#issuecomment-1071058533', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/322', 'id': 1071058533, 'node_id': 'IC_kwDOEMJUCs4_1w5l', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T16:34:25Z', 'updated_at': '2022-03-17T16:34:25Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for the proposal, and I admit there is something appealing about having an `@Source` annotation that explicitly marks the method parameter, and it's something we did consider. \r\n\r\nThe pause that I have is that the annotation does not serve any real purpose. We can work it out just fine without it, without any ambiguity that we've come across so far. In terms of developers wondering, well if someone new wants to find out how to get a hold of the parent, the answer is just declare it. I think that's as simple as it gets and you don't need to know more. \r\n\r\nFrom the opposite perspective as well, if we had `@Source`, it would be legitimate to ask, should it be required and if so why? I don't think there is a good reason to require it, so that leads back again to having some controller methods with it and some without it. This reminds of `@ModelAttribute` in Spring MVC where you could have it or not, but the point there is that when you do add it, it can serve a purpose. There would be no such case here.\r\n\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071058533/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20802775170,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T16:22:15Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232', 'id': 1086437038, 'node_id': 'I_kwDOEMJUCs5Awbau', 'number': 232, 'title': '@BatchMapping support @Argument', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2021-12-22T04:24:26Z', 'updated_at': '2022-03-17T16:22:15Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""I think that both source and argument are necessary. It will great that `@BatchingMapping` support `@Argument`.\r\n\r\nSchema like blow. 'like' means whether the visitor like this book or author, and `Book.author` bind DataLoader.\r\n```graphql\r\n\r\ntype Query{\r\n      books(visitorId:Int, bookIds:[Int]):[Book]\r\n}\r\n\r\ntype Book{\r\n    id: Int\r\n    like: Boolean\r\n    authorId: Int\r\n    author(visitorId:Int): Author\r\n}\r\n\r\ntype Author{\r\n    id: Int\r\n    name: String\r\n    like: Boolean\r\n}\r\n```\r\n\r\nquery like blow:\r\n```graphql\r\nquery ($visitorId: Int){\r\n   books(visitorId:$visitorId, bookIds:[1,2,3]){\r\n      authorId\r\n      # need visitorId\r\n       author(visitorId:$visitorId){\r\n             id\r\n       }\r\n  }\r\n}\r\n```\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071044083', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232#issuecomment-1071044083', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'id': 1071044083, 'node_id': 'IC_kwDOEMJUCs4_1tXz', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T16:22:15Z', 'updated_at': '2022-03-17T16:22:15Z', 'author_association': 'CONTRIBUTOR', 'body': ""@dugenkui03 I closed the issue too soon perhaps, because I don't think the proposal is feasible. I see now that you had something concrete in mind for the implementation, so let me address it.\r\n\r\nYour want to pass `DataFetchingEnvironment` through the per-key context, i.e. via `DataLoader#load(K key, Object keyContext)`. That can work sometimes but not generally because `DataLoader` caches by key, and if there is anything that influences the result, other than the key, it becomes an issue. \r\n\r\nArguments are one of those things. We could make them available to `BatchMapping` methods, but it would be possible to use that to load a different entity, e.g. partially populated, etc.  Once we pass arguments through, we might as well allow anything from `DataFetchingEnvironment` but there is a reason why that's not available in GraphQL Java.\r\n\r\n`@BatchMapping` methods are meant to provide a simple shortcut to eliminate boilerplate for the most common case. If it doesn't do what you need, you don't have to use it and it's still quite straight forward:\r\n```java\r\n@Controller\r\npublic class BookController {\r\n\r\n    public BookController(BatchLoaderRegistry registry) {\r\n        registry.forTypePair(Long.class, Author.class).registerMappedBatchLoader((authorIds, env) -> {\r\n            // return Map<Long, Author>\r\n        });\r\n    }\r\n\r\n    @SchemaMapping\r\n    public CompletableFuture<Author> author(Book book, DataLoader<Long, Author> loader) {\r\n        return loader.load(book.getAuthorId());\r\n    }\r\n\r\n}\r\n```\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071044083/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20802169092,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-17T15:56:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232', 'id': 1086437038, 'node_id': 'I_kwDOEMJUCs5Awbau', 'number': 232, 'title': '@BatchMapping support @Argument', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2021-12-22T04:24:26Z', 'updated_at': '2022-03-17T15:56:03Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""I think that both source and argument are necessary. It will great that `@BatchingMapping` support `@Argument`.\r\n\r\nSchema like blow. 'like' means whether the visitor like this book or author, and `Book.author` bind DataLoader.\r\n```graphql\r\n\r\ntype Query{\r\n      books(visitorId:Int, bookIds:[Int]):[Book]\r\n}\r\n\r\ntype Book{\r\n    id: Int\r\n    like: Boolean\r\n    authorId: Int\r\n    author(visitorId:Int): Author\r\n}\r\n\r\ntype Author{\r\n    id: Int\r\n    name: String\r\n    like: Boolean\r\n}\r\n```\r\n\r\nquery like blow:\r\n```graphql\r\nquery ($visitorId: Int){\r\n   books(visitorId:$visitorId, bookIds:[1,2,3]){\r\n      authorId\r\n      # need visitorId\r\n       author(visitorId:$visitorId){\r\n             id\r\n       }\r\n  }\r\n}\r\n```\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071010347', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232#issuecomment-1071010347', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'id': 1071010347, 'node_id': 'IC_kwDOEMJUCs4_1lIr', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-17T15:56:02Z', 'updated_at': '2022-03-17T15:56:02Z', 'author_association': 'CONTRIBUTOR', 'body': 'Re-opening to discuss further.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1071010347/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20802169226,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-17T15:56:03Z,"{'action': 'reopened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/232', 'id': 1086437038, 'node_id': 'I_kwDOEMJUCs5Awbau', 'number': 232, 'title': '@BatchMapping support @Argument', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2021-12-22T04:24:26Z', 'updated_at': '2022-03-17T15:56:03Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""I think that both source and argument are necessary. It will great that `@BatchingMapping` support `@Argument`.\r\n\r\nSchema like blow. 'like' means whether the visitor like this book or author, and `Book.author` bind DataLoader.\r\n```graphql\r\n\r\ntype Query{\r\n      books(visitorId:Int, bookIds:[Int]):[Book]\r\n}\r\n\r\ntype Book{\r\n    id: Int\r\n    like: Boolean\r\n    authorId: Int\r\n    author(visitorId:Int): Author\r\n}\r\n\r\ntype Author{\r\n    id: Int\r\n    name: String\r\n    like: Boolean\r\n}\r\n```\r\n\r\nquery like blow:\r\n```graphql\r\nquery ($visitorId: Int){\r\n   books(visitorId:$visitorId, bookIds:[1,2,3]){\r\n      authorId\r\n      # need visitorId\r\n       author(visitorId:$visitorId){\r\n             id\r\n       }\r\n  }\r\n}\r\n```\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/232/timeline', 'performed_via_github_app': None}}",reopened,Java
20800646538,PushEvent,spring-projects/spring-graphql,0.0,2022-03-17T13:37:23Z,"{'push_id': 9378197549, 'size': 2, 'distinct_size': 2, 'ref': 'refs/heads/main', 'head': '9102bdbc770cfedba652d668c09799135fa9bd2d', 'before': 'f28d3dc2a0b35d5826741f78dc1a65a9bdad4c0e', 'commits': [{'sha': '5e95fcf60a3f76fe2309642078bbe6805ce08c81', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine getError(s) methods on ResponseField\n\ngetError now returns either the error at the field or on a parent\nfield, which provides a reliable answer for why a field failed even\nfor a field whose path is below where the error occurred.\n\ngetErrors likewise now also includes errors above. There is still no\nneed for special logic to get only errors below since where there is\na field value, errors are below anyway.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/5e95fcf60a3f76fe2309642078bbe6805ce08c81'}, {'sha': '9102bdbc770cfedba652d668c09799135fa9bd2d', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Replace isValid with hasValue in ResponseField\n\nhasValue is more meaningful because it means valid and with some value\nthat could be decoded, which in turn allows removing Nullable from\ntoEntity/List.\n\nOr if there is no value, getError() can be used to differentiate\nbetween a failed field vs a null field declared optional.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/9102bdbc770cfedba652d668c09799135fa9bd2d'}]}",,Java
20788069801,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T21:19:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312', 'id': 1155370282, 'node_id': 'I_kwDOEMJUCs5E3Y0q', 'number': 312, 'title': 'Define a schema using java instead of SDL', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 3, 'created_at': '2022-03-01T13:56:46Z', 'updated_at': '2022-03-16T21:19:29Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We would like to be able to define the schema programmatically instead of through an SDL file.\r\nIn our first attempt we have used a GraphQlSourceBuilderCustomizer and used the schemaFactory method, but we noticed that the DefaultTypeResolver is not registered correctly and it is necessary to have an SDL file even if it is empty.\r\n\r\nCould you consider adding a method to the DefaultGraphQlSourceBuilder that would allow to directly insert a GraphQLSchema?\r\n\r\nMany thanks & regards,\r\nRubén', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069645555', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312#issuecomment-1069645555', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'id': 1069645555, 'node_id': 'IC_kwDOEMJUCs4_wX7z', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T21:19:29Z', 'updated_at': '2022-03-16T21:19:29Z', 'author_association': 'CONTRIBUTOR', 'body': ""Thanks for sharing the outcome. For the `RuntimeWiringConfigurer`, I'm wondering if it would work to create your own `RuntimeWiring.newRuntimeWiring()` then use `AnnotatedControllerConfigurer` to accumulate the registrations, and in the end build and get the `CodeRegistry` from `RuntimeWiring`? \r\n\r\nOverall I'm wondering if we could open things up a bit with the `GraphQlSource.Builder` implementation and perhaps have a base class that's agnostic to SDL vs programmatic schema creation.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069645555/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20787815648,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T21:01:54Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/328', 'id': 1168795895, 'node_id': 'I_kwDOEMJUCs5Fqmj3', 'number': 328, 'title': 'Save and reuse WebClient response', 'user': {'login': 'ciscoo', 'id': 6423628, 'node_id': 'MDQ6VXNlcjY0MjM2Mjg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/6423628?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ciscoo', 'html_url': 'https://github.com/ciscoo', 'followers_url': 'https://api.github.com/users/ciscoo/followers', 'following_url': 'https://api.github.com/users/ciscoo/following{/other_user}', 'gists_url': 'https://api.github.com/users/ciscoo/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ciscoo/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ciscoo/subscriptions', 'organizations_url': 'https://api.github.com/users/ciscoo/orgs', 'repos_url': 'https://api.github.com/users/ciscoo/repos', 'events_url': 'https://api.github.com/users/ciscoo/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ciscoo/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-03-14T19:11:29Z', 'updated_at': '2022-03-16T21:01:54Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'My company has various of services that provides customer data. I\'m trying to build  POC to showcase what is possible to maybe solve our own internal issues.\r\n\r\nThere is no single ""view"" of the data and instead we must retrieve the data we need from the various services. Using Reactor, I thought I would be able to save the response from a request, and reuse the response if a different field is queried from that same response.\r\n\r\nFor example, given a todo, let\'s say the `description` and `completed` come from the same API. I want to be able to save the response in the Reactor context and reuse if more fields are required.\r\n\r\n```java\r\n@SchemaMapping(typeName = ""Todo"")\r\n@Controller\r\npublic class TodoController {\r\n\r\n    private static final ParameterizedTypeReference<Map<String, Object>> MAP_TYPE = new ParameterizedTypeReference<>() {};\r\n\r\n    private static final String RESPONSE_ATTR = TodoController.class.getName() + "".todoResponse"";\r\n\r\n    private final WebClient todosWebClient;\r\n\r\n    public TodoController(WebClient todosWebClient) {\r\n        this.todosWebClient = todosWebClient;\r\n    }\r\n\r\n    @SchemaMapping(field = ""title"")\r\n    public Mono<String> resolveTitle(Todo todo) {\r\n        return Mono.deferContextual(contextView -> {\r\n            Map<String, Object> cached = contextView.getOrDefault(RESPONSE_ATTR, null);\r\n            if (cached != null) {\r\n                return Mono.just(cached.get(""title"").toString());\r\n            }\r\n            return this.todosWebClient.get().uri(""/todos/{id}"", todo.getId())\r\n                    .retrieve()\r\n                    .bodyToMono(MAP_TYPE)\r\n                    .flatMap(res -> Mono.just(res).contextWrite(context -> context.put(RESPONSE_ATTR, res)))\r\n                    .flatMap(res -> Mono.just(res.get(""title"").toString()));\r\n        });\r\n    }\r\n\r\n    @SchemaMapping(field = ""completed"")\r\n    public Mono<Boolean> resolveCompleted(Todo todo) {\r\n        return Mono.deferContextual(contextView -> {\r\n            Map<String, Object> cached = contextView.getOrDefault(RESPONSE_ATTR, null);\r\n            if (cached != null) {\r\n                return Mono.just(Boolean.parseBoolean(cached.get(""completed"").toString()));\r\n            }\r\n            return this.todosWebClient.get().uri(""/todos/{id}"", todo.getId())\r\n                    .retrieve()\r\n                    .bodyToMono(MAP_TYPE)\r\n                    .flatMap(res -> Mono.just(res).contextWrite(context -> context.put(RESPONSE_ATTR, res)))\r\n                    .flatMap(res -> Mono.just(Boolean.parseBoolean(res.get(""completed"").toString())));\r\n        });\r\n    }\r\n\r\n}\r\n```\r\n\r\nHowever, seems this approach does not work since the logs show (2) requests being sent:\r\n\r\n```logs\r\n2022-03-14 14:02:36.473 DEBUG 28960 --- [ttp@13e9f2e2-76] o.s.w.r.f.client.ExchangeFunctions       : [7f28f96f] HTTP GET https://jsonplaceholder.typicode.com/todos/2\r\n2022-03-14 14:02:36.627 DEBUG 28960 --- [ttp@13e9f2e2-76] o.s.w.r.f.client.ExchangeFunctions       : [4301696d] HTTP GET https://jsonplaceholder.typicode.com/todos/2\r\n2022-03-14 14:02:36.948 DEBUG 28960 --- [or-http-epoll-3] o.s.w.r.f.client.ExchangeFunctions       : [4301696d] [500c0d95-1] Response 200 OK\r\n2022-03-14 14:02:36.948 DEBUG 28960 --- [or-http-epoll-2] o.s.w.r.f.client.ExchangeFunctions       : [7f28f96f] [d12daeed-1] Response 200 OK\r\n```\r\n\r\nI have uploaded a sample project of the above approach: https://github.com/ciscoo/cache-graphql\r\n\r\n----\r\n\r\nSide note, I\'m trying to build a single view into our data. For example, the `todoDetails` comes from a service which I want to ""unwrap"" if that makes sense.\r\n\r\n```json\r\n{\r\n    ""id"": 1,\r\n    ""todoDetails"": {\r\n        ""id"": 1,\r\n        ""completed"": false\r\n    }\r\n}\r\n```\r\n\r\nto\r\n\r\n\r\n```json\r\n{\r\n    ""id"": 1,\r\n    ""completed"": false\r\n}\r\n```', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069628870', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/328#issuecomment-1069628870', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/328', 'id': 1069628870, 'node_id': 'IC_kwDOEMJUCs4_wT3G', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T21:01:54Z', 'updated_at': '2022-03-16T21:01:54Z', 'author_association': 'CONTRIBUTOR', 'body': 'Wouldn\'t this be just one controller method for the ""customer"" query?\r\n```java\r\n@Controller\r\npublic class CustomController {\r\n\r\n    @QueryMapping\r\n    public Customer customer(@Argument CustomerIdentifierInput input) {\r\n        // call API X...\r\n        return customer;\r\n    }\r\n\r\n```\r\nFor the Reactor context, the GraphQL Java engine which invokes each `DataFetcher` (or controller method in this case) isn\'t aware of Reactor. Currently we decorate each `DataFetcher` and propagate to it Reactor context from the web layer. Apart from that they are not in a single Reactor chain and Reactor context from one cannot be seen by others. This is something we might try to improve in the future, but for now if you want pass something across data fetchers, just use `GraphQLContext`.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069628870/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20787277442,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:27:02Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/327', 'id': 1168283823, 'node_id': 'PR_kwDOEMJUCs40ZBTQ', 'number': 327, 'title': 'Fix implementation of `containsExactly`', 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 26, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-16T20:21:53Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 3, 'created_at': '2022-03-14T12:08:02Z', 'updated_at': '2022-03-16T20:27:01Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': False, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/327', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/327', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/327.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/327.patch', 'merged_at': None}, 'body': ""The implementation was the same for `contains` and `containsExactly`, but `containsExactly` should fail when the number items doesn't match the size of the expected items list."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069592055', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/327#issuecomment-1069592055', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/327', 'id': 1069592055, 'node_id': 'IC_kwDOEMJUCs4_wK33', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T20:27:01Z', 'updated_at': '2022-03-16T20:27:01Z', 'author_association': 'CONTRIBUTOR', 'body': 'The terminology is aligned with AssertJ and there `containsExactly` is ""contains exactly the given values and nothing else, **in order**"". It would make sense to align that I think.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069592055/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20787155385,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:19:11Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/326', 'id': 1168138011, 'node_id': 'I_kwDOEMJUCs5FoF8b', 'number': 326, 'title': 'is WebGraphQlTester valid as productive WebGrapghClient general purpose?', 'user': {'login': 'cforce', 'id': 393286, 'node_id': 'MDQ6VXNlcjM5MzI4Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/393286?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/cforce', 'html_url': 'https://github.com/cforce', 'followers_url': 'https://api.github.com/users/cforce/followers', 'following_url': 'https://api.github.com/users/cforce/following{/other_user}', 'gists_url': 'https://api.github.com/users/cforce/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/cforce/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/cforce/subscriptions', 'organizations_url': 'https://api.github.com/users/cforce/orgs', 'repos_url': 'https://api.github.com/users/cforce/repos', 'events_url': 'https://api.github.com/users/cforce/events{/privacy}', 'received_events_url': 'https://api.github.com/users/cforce/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973769, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzY5', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20invalid', 'name': 'status: invalid', 'color': 'fef2c0', 'default': False, 'description': ""An issue that we don't feel is valid""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-14T09:57:46Z', 'updated_at': '2022-03-16T20:19:11Z', 'closed_at': '2022-03-14T13:21:56Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'As we intended to have setup graphql ws connection for java services, is it proposed to use WebGraphQlTester  as client to create client requests? What other option do we have to have support of graphh types/features on client side without implementing them again?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069584818', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/326#issuecomment-1069584818', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/326', 'id': 1069584818, 'node_id': 'IC_kwDOEMJUCs4_wJGy', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T20:19:11Z', 'updated_at': '2022-03-16T20:19:11Z', 'author_association': 'CONTRIBUTOR', 'body': '@cforce there is now [documentation](https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#client) you can check out.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069584818/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20787129290,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:17:30Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/10', 'id': 721149695, 'node_id': 'MDU6SXNzdWU3MjExNDk2OTU=', 'number': 10, 'title': 'Add a GraphQLClient', 'user': {'login': 'hantsy', 'id': 854520, 'node_id': 'MDQ6VXNlcjg1NDUyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/854520?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hantsy', 'html_url': 'https://github.com/hantsy', 'followers_url': 'https://api.github.com/users/hantsy/followers', 'following_url': 'https://api.github.com/users/hantsy/following{/other_user}', 'gists_url': 'https://api.github.com/users/hantsy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hantsy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hantsy/subscriptions', 'organizations_url': 'https://api.github.com/users/hantsy/orgs', 'repos_url': 'https://api.github.com/users/hantsy/repos', 'events_url': 'https://api.github.com/users/hantsy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hantsy/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 26, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-16T20:17:30Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2020-10-14T05:30:48Z', 'updated_at': '2022-03-16T20:17:30Z', 'closed_at': '2022-03-16T20:17:29Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Like RestTemplate, WebClient, WebSocketClient, RSocketRequestor, add a Client to simplify the Client/Server communications using GraphQL-based APIs.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/reactions', 'total_count': 21, '+1': 20, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/timeline', 'performed_via_github_app': None}}",closed,Java
20787129216,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:17:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/10', 'id': 721149695, 'node_id': 'MDU6SXNzdWU3MjExNDk2OTU=', 'number': 10, 'title': 'Add a GraphQLClient', 'user': {'login': 'hantsy', 'id': 854520, 'node_id': 'MDQ6VXNlcjg1NDUyMA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/854520?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/hantsy', 'html_url': 'https://github.com/hantsy', 'followers_url': 'https://api.github.com/users/hantsy/followers', 'following_url': 'https://api.github.com/users/hantsy/following{/other_user}', 'gists_url': 'https://api.github.com/users/hantsy/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/hantsy/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/hantsy/subscriptions', 'organizations_url': 'https://api.github.com/users/hantsy/orgs', 'repos_url': 'https://api.github.com/users/hantsy/repos', 'events_url': 'https://api.github.com/users/hantsy/events{/privacy}', 'received_events_url': 'https://api.github.com/users/hantsy/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 3, 'closed_issues': 26, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-16T20:17:30Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2020-10-14T05:30:48Z', 'updated_at': '2022-03-16T20:17:30Z', 'closed_at': '2022-03-16T20:17:29Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Like RestTemplate, WebClient, WebSocketClient, RSocketRequestor, add a Client to simplify the Client/Server communications using GraphQL-based APIs.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/reactions', 'total_count': 21, '+1': 20, '-1': 0, 'laugh': 0, 'hooray': 1, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069583330', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/10#issuecomment-1069583330', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/10', 'id': 1069583330, 'node_id': 'IC_kwDOEMJUCs4_wIvi', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T20:17:29Z', 'updated_at': '2022-03-16T20:17:29Z', 'author_association': 'CONTRIBUTOR', 'body': 'There are some follow-up tasks like #332 that remain but the `GraphQlClient` work is now largely complete, the Boot starter has been updated, and [documentation](https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#client) is available too. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069583330/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20787038612,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:11:38Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/332', 'id': 1171499546, 'node_id': 'I_kwDOEMJUCs5F06oa', 'number': 332, 'title': 'Add client-side interception on GraphQlClient', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 25, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-16T20:11:38Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T20:11:38Z', 'updated_at': '2022-03-16T20:11:38Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Similar to the `WebInterceptor` chain on the server side but for use with `GraphQlClient`. This would also include a WebSocket specific interceptor for WebSocket specific needs (`connection_init` and `connection_ack` payload, disconnects, etc).', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/332/timeline', 'performed_via_github_app': None}}",opened,Java
20786941774,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-16T20:05:30Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/329', 'id': 1169361381, 'node_id': 'I_kwDOEMJUCs5Fswnl', 'number': 329, 'title': ""Logo isn't readable on a dark background"", 'user': {'login': 'koenpunt', 'id': 351038, 'node_id': 'MDQ6VXNlcjM1MTAzOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/351038?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/koenpunt', 'html_url': 'https://github.com/koenpunt', 'followers_url': 'https://api.github.com/users/koenpunt/followers', 'following_url': 'https://api.github.com/users/koenpunt/following{/other_user}', 'gists_url': 'https://api.github.com/users/koenpunt/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/koenpunt/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/koenpunt/subscriptions', 'organizations_url': 'https://api.github.com/users/koenpunt/orgs', 'repos_url': 'https://api.github.com/users/koenpunt/repos', 'events_url': 'https://api.github.com/users/koenpunt/events{/privacy}', 'received_events_url': 'https://api.github.com/users/koenpunt/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-15T08:48:51Z', 'updated_at': '2022-03-16T20:05:29Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'When using the dimmed dark theme for GitHub, the text in the logo isn\'t very readable:\r\n\r\n![image](https://user-images.githubusercontent.com/351038/158340138-f44b0905-aa06-4346-b59c-35b93bd0ba75.png)\r\n\r\nAnd with the dark theme it isn\'t readable at all:\r\n\r\n<img width=""737"" alt=""image"" src=""https://user-images.githubusercontent.com/351038/158340535-162a2127-3623-4981-9a8b-19978758a20d.png"">\r\n\r\nMaybe a white outline on the text could help?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069565310', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/329#issuecomment-1069565310', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/329', 'id': 1069565310, 'node_id': 'IC_kwDOEMJUCs4_wEV-', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T20:05:29Z', 'updated_at': '2022-03-16T20:05:29Z', 'author_association': 'CONTRIBUTOR', 'body': ""Not sure if anything can be done, but I'm checking on it. "", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1069565310/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20785595302,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-16T18:42:01Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28187', 'id': 1171164356, 'node_id': 'I_kwDOABGHUc5FzozE', 'number': 28187, 'title': 'Add types to represent RFC 7807 problem details and exceptions', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/284', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284/labels', 'id': 7472480, 'node_id': 'MI_kwDOABGHUc4AcgVg', 'number': 284, 'title': '6.0.0-M3', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 1, 'closed_issues': 45, 'state': 'open', 'created_at': '2021-12-09T12:29:03Z', 'updated_at': '2022-03-16T18:42:00Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-16T15:16:19Z', 'updated_at': '2022-03-16T18:42:00Z', 'closed_at': '2022-03-16T18:42:00Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""The goal for this issue is to add a representation for an RFC 7808 problem detail, and integrate it into Spring MVC and Spring WebFlux error response handling.\r\n\r\nOn the WebFlux side we have the `ResponseStatusException` hierarchy which contains HTTP status, a reason, and headers. We can now add a `ProblemDetail` as the body. This provides full encapsulation of all error response details within the exception.\r\n\r\nOn the Spring MVC side, we have the `DefaultHandlerExceptionResolver` which maps exceptions to HTTP status and headers, so exceptions do not themselves contain that information. Furthermore the exception hierarchy does not have a single base class where this can be added. We can add an interface to represent an error response, e.g. `ErrorResponse`, similar to the information exposed from `ResponseStatusException` on the WebFlux side, and then have all Spring MVC exceptions implement it in order to expose it in which case `DefaultHandlerExceptionResolver` no longer needs mapping logic.\r\n\r\n`ResponseEntityExceptionHandler` is a base class for a controller advice that uses an `@ExceptionHandler` method that can render error responses with details but it's up to the application to decided on the format. We can now fill in the blank and use `ProblemDetail` for exceptions that expose it. A similar class does not exist for WebFlux but can be added.\r\n\r\n`ResponseEntity` handling for both Spring MVC and WebFlux should support `ProblemDetail` and `ErrorResponse` as return types, automatically setting the response status, headers, and body accordingly. This is also an opportunity to set the `instance` field of `ProblemDetail` to the request path as a fallback if `instance` hasn't been set.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/timeline', 'performed_via_github_app': None}}",closed,Java
20785594352,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-16T18:41:57Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28187', 'id': 1171164356, 'node_id': 'I_kwDOABGHUc5FzozE', 'number': 28187, 'title': 'Add types to represent RFC 7807 problem details and exceptions', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/284', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284/labels', 'id': 7472480, 'node_id': 'MI_kwDOABGHUc4AcgVg', 'number': 284, 'title': '6.0.0-M3', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 2, 'closed_issues': 44, 'state': 'open', 'created_at': '2021-12-09T12:29:03Z', 'updated_at': '2022-03-16T18:40:10Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-16T15:16:19Z', 'updated_at': '2022-03-16T18:41:57Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""The goal for this issue is to add a representation for an RFC 7808 problem detail, and integrate it into Spring MVC and Spring WebFlux error response handling.\r\n\r\nOn the WebFlux side we have the `ResponseStatusException` hierarchy which contains HTTP status, a reason, and headers. We can now add a `ProblemDetail` as the body. This provides full encapsulation of all error response details within the exception.\r\n\r\nOn the Spring MVC side, we have the `DefaultHandlerExceptionResolver` which maps exceptions to HTTP status and headers, so exceptions do not themselves contain that information. Furthermore the exception hierarchy does not have a single base class where this can be added. We can add an interface to represent an error response, e.g. `ErrorResponse`, similar to the information exposed from `ResponseStatusException` on the WebFlux side, and then have all Spring MVC exceptions implement it in order to expose it in which case `DefaultHandlerExceptionResolver` no longer needs mapping logic.\r\n\r\n`ResponseEntityExceptionHandler` is a base class for a controller advice that uses an `@ExceptionHandler` method that can render error responses with details but it's up to the application to decided on the format. We can now fill in the blank and use `ProblemDetail` for exceptions that expose it. A similar class does not exist for WebFlux but can be added.\r\n\r\n`ResponseEntity` handling for both Spring MVC and WebFlux should support `ProblemDetail` and `ErrorResponse` as return types, automatically setting the response status, headers, and body accordingly. This is also an opportunity to set the `instance` field of `ProblemDetail` to the request path as a fallback if `instance` hasn't been set.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1069453131', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28187#issuecomment-1069453131', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187', 'id': 1069453131, 'node_id': 'IC_kwDOABGHUc4_vo9L', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-16T18:41:57Z', 'updated_at': '2022-03-16T18:41:57Z', 'author_association': 'CONTRIBUTOR', 'body': 'See commits linked the umbrella issue #27052.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1069453131/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20785505965,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-16T18:36:33Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28190', 'id': 1171412969, 'node_id': 'I_kwDOABGHUc5F0lfp', 'number': 28190, 'title': 'Enable access to an RFC 7807 ProblemDetail formatted error response from the client side', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/287', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287/labels', 'id': 7605225, 'node_id': 'MI_kwDOABGHUc4AdAvp', 'number': 287, 'title': '6.0.0-M4', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 27, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-24T17:15:01Z', 'updated_at': '2022-03-16T18:36:33Z', 'due_on': '2022-05-11T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T18:36:33Z', 'updated_at': '2022-03-16T18:36:33Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently `WebClientResponseException` exposes the body as a `byte[]` or `String` and so does `RestClientResponseException`. It would be useful if the also exposed decoding to `ProblemDetail` for an RFC 7807 formatted response. The exception types could be given a `Callable<ProblemDetail>` or similar to do the decoding if necessary, or perhaps it could be done by default for such responses and passed in through a separate constructor argument.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28190/timeline', 'performed_via_github_app': None}}",opened,Java
20785230700,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-16T18:20:16Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28189', 'id': 1171393234, 'node_id': 'I_kwDOABGHUc5F0grS', 'number': 28189, 'title': 'WebMvc and WebFlux config for content negotiation and encoding of error responses', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/287', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/287/labels', 'id': 7605225, 'node_id': 'MI_kwDOABGHUc4AdAvp', 'number': 287, 'title': '6.0.0-M4', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 26, 'closed_issues': 0, 'state': 'open', 'created_at': '2022-01-24T17:15:01Z', 'updated_at': '2022-03-16T18:20:15Z', 'due_on': '2022-05-11T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T18:20:15Z', 'updated_at': '2022-03-16T18:20:15Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Once  #28187 provides `ProblemDetail` along with the `ErrorResponse` hierarchy of exceptions that encapsulate HTTP status, headers, and body, to support RFC 7807, it is also necessary to improve content negotiation and formatting specifically for error responses.\r\n\r\nIn Spring MVC it is possible to configure [content type resolution](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-config-content-negotiation) and [message conversion](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-config-message-converters) and likewise in WebFlux to configure [content type resolution](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-config-content-negotiation) and [message codecs](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-config-message-codecs), but those apply to both `@RequestMapping` and `@ExceptionHandler` methods. \r\n\r\nError handling however has a different perspective. The range of supported media types might be more limited and different, e.g. only `application/problem+json`. The resolution of the request content type might also be done differently, .e.g. defaulting to `application/problem+json` if not explicitly requested, or perhaps even enforcing it.\r\n\r\nSuch a mechanism is also a convenient place for other configuration related to how `ProblemDetail` should be rendered..\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28189/timeline', 'performed_via_github_app': None}}",opened,Java
20781658314,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-16T15:16:20Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28187', 'id': 1171164356, 'node_id': 'I_kwDOABGHUc5FzozE', 'number': 28187, 'title': 'Add types to represent RFC 7807 problem details and exceptions', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/284', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/284/labels', 'id': 7472480, 'node_id': 'MI_kwDOABGHUc4AcgVg', 'number': 284, 'title': '6.0.0-M3', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 12, 'closed_issues': 41, 'state': 'open', 'created_at': '2021-12-09T12:29:03Z', 'updated_at': '2022-03-16T15:16:19Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-16T15:16:19Z', 'updated_at': '2022-03-16T15:16:20Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""The goal for this issue is to add a representation for an RFC 7808 problem detail, and integrate it into Spring MVC and Spring WebFlux error response handling.\r\n\r\nOn the WebFlux side we have the `ResponseStatusException` hierarchy which contains HTTP status, a reason, and headers. We can now add a `ProblemDetail` as the body. This provides full encapsulation of all error response details within the exception.\r\n\r\nOn the Spring MVC side, we have the `DefaultHandlerExceptionResolver` which maps exceptions to HTTP status and headers, so exceptions do not themselves contain that information. Furthermore the exception hierarchy does not have a single base class where this can be added. We can add an interface to represent an error response, e.g. `ErrorResponse`, similar to the information exposed from `ResponseStatusException` on the WebFlux side, and then have all Spring MVC exceptions implement it in order to expose it in which case `DefaultHandlerExceptionResolver` no longer needs mapping logic.\r\n\r\n`ResponseEntityExceptionHandler` is a base class for a controller advice that uses an `@ExceptionHandler` method that can render error responses with details but it's up to the application to decided on the format. We can now fill in the blank and use `ProblemDetail` for exceptions that expose it. A similar class does not exist for WebFlux but can be added.\r\n\r\n`ResponseEntity` handling for both Spring MVC and WebFlux should support `ProblemDetail` and `ErrorResponse` as return types, automatically setting the response status, headers, and body accordingly. This is also an opportunity to set the `instance` field of `ProblemDetail` to the request path as a fallback if `instance` hasn't been set.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28187/timeline', 'performed_via_github_app': None}}",opened,Java
20775403769,PushEvent,spring-projects/spring-graphql,0.0,2022-03-16T10:00:46Z,"{'push_id': 9365732920, 'size': 1, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': '4d115c01cc71a683169d5551e8ebda9374cd5e26', 'before': '0967a6e7b75ca6401bd7047fc13e7222241b0f5b', 'commits': [{'sha': '4d115c01cc71a683169d5551e8ebda9374cd5e26', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Upgrade dependencies\n\nGraphQL Java 18.0\nReactor 2020.0.17\nSpring Framework, Spring Data, Spring Security snapshots', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/4d115c01cc71a683169d5551e8ebda9374cd5e26'}]}",,Java
20774856228,IssuesEvent,spring-projects/spring-framework,0.0,2022-03-16T09:32:17Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28045', 'id': 1134692352, 'node_id': 'I_kwDOABGHUc5DoggA', 'number': 28045, 'title': 'MappingJacksonValue and Jackson2CodecSupport#registerObjectMappersForType do not work together', 'user': {'login': 'ghostd', 'id': 1098399, 'node_id': 'MDQ6VXNlcjEwOTgzOTk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1098399?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ghostd', 'html_url': 'https://github.com/ghostd', 'followers_url': 'https://api.github.com/users/ghostd/followers', 'following_url': 'https://api.github.com/users/ghostd/following{/other_user}', 'gists_url': 'https://api.github.com/users/ghostd/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ghostd/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ghostd/subscriptions', 'organizations_url': 'https://api.github.com/users/ghostd/orgs', 'repos_url': 'https://api.github.com/users/ghostd/repos', 'events_url': 'https://api.github.com/users/ghostd/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ghostd/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188511953, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTUz', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/290', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/290', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/290/labels', 'id': 7675334, 'node_id': 'MI_kwDOABGHUc4AdR3G', 'number': 290, 'title': '5.3.17', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 16, 'state': 'open', 'created_at': '2022-02-14T14:20:05Z', 'updated_at': '2022-03-16T09:32:16Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-02-12T22:10:25Z', 'updated_at': '2022-03-16T09:32:16Z', 'closed_at': '2022-03-16T09:32:16Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Spring Framework 5.3.15\r\nSpring Boot 2.6.3\r\n\r\nI set up 2 `ObjectMapper`s (one per api version) : the last version uses the default `ObjectMapper` (created by Spring Boot), and i instantiate an other `ObjectMapper` for the version 1 (there is different settings for the dates, the null fields, and so on).\r\nI also need to build a Jackson Filter at runtime (the filter depends on the roles of the authenticated user), for that i can use the `MappingJacksonValue` wrapper. But when the values are wrapped, Spring will always use the default `ObjectMapper`.\r\n\r\nWe can see here that the `ObjectMapper` is selected before unwraping the value:\r\nhttps://github.com/spring-projects/spring-framework/blob/4eaee1e7381d5f3d8cd6e3ab77c8cfcf7ef2d716/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java#L195-L211\r\n\r\nIs that ""by design"" or is this a missing feature?\r\n\r\n\r\nSample code:\r\n```java\r\n@Configuration\r\npublic class Config {\r\n    private static final MimeType[] EMPTY_MIME_TYPES = {};\r\n\r\n    @Bean\r\n    CodecCustomizer myJacksonCodecCustomizer(ObjectMapper objectMapper) {\r\n        return (configurer) -> {\r\n            CodecConfigurer.DefaultCodecs defaults = configurer.defaultCodecs();\r\n            defaults.jackson2JsonDecoder(new Jackson2JsonDecoder(objectMapper, EMPTY_MIME_TYPES));\r\n\r\n            Jackson2JsonEncoder jackson2JsonEncoder = new Jackson2JsonEncoder(objectMapper, EMPTY_MIME_TYPES);\r\n            // API v2 will use the default object mapper\r\n            jackson2JsonEncoder.registerObjectMappersForType(Controller.HelloV1.class, map -> {\r\n                map.put(MediaType.APPLICATION_JSON, mapperForApiV1());\r\n            });\r\n            defaults.jackson2JsonEncoder(jackson2JsonEncoder);\r\n        };\r\n    }\r\n\r\n    private ObjectMapper mapperForApiV1() {\r\n        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder();\r\n        builder.featuresToEnable(SerializationFeature.WRITE_DATES_WITH_ZONE_ID);\r\n        builder.serializationInclusion(JsonInclude.Include.NON_ABSENT);\r\n        builder.modules(new SimpleModule(), new JavaTimeModule());\r\n        // And other settings\r\n        return builder.build();\r\n    }\r\n}\r\n\r\n@RestController\r\npublic class Controller {\r\n    @GetMapping(""/v1/hello"")\r\n    public Mono<HelloV1> hello1() {\r\n        return Mono.just(new HelloV1(""world"", true, null));\r\n    }\r\n\r\n    @GetMapping(""/v2/hello"")\r\n    public Mono<HelloV2> hello2() {\r\n        return Mono.just(new HelloV2(""world"", true, null));\r\n    }\r\n\r\n    @GetMapping(""/v1/wrapped-hello"")\r\n    public Mono<MappingJacksonValue> wrappedHello1() {\r\n        MappingJacksonValue mappingJacksonValue = new MappingJacksonValue(new HelloV1(""world"", true, null));\r\n        // mappingJacksonValue.setFilters(buildFilterFromRoles());\r\n        return Mono.just(mappingJacksonValue);\r\n    }\r\n\r\n    @GetMapping(""/v2/wrapped-hello"")\r\n    public Mono<MappingJacksonValue> wrappedHello2() {\r\n        MappingJacksonValue mappingJacksonValue = new MappingJacksonValue(new HelloV2(""world"", true, null));\r\n        // mappingJacksonValue.setFilters(buildFilterFromRoles());\r\n        return Mono.just(mappingJacksonValue);\r\n    }\r\n\r\n    private FilterProvider buildFilterFromRoles() {\r\n        // The actual filter is configured according to the roles of the authenticated user\r\n        SimpleBeanPropertyFilter theFilter = SimpleBeanPropertyFilter\r\n                .serializeAllExcept(""canBeMasked"");\r\n        return new SimpleFilterProvider().addFilter(""myFilter"", theFilter);\r\n    }\r\n\r\n    public record HelloV1(String hello, boolean canBeMasked, String nullField) {}\r\n\r\n    public record HelloV2(String hi, boolean canBeMasked, String nullField) {}\r\n}\r\n```\r\n\r\nExpected results:\r\n""/v1/wrapped-hello"" should return the same serialization than ""/v1/hello""', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28045/timeline', 'performed_via_github_app': None}}",closed,Java
20774806786,PushEvent,spring-projects/spring-framework,0.0,2022-03-16T09:29:47Z,"{'push_id': 9365447876, 'size': 5, 'distinct_size': 1, 'ref': 'refs/heads/main', 'head': 'e7b97f5be7de1161b3e953c7bd73acd77704f12c', 'before': '03179aa3976e77be77923b1d2f05ed791174fe4f', 'commits': [{'sha': 'cb39b070882cb765b3c64e7a037ca651cd665300', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing Jackson encoder tests', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/cb39b070882cb765b3c64e7a037ca651cd665300'}, {'sha': '21d61316bef7568069d63b3c41625d6a262bb542', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Unwrap MappingJacksonValue before selecting ObjectMapper\n\nSee gh-28045', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/21d61316bef7568069d63b3c41625d6a262bb542'}, {'sha': 'f1fdc11fabf74ff028f1a23e90d912f8a883e614', 'author': {'email': 'more916@yandex.ru', 'name': 'azzureman'}, 'message': 'Support custom HTTP status in MockClientHttpResponse\n\nSee gh-28105', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/f1fdc11fabf74ff028f1a23e90d912f8a883e614'}, {'sha': 'ee7f60000e918e13f04480bbbe79e4f0ca002c7e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing contribution\n\nCloses gh-28105', 'distinct': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/ee7f60000e918e13f04480bbbe79e4f0ca002c7e'}, {'sha': 'e7b97f5be7de1161b3e953c7bd73acd77704f12c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""Merge branch '5.3.x' into main"", 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/e7b97f5be7de1161b3e953c7bd73acd77704f12c'}]}",,Java
20774806325,PullRequestEvent,spring-projects/spring-framework,0.0,2022-03-16T09:29:46Z,"{'action': 'closed', 'number': 28105, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105', 'id': 863004545, 'node_id': 'PR_kwDOABGHUc4zcGeB', 'html_url': 'https://github.com/spring-projects/spring-framework/pull/28105', 'diff_url': 'https://github.com/spring-projects/spring-framework/pull/28105.diff', 'patch_url': 'https://github.com/spring-projects/spring-framework/pull/28105.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28105', 'number': 28105, 'state': 'closed', 'locked': False, 'title': 'Support custom HTTP status in client-side REST testing support', 'user': {'login': 'AzZureman', 'id': 3420444, 'node_id': 'MDQ6VXNlcjM0MjA0NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3420444?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AzZureman', 'html_url': 'https://github.com/AzZureman', 'followers_url': 'https://api.github.com/users/AzZureman/followers', 'following_url': 'https://api.github.com/users/AzZureman/following{/other_user}', 'gists_url': 'https://api.github.com/users/AzZureman/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AzZureman/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AzZureman/subscriptions', 'organizations_url': 'https://api.github.com/users/AzZureman/orgs', 'repos_url': 'https://api.github.com/users/AzZureman/repos', 'events_url': 'https://api.github.com/users/AzZureman/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AzZureman/received_events', 'type': 'User', 'site_admin': False}, 'body': '## TL; DR;\r\nAdd supporting for custom http statuses in mocked responses\r\nI copied logic from `org.springframework.http.ResponseEntity`\r\n\r\n## Foreword\r\nIn my company we use ""custom not found status"" in our REST API\'s to prevent mixing network error (404 ""not found"" for unknown routes) with rest responses (when entity with given id not found).\r\nThere are good example for rest controller tests.\r\nSuppose we have a rest endpoint for car entity: `GET /car/{id}`. \r\nLet\'s try to write test for case when entity with given id not found. Something like that:\r\n```java\r\nmockMvc.perform(get(""/car/{id}/"", nonExistsId.toString()))\r\n        .andExpect(status().is(404));\r\n```\r\nAnd if our code in rest controller have bug, then test will fail with something like ""500 internal server error""\r\nBut if we also make mistake in test in request\'s path, like that:\r\n```java\r\nmockMvc.perform(get(""/carS/{id}/"", nonExistsId.toString()))\r\n        .andExpect(status().is(404));\r\n```\r\nthen test will pass and we don\'t catch bugs in cases when entity with given id is non-exists.\r\nSo, for this reason we used ""454"" as http status for ""not found"" case.\r\n\r\n## Problem\r\nIn our clients code we also write tests and want to cover this case with custom http status, but we cant because MockRestResponseCreators and MockClientHttpResponse not support custom http codes:\r\n```java\r\n  mockRestServiceServer.expect(requestTo(serverURI)\r\n          .andExpect(method(HttpMethod.GET))\r\n          .andRespond(withStatus(454)); // <-- will not work cause support only HttpStatus \r\n```', 'created_at': '2022-02-25T01:14:36Z', 'updated_at': '2022-03-16T09:29:46Z', 'closed_at': '2022-03-16T09:29:45Z', 'merged_at': None, 'merge_commit_sha': 'd4fdd0b23984c0917f350b3e15d309ede15a67b7', 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 1188511816, 'node_id': 'MDU6TGFiZWwxMTg4NTExODE2', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20test', 'name': 'in: test', 'color': 'e8f9de', 'default': False, 'description': 'Issues in the test module'}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/290', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/290', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/290/labels', 'id': 7675334, 'node_id': 'MI_kwDOABGHUc4AdR3G', 'number': 290, 'title': '5.3.17', 'description': '', 'creator': {'login': 'jhoeller', 'id': 1263688, 'node_id': 'MDQ6VXNlcjEyNjM2ODg=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1263688?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/jhoeller', 'html_url': 'https://github.com/jhoeller', 'followers_url': 'https://api.github.com/users/jhoeller/followers', 'following_url': 'https://api.github.com/users/jhoeller/following{/other_user}', 'gists_url': 'https://api.github.com/users/jhoeller/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/jhoeller/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/jhoeller/subscriptions', 'organizations_url': 'https://api.github.com/users/jhoeller/orgs', 'repos_url': 'https://api.github.com/users/jhoeller/repos', 'events_url': 'https://api.github.com/users/jhoeller/events{/privacy}', 'received_events_url': 'https://api.github.com/users/jhoeller/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 15, 'state': 'open', 'created_at': '2022-02-14T14:20:05Z', 'updated_at': '2022-03-16T09:29:46Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'draft': False, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28105/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/6eecc40ec4ef92193f9c83f197f4eabfcd46a62d', 'head': {'label': 'AzZureman:mockrest-custom-http', 'ref': 'mockrest-custom-http', 'sha': '6eecc40ec4ef92193f9c83f197f4eabfcd46a62d', 'user': {'login': 'AzZureman', 'id': 3420444, 'node_id': 'MDQ6VXNlcjM0MjA0NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3420444?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AzZureman', 'html_url': 'https://github.com/AzZureman', 'followers_url': 'https://api.github.com/users/AzZureman/followers', 'following_url': 'https://api.github.com/users/AzZureman/following{/other_user}', 'gists_url': 'https://api.github.com/users/AzZureman/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AzZureman/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AzZureman/subscriptions', 'organizations_url': 'https://api.github.com/users/AzZureman/orgs', 'repos_url': 'https://api.github.com/users/AzZureman/repos', 'events_url': 'https://api.github.com/users/AzZureman/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AzZureman/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 463325072, 'node_id': 'R_kgDOG53HkA', 'name': 'spring-framework', 'full_name': 'AzZureman/spring-framework', 'private': False, 'owner': {'login': 'AzZureman', 'id': 3420444, 'node_id': 'MDQ6VXNlcjM0MjA0NDQ=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3420444?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/AzZureman', 'html_url': 'https://github.com/AzZureman', 'followers_url': 'https://api.github.com/users/AzZureman/followers', 'following_url': 'https://api.github.com/users/AzZureman/following{/other_user}', 'gists_url': 'https://api.github.com/users/AzZureman/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/AzZureman/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/AzZureman/subscriptions', 'organizations_url': 'https://api.github.com/users/AzZureman/orgs', 'repos_url': 'https://api.github.com/users/AzZureman/repos', 'events_url': 'https://api.github.com/users/AzZureman/events{/privacy}', 'received_events_url': 'https://api.github.com/users/AzZureman/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/AzZureman/spring-framework', 'description': 'Spring Framework', 'fork': True, 'url': 'https://api.github.com/repos/AzZureman/spring-framework', 'forks_url': 'https://api.github.com/repos/AzZureman/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/AzZureman/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/AzZureman/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/AzZureman/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/AzZureman/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/AzZureman/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/AzZureman/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/AzZureman/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/AzZureman/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/AzZureman/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/AzZureman/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/AzZureman/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/AzZureman/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/AzZureman/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/AzZureman/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/AzZureman/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/AzZureman/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/AzZureman/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/AzZureman/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/AzZureman/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/AzZureman/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/AzZureman/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/AzZureman/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/AzZureman/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/AzZureman/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/AzZureman/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/AzZureman/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/AzZureman/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/AzZureman/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/AzZureman/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/AzZureman/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/AzZureman/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/AzZureman/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/AzZureman/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/AzZureman/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/AzZureman/spring-framework/deployments', 'created_at': '2022-02-24T22:49:39Z', 'updated_at': '2022-02-24T20:07:06Z', 'pushed_at': '2022-02-25T00:14:01Z', 'git_url': 'git://github.com/AzZureman/spring-framework.git', 'ssh_url': 'git@github.com:AzZureman/spring-framework.git', 'clone_url': 'https://github.com/AzZureman/spring-framework.git', 'svn_url': 'https://github.com/AzZureman/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 172581, 'stargazers_count': 0, 'watchers_count': 0, 'language': None, 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 0, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 0, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': '65394b00ea421a75318daef6d60378875868249a', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 1148753, 'node_id': 'MDEwOlJlcG9zaXRvcnkxMTQ4NzUz', 'name': 'spring-framework', 'full_name': 'spring-projects/spring-framework', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-framework', 'description': 'Spring Framework', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-framework', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-framework/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-framework/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-framework/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-framework/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-framework/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-framework/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-framework/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-framework/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-framework/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-framework/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-framework/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-framework/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-framework/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-framework/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-framework/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-framework/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-framework/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-framework/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-framework/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-framework/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-framework/deployments', 'created_at': '2010-12-08T04:04:45Z', 'updated_at': '2022-03-16T08:26:41Z', 'pushed_at': '2022-03-16T09:29:17Z', 'git_url': 'git://github.com/spring-projects/spring-framework.git', 'ssh_url': 'git@github.com:spring-projects/spring-framework.git', 'clone_url': 'https://github.com/spring-projects/spring-framework.git', 'svn_url': 'https://github.com/spring-projects/spring-framework', 'homepage': 'https://spring.io/projects/spring-framework', 'size': 173011, 'stargazers_count': 46526, 'watchers_count': 46526, 'language': 'Java', 'has_issues': True, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': True, 'forks_count': 32956, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 1276, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['framework', 'spring', 'spring-framework'], 'visibility': 'public', 'forks': 32956, 'open_issues': 1276, 'watchers': 46526, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105'}, 'html': {'href': 'https://github.com/spring-projects/spring-framework/pull/28105'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28105'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28105/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/pulls/28105/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-framework/statuses/6eecc40ec4ef92193f9c83f197f4eabfcd46a62d'}}, 'author_association': 'NONE', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': None, 'rebaseable': None, 'mergeable_state': 'unknown', 'merged_by': None, 'comments': 3, 'review_comments': 0, 'maintainer_can_modify': False, 'commits': 1, 'additions': 73, 'deletions': 7, 'changed_files': 4}}",closed,Java
20774602107,PushEvent,spring-projects/spring-framework,0.0,2022-03-16T09:19:10Z,"{'push_id': 9365351414, 'size': 4, 'distinct_size': 4, 'ref': 'refs/heads/5.3.x', 'head': 'ee7f60000e918e13f04480bbbe79e4f0ca002c7e', 'before': '50771237cc87e1a3f8c7404c7be7a55584723c1f', 'commits': [{'sha': 'cb39b070882cb765b3c64e7a037ca651cd665300', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing Jackson encoder tests', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/cb39b070882cb765b3c64e7a037ca651cd665300'}, {'sha': '21d61316bef7568069d63b3c41625d6a262bb542', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Unwrap MappingJacksonValue before selecting ObjectMapper\n\nSee gh-28045', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/21d61316bef7568069d63b3c41625d6a262bb542'}, {'sha': 'f1fdc11fabf74ff028f1a23e90d912f8a883e614', 'author': {'email': 'more916@yandex.ru', 'name': 'azzureman'}, 'message': 'Support custom HTTP status in MockClientHttpResponse\n\nSee gh-28105', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/f1fdc11fabf74ff028f1a23e90d912f8a883e614'}, {'sha': 'ee7f60000e918e13f04480bbbe79e4f0ca002c7e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing contribution\n\nCloses gh-28105', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-framework/commits/ee7f60000e918e13f04480bbbe79e4f0ca002c7e'}]}",,Java
20764129537,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-15T18:57:03Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069', 'id': 1141194760, 'node_id': 'I_kwDOABGHUc5EBUAI', 'number': 28069, 'title': 'Controlling flashmap from a ModelAndView', 'user': {'login': 'sijskes', 'id': 1328869, 'node_id': 'MDQ6VXNlcjEzMjg4Njk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1328869?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijskes', 'html_url': 'https://github.com/sijskes', 'followers_url': 'https://api.github.com/users/sijskes/followers', 'following_url': 'https://api.github.com/users/sijskes/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijskes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijskes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijskes/subscriptions', 'organizations_url': 'https://api.github.com/users/sijskes/orgs', 'repos_url': 'https://api.github.com/users/sijskes/repos', 'events_url': 'https://api.github.com/users/sijskes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijskes/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511748, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzQ4', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-feedback', 'name': 'status: waiting-for-feedback', 'color': 'fef2c0', 'default': False, 'description': 'We need additional information before we can continue'}, {'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-15T13:42:35Z', 'due_on': None, 'closed_at': None}, 'comments': 2, 'created_at': '2022-02-17T11:07:45Z', 'updated_at': '2022-03-15T18:57:03Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Currently (Spring Boot2.6.2) it is not possible to add flashmap attributes to a `ModelAndView`.\r\n\r\nIn the `ModelAndView` constructor, the flash attributes from a `RedirectAttributesModelMap` are not merged into the regular `ModelMap` contained in `ModelAndView`. \r\n\r\nThe test in `RequestMappingHandlerAdapter.getModelAndView` for `RedirectAttributes` fails, because the `ModelAndView` reads the attributes from the `RedirectAttributesModelMap` and merges them into the already existing `ModelMap` in `ModelAndView`.\r\n\r\nThe only way now to cause the `ModelMap` to be an instance of `RedirectAttributes` is by adding a `RedirectAttributes` to the `Controller` method.\r\n\r\nWhat was expected is that the `RedirectAttributesModelMap` was passed to the `ModelAndViewContainer` so it could be picked up by the test in `RequestMappingHandlerAdapter.getModelAndView()`.\r\n\r\nIf a `RedirectAttributesModelMap` could turn up in `RequestMappingHandlerAdapter.getModelAndView` it would be a beautiful way to create a `View` factory returning a `ModelAndView` (with flash attributes) without having to signal this in the `Controller` method. And providing a clean separation. \r\n\r\nA workaround currently is to fetch the flashmap via `RequestContextUtils`, but that looks like a kludge.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1068347850', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069#issuecomment-1068347850', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'id': 1068347850, 'node_id': 'IC_kwDOABGHUc4_rbHK', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-15T18:57:03Z', 'updated_at': '2022-03-15T18:57:03Z', 'author_association': 'CONTRIBUTOR', 'body': 'There is no intent to block anything to be honest, only some decisions from a number of years ago. Trying to recollect, so previously there was confusion with attributes from the ""default"" model ending up in redirect URLs (see #11462 and many related issues, both before and follow-ups). A specific goal was to clearly separate redirects from rendering, and encourage never using from the ""default"" model on redirect which is also a security concern. The reason this relates to flash attributes is they both apply to redirects and need the same approach.\r\n\r\nHere you\'re returning `ModelAndView` and therefore not using the ""default"" model, but if support for redirect and flash attributes  in ModelAndView would have meant it should also be possible with a split Model and String view (one as input and the other as output, possible in both combinations), but it gets tricky to separate ""default"" model from non-default model use and moreover `Model` and `ModelMap` aren\'t even in web modules so can\'t really add web methods there.\r\n\r\nIn any case, it\'s been like this for a long time and not revisited much or discussed so I\'m not keen to revisit the current arrangement and add more nuance. FWIW, based on the experience in WebFlux we added the [Rendering](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/reactive/result/view/Rendering.html) API which can be created within a controller method like `ModelAndView` and supports a variety of cases. If anything we could add something more along those lines.\r\n\r\nI am also wondering if you\'ve considered an approach with passing `RedirectAtributes` into your delegate?\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1068347850/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20756248046,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-15T12:29:52Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069', 'id': 1141194760, 'node_id': 'I_kwDOABGHUc5EBUAI', 'number': 28069, 'title': 'Controlling flashmap from a ModelAndView', 'user': {'login': 'sijskes', 'id': 1328869, 'node_id': 'MDQ6VXNlcjEzMjg4Njk=', 'avatar_url': 'https://avatars.githubusercontent.com/u/1328869?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sijskes', 'html_url': 'https://github.com/sijskes', 'followers_url': 'https://api.github.com/users/sijskes/followers', 'following_url': 'https://api.github.com/users/sijskes/following{/other_user}', 'gists_url': 'https://api.github.com/users/sijskes/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sijskes/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sijskes/subscriptions', 'organizations_url': 'https://api.github.com/users/sijskes/orgs', 'repos_url': 'https://api.github.com/users/sijskes/repos', 'events_url': 'https://api.github.com/users/sijskes/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sijskes/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}, {'id': 1188512010, 'node_id': 'MDU6TGFiZWwxMTg4NTEyMDEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283', 'html_url': 'https://github.com/spring-projects/spring-framework/milestone/283', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/milestones/283/labels', 'id': 7421780, 'node_id': 'MI_kwDOABGHUc4AcT9U', 'number': 283, 'title': 'Triage Queue', 'description': '', 'creator': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 9, 'closed_issues': 0, 'state': 'open', 'created_at': '2021-11-23T10:14:08Z', 'updated_at': '2022-03-15T10:23:27Z', 'due_on': None, 'closed_at': None}, 'comments': 1, 'created_at': '2022-02-17T11:07:45Z', 'updated_at': '2022-03-15T12:29:52Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Currently (Spring Boot2.6.2) it is not possible to add flashmap attributes to a `ModelAndView`.\r\n\r\nIn the `ModelAndView` constructor, the flash attributes from a `RedirectAttributesModelMap` are not merged into the regular `ModelMap` contained in `ModelAndView`. \r\n\r\nThe test in `RequestMappingHandlerAdapter.getModelAndView` for `RedirectAttributes` fails, because the `ModelAndView` reads the attributes from the `RedirectAttributesModelMap` and merges them into the already existing `ModelMap` in `ModelAndView`.\r\n\r\nThe only way now to cause the `ModelMap` to be an instance of `RedirectAttributes` is by adding a `RedirectAttributes` to the `Controller` method.\r\n\r\nWhat was expected is that the `RedirectAttributesModelMap` was passed to the `ModelAndViewContainer` so it could be picked up by the test in `RequestMappingHandlerAdapter.getModelAndView()`.\r\n\r\nIf a `RedirectAttributesModelMap` could turn up in `RequestMappingHandlerAdapter.getModelAndView` it would be a beautiful way to create a `View` factory returning a `ModelAndView` (with flash attributes) without having to signal this in the `Controller` method. And providing a clean separation. \r\n\r\nA workaround currently is to fetch the flashmap via `RequestContextUtils`, but that looks like a kludge.\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1067931407', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/28069#issuecomment-1067931407', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/28069', 'id': 1067931407, 'node_id': 'IC_kwDOABGHUc4_p1cP', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-15T12:29:52Z', 'updated_at': '2022-03-15T12:29:52Z', 'author_association': 'CONTRIBUTOR', 'body': ""`ModelAndView` is a simple holder of name value pairs and is the basic contract for the `DispatcherServlet` and related strategies like `HandlerAdapter` and `ViewResolver`. Flash attributes is a more opinionated solution that's supported mainly from annotated controllers where you are expected to have `RedirectAttributes` injected. \r\n\r\nI'm not sure what you're proposing from an API perspective, but adding attributes to a `ModelAndView` implies that you're creating it in the controller method. More often we expect the model to be passed into the controller method which can then just return the view name. "", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1067931407/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20752409005,PushEvent,spring-projects/spring-graphql,0.0,2022-03-15T09:00:41Z,"{'push_id': 9354474353, 'size': 7, 'distinct_size': 7, 'ref': 'refs/heads/main', 'head': '0967a6e7b75ca6401bd7047fc13e7222241b0f5b', 'before': '77e9835d3aee478e8ac0eeedd2191afa989ce801', 'commits': [{'sha': '15238072bb9f77fb8691610d4e40fa2b1a13a26c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Introduce GraphQlResponse\n\nReplace the use of ExecutionResult on the client side where we are\ndealing with a response map rather, and also incorporate it into the\nserver-side hierarchy where it wraps an ExecutionResult instead.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/15238072bb9f77fb8691610d4e40fa2b1a13a26c'}, {'sha': 'dcb752dde4070874f7f1f2d4b5773ae25aefcb0c', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Introduce ClientGraphQlResponse\n\nExtends GraphQlResponse with a subtype that exposes further options to\nhandle data and errors in the response from a client perspective.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/dcb752dde4070874f7f1f2d4b5773ae25aefcb0c'}, {'sha': 'eb3c8d1a7e1cfe86df2a0dd27146f8f8dd70e605', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Refine status code in WebSocket client transport\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/eb3c8d1a7e1cfe86df2a0dd27146f8f8dd70e605'}, {'sha': '3214a9cfc9939bf30c0d8c5adea5f7cb48baa70e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Introduce GraphQlClientException hierarchy\n\nRefine exception handling and ensure a hierarchy of exceptions that\nallows differentiating between transport errors vs field errors while\naccessing an invalid data or field.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/3214a9cfc9939bf30c0d8c5adea5f7cb48baa70e'}, {'sha': '38a9eb1b3cd0ec6427e1ee59bc398ed28fff8772', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Align client with GraphQL Java error paths\n\nDefaultClientGraphQlResponse now parses the path to a field and creates\nthe same parsed representation as GraphQL Java does and uses for\nGraphQLError paths. This makes it easier to correlate fields to field\nerrors and eliminates the need for a dependency on JSONPath in the\nclient.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/38a9eb1b3cd0ec6427e1ee59bc398ed28fff8772'}, {'sha': 'e7b2f72d551f6f766926eef463e9f3c9060f2740', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add RetrieveSpec to GraphQlClient\n\nProvides a shortcut alternative to the execute methods, for decoding\na single field from the response.\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/e7b2f72d551f6f766926eef463e9f3c9060f2740'}, {'sha': '0967a6e7b75ca6401bd7047fc13e7222241b0f5b', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Update documentation for GraphQlClient\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/0967a6e7b75ca6401bd7047fc13e7222241b0f5b'}]}",,Java
20696208295,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-11T08:35:57Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/323', 'id': 1165211298, 'node_id': 'I_kwDOEMJUCs5Fc7ai', 'number': 323, 'title': 'An empty List in the variable input is converted to null ', 'user': {'login': 'wjohnstonjr', 'id': 3716706, 'node_id': 'MDQ6VXNlcjM3MTY3MDY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/3716706?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/wjohnstonjr', 'html_url': 'https://github.com/wjohnstonjr', 'followers_url': 'https://api.github.com/users/wjohnstonjr/followers', 'following_url': 'https://api.github.com/users/wjohnstonjr/following{/other_user}', 'gists_url': 'https://api.github.com/users/wjohnstonjr/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/wjohnstonjr/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/wjohnstonjr/subscriptions', 'organizations_url': 'https://api.github.com/users/wjohnstonjr/orgs', 'repos_url': 'https://api.github.com/users/wjohnstonjr/repos', 'events_url': 'https://api.github.com/users/wjohnstonjr/events{/privacy}', 'received_events_url': 'https://api.github.com/users/wjohnstonjr/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-10T13:16:01Z', 'updated_at': '2022-03-11T08:35:57Z', 'closed_at': '2022-03-10T13:46:55Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We have an input type that has a list of Int:\r\n\r\ninput AnInput {\r\n  id: ID!\r\n  aList: [Int]\r\n}\r\n\r\nThe variables that are passed look like this:\r\n\r\n{\r\n  ""id"": ""3a9b3c5b-be6b-4f6a-bf0d-067681bb950c"",\r\n  ""aList"": []\r\n}\r\n\r\nThe value of aList in our handler is null when we are expecting an empty list.  I would expect a null value if it was set to null in the variables:\r\n\r\n{\r\n  ""id"": ""3a9b3c5b-be6b-4f6a-bf0d-067681bb950c"",\r\n  ""aList"": null\r\n}\r\n\r\nOr if the value was not present in the variables:\r\n\r\n{\r\n  ""id"": ""3a9b3c5b-be6b-4f6a-bf0d-067681bb950c""\r\n}\r\n\r\nIt looks like the code in GraphQlArgumentInitializer.visitArgumentMap() does not handle the empty list correctly.  ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1064891258', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/323#issuecomment-1064891258', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/323', 'id': 1064891258, 'node_id': 'IC_kwDOEMJUCs4_ePN6', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-11T08:35:57Z', 'updated_at': '2022-03-11T08:35:57Z', 'author_association': 'CONTRIBUTOR', 'body': '@wjohnstonjr if you can, please give the snapshot a try.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1064891258/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20677442722,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-10T10:37:27Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316', 'id': 1160364106, 'node_id': 'I_kwDOEMJUCs5FKcBK', 'number': 316, 'title': 'Asynchronous execution and fetching field in parallel', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 3, 'created_at': '2022-03-05T14:20:30Z', 'updated_at': '2022-03-10T10:37:26Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Asynchronous execution is key point to ensure high performance of query, details in [asynchronous-execution](https://www.graphql-java.com/documentation/execution#asynchronous-execution).\r\n\r\nIt seems that all the invoketion of @Controller handler method is serial by default. Will spring graphql support asynchronous execution of fetching field (probably similar to [mvc-ann-async](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-async))?\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1063908110', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316#issuecomment-1063908110', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'id': 1063908110, 'node_id': 'IC_kwDOEMJUCs4_afMO', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-10T10:37:26Z', 'updated_at': '2022-03-10T10:37:26Z', 'author_association': 'CONTRIBUTOR', 'body': 'Thanks for elaborating. I see now the perspective you\'re coming from.\r\n\r\nA `Callable` is appealing but almost too simple. Once you make something asynchronous, it comes with a range of concerns. The more complete form of the `Callable` return value in Spring MVC is [WebAsyncTask](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/request/async/WebAsyncTask.html) which also accepts a timeout, an `Executor`, along with error and completion callbacks. For all that this is a rather rudimentary mechanism that predates Reactor (as well as `CompletableFuture` for that matter) which provides options to compose further asynchronous stages, handle timeouts, and so on. This is before we even start talking about subscriptions and streaming. Spring MVC again has specialized types for SSE and response body streaming, again predating Reactor and Java 8. \r\n\r\nIn short, we\'ve no plans to rebuild such purpose-built asynchronous facilities as we have in Spring MVC. These days both Spring MVC and Spring WebFlux support Reactor return values and that is the approach in Spring GraphQL from the start to make Reactor a core dependency, so you\'ll encounter it in all areas including client, server, and testing.\r\n\r\nThat said I see no reason why you couldn\'t reach a similar level of convenience with Reactor while also retaining the ability to compose multiple async operations together, deal with timeouts, and so on:\r\n\r\n```java\r\npublic class GreetingController {\r\n\r\n\t@QueryMapping\r\n\tpublic Mono<String> greeting() {\r\n\t\tRequestAttributes attributes = RequestContextHolder.getRequestAttributes();\r\n\t\tString name = attributes.getAttribute(RequestAttributeFilter.NAME_ATTRIBUTE, SCOPE_REQUEST);\r\n\t\treturn executeAsync(() -> ""Hello "" + name);\r\n\t}\r\n\r\n\tprivate <T> Mono<T> executeAsync(Callable<T> callable) {\r\n\t\treturn Mono.fromCallable(callable).subscribeOn(Schedulers.parallel());\r\n\t}\r\n\r\n}\r\n```\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1063908110/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20676530746,PushEvent,spring-projects/spring-graphql,0.0,2022-03-10T09:49:14Z,"{'push_id': 9314450383, 'size': 3, 'distinct_size': 3, 'ref': 'refs/heads/main', 'head': '1e652f800bb2adc20138a790247b7ec5ac38dcd9', 'before': 'f42563424e2e037c1da7233173e39ba026a60568', 'commits': [{'sha': 'f568bce8a5b1055c7f2a1117f7e5ac0210be0ca7', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Correctly bind nested empty list\n\nCloses gh-301', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/f568bce8a5b1055c7f2a1117f7e5ac0210be0ca7'}, {'sha': 'fb521e9b6fbbf94f32282c65479647c09229e06a', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Add section on GraphQlClient to the reference docs\n\nSee gh-10', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/fb521e9b6fbbf94f32282c65479647c09229e06a'}, {'sha': '1e652f800bb2adc20138a790247b7ec5ac38dcd9', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Polishing', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/1e652f800bb2adc20138a790247b7ec5ac38dcd9'}]}",,Java
20676530520,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-10T09:49:13Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/301', 'id': 1148166162, 'node_id': 'I_kwDOEMJUCs5Eb6AS', 'number': 301, 'title': 'Bind zero-length nested input argument to a zero-length List instead of null', 'user': {'login': 'patrikbjork', 'id': 11442322, 'node_id': 'MDQ6VXNlcjExNDQyMzIy', 'avatar_url': 'https://avatars.githubusercontent.com/u/11442322?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/patrikbjork', 'html_url': 'https://github.com/patrikbjork', 'followers_url': 'https://api.github.com/users/patrikbjork/followers', 'following_url': 'https://api.github.com/users/patrikbjork/following{/other_user}', 'gists_url': 'https://api.github.com/users/patrikbjork/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/patrikbjork/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/patrikbjork/subscriptions', 'organizations_url': 'https://api.github.com/users/patrikbjork/orgs', 'repos_url': 'https://api.github.com/users/patrikbjork/repos', 'events_url': 'https://api.github.com/users/patrikbjork/events{/privacy}', 'received_events_url': 'https://api.github.com/users/patrikbjork/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 21, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-10T09:49:13Z', 'due_on': '2022-03-21T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-02-23T14:28:05Z', 'updated_at': '2022-03-10T09:49:13Z', 'closed_at': '2022-03-10T09:49:13Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'When sending a mutation with a zero-length collection as a nested field, shouldn\'t it be extracted as a zero-length list instead of null?\r\n\r\nI tried adding a test to org.springframework.graphql.data.method.annotation.support.GraphQlArgumentInitializerTests. It fails since ""items"" is extracted as null.\r\n\r\n```\r\n@Test\r\nvoid shouldInstantiateEmptyNestedBeanLists() throws Exception {\r\n\tString payload = ""{\\""nestedList\\"": { \\""items\\"": [ ] } }"";\r\n\tDataFetchingEnvironment environment = initEnvironment(payload);\r\n\tObject result = initializer.initializeArgument(\r\n\t\t\tenvironment, ""nestedList"", ResolvableType.forClass(NestedList.class));\r\n\r\n\tassertThat(result).isNotNull().isInstanceOf(NestedList.class);\r\n\tassertThat(((NestedList) result).getItems()).hasSize(0);\r\n}\r\n```\r\n\r\nIs this correct behavior or should it be improved?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/timeline', 'performed_via_github_app': None}}",closed,Java
20661411603,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-09T15:19:02Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283', 'id': 1128804495, 'node_id': 'I_kwDOEMJUCs5DSDCP', 'number': 283, 'title': 'Handling NonNullableFieldWasNullException in GraphQlWebSocketHandler', 'user': {'login': 'oliviercoma', 'id': 4144376, 'node_id': 'MDQ6VXNlcjQxNDQzNzY=', 'avatar_url': 'https://avatars.githubusercontent.com/u/4144376?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/oliviercoma', 'html_url': 'https://github.com/oliviercoma', 'followers_url': 'https://api.github.com/users/oliviercoma/followers', 'following_url': 'https://api.github.com/users/oliviercoma/following{/other_user}', 'gists_url': 'https://api.github.com/users/oliviercoma/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/oliviercoma/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/oliviercoma/subscriptions', 'organizations_url': 'https://api.github.com/users/oliviercoma/orgs', 'repos_url': 'https://api.github.com/users/oliviercoma/repos', 'events_url': 'https://api.github.com/users/oliviercoma/events{/privacy}', 'received_events_url': 'https://api.github.com/users/oliviercoma/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181144265, 'node_id': 'MDU6TGFiZWwzMTgxMTQ0MjY1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20feedback-provided', 'name': 'status: feedback-provided', 'color': 'fef2c0', 'default': False, 'description': 'Feedback has been provided'}, {'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 4, 'created_at': '2022-02-09T17:05:42Z', 'updated_at': '2022-03-09T15:19:02Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Hello,\r\n\r\nThe exception NonNullableFieldWasNullException appears to be special and does not invoke the DataFetcherExceptionHandler. As a result, the exception is caught in the \'onErrorResume\' method of the handleWebOutput method.\r\n\r\nWhile the NonNullableFieldWasNullException is hierarchical (nested graphql object path create multiple inner causes), its handling is very basic and only displays the message of the root which is not useful. (e.g. ""The field at path \'/a\' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is \'APayload\' within parent type \'Subscription\'"")\r\nThe actual error might be that /a/b/c/d/e[10]/f is null.\r\n\r\nDebugging the real issue is thus not easy. It would be good to handle it by interpreting the hierarchy so that error returned to the client is useful.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1063030415', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/283#issuecomment-1063030415', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/283', 'id': 1063030415, 'node_id': 'IC_kwDOEMJUCs4_XI6P', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-09T15:19:02Z', 'updated_at': '2022-03-09T15:19:02Z', 'author_association': 'CONTRIBUTOR', 'body': ""There is now a [WebSocketGraphQlTester](https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#testing-websocketgraphqltester) and it's used in [one of the samples](https://github.com/spring-projects/spring-graphql/blob/f42563424e2e037c1da7233173e39ba026a60568/samples/webflux-security/src/test/java/io/spring/sample/graphql/WebFluxSecuritySampleTests.java#L47). Could you please provide a sample?\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1063030415/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20661158469,IssueCommentEvent,spring-projects/spring-framework,0.0,2022-03-09T15:07:27Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-framework', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/events', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653', 'id': 1047355222, 'node_id': 'I_kwDOABGHUc4-bV9W', 'number': 27653, 'title': 'When using HandshakeInterceptor with ServerHttpAsyncRequestControl, Jetty10RequestUpgradeStrategy throws exception due to null servletContext', 'user': {'login': 'ajr3-gen', 'id': 93659748, 'node_id': 'U_kgDOBZUiZA', 'avatar_url': 'https://avatars.githubusercontent.com/u/93659748?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ajr3-gen', 'html_url': 'https://github.com/ajr3-gen', 'followers_url': 'https://api.github.com/users/ajr3-gen/followers', 'following_url': 'https://api.github.com/users/ajr3-gen/following{/other_user}', 'gists_url': 'https://api.github.com/users/ajr3-gen/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ajr3-gen/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ajr3-gen/subscriptions', 'organizations_url': 'https://api.github.com/users/ajr3-gen/orgs', 'repos_url': 'https://api.github.com/users/ajr3-gen/repos', 'events_url': 'https://api.github.com/users/ajr3-gen/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ajr3-gen/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 1188511750, 'node_id': 'MDU6TGFiZWwxMTg4NTExNzUw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged or decided on""}, {'id': 1188511910, 'node_id': 'MDU6TGFiZWwxMTg4NTExOTEw', 'url': 'https://api.github.com/repos/spring-projects/spring-framework/labels/in:%20web', 'name': 'in: web', 'color': 'e8f9de', 'default': False, 'description': 'Issues in web modules (web, webmvc, webflux, websocket)'}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 5, 'created_at': '2021-11-03T14:45:18Z', 'updated_at': '2022-03-09T15:07:26Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': ""We are upgrading our project from Jetty v9 to v10 and have encountered a problem with the new spring-boot Jetty implementation.\r\n\r\nOur WebSocketController includes a custom HandshakeInterceptor.  In the beforeHandshake() method, we use this line:\r\n```\r\n        ServerHttpAsyncRequestControl requestControl = request.getAsyncRequestControl(response);\r\n        requestControl.start();\r\n```\r\nso that we can authorize the request before completing it.  We do that authorization in a separate thread and then call DefaultHandshakeHandler to complete the handshake:\r\n```\r\n        handshakeHandler.doHandshake(request, response, wsHandler, attributes);\r\n        requestControl.complete();\r\n```\r\nwhile the beforeHandshake method exits on the main thread.\r\n\r\nThis worked fine with Jetty v9 (which is implemented in spring-boot via the class `org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy`).  However, with Jetty v10 (which uses a new class: `org.springframework.web.socket.server.jetty.Jetty10RequestUpgradeStrategy`), there is a NullPointerException.  This is because Jetty10RequestUpgradeStrategy uses reflection to invoke `JettyWebSocketServerContainer getContainer(ServletContext servletContext)` which tries to resolve an attribute from the request's servletContext -- **but servletContext has now been cleared out** as we have exited the beforeHandshake() method on the main thread.\r\n\r\nI confirmed this by adding a Thread.sleep() to our beforeHandshake() method to delay it from returning for a couple of seconds, and this allowed the thread with DefaultHandshakeHandler to complete.  Without this delay, we catch this error and the handshake does not complete:\r\n`    org.springframework.web.socket.server.HandshakeFailureException: Failed to upgrade; nested exception is java.lang.NullPointerException`\r\n\r\nVersions used:\r\nspring.boot = 2.5.6\r\njetty.version = 10.0.6\r\nspring.framework = 5.3.12\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1063017431', 'html_url': 'https://github.com/spring-projects/spring-framework/issues/27653#issuecomment-1063017431', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/27653', 'id': 1063017431, 'node_id': 'IC_kwDOABGHUc4_XFvX', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-09T15:07:25Z', 'updated_at': '2022-03-09T15:07:25Z', 'author_association': 'CONTRIBUTOR', 'body': ""What you're doing with an asynchronous request before a handshake is not at all an expected scenario. Even from a Servlet container perspective, when you get off the Servlet container thread, you are expected to use `AsyncContext#dispatch` to continue processing on a Servlet container thread in order for everything to work. \r\n\r\nI can see that we don't expose dispatch on `ServerHttpAsyncRequestControl` but I'm not sure why you need to use that abstraction and not the HttpServletRequest directly especially for something like this. This brings back the point this isn't at all something expected.\r\n\r\nYou can consider simply blocking for the authentication, or using a redirect, or you can try starting an async request directly through the Servlet API and then dispatching back to the same URL, but again I don't know if you will run into any other issues with that.\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-framework/issues/comments/1063017431/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20658370499,PushEvent,spring-projects/spring-graphql,0.0,2022-03-09T12:47:39Z,"{'push_id': 9305415030, 'size': 7, 'distinct_size': 7, 'ref': 'refs/heads/main', 'head': 'f42563424e2e037c1da7233173e39ba026a60568', 'before': 'c9640b6134ae1d169d3df384ef469e56ecbfe91b', 'commits': [{'sha': 'caa717e358272f074607f63b34ae60faf498c623', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': ""Move repo.spring.io up in the order\n\nI'm getting very slow times on failures to resolve Boot snapshots\nthrough the gradlePluginPortal (3-4 min build time). Moving it down\nafter repo.spring.io restores regular build times."", 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/caa717e358272f074607f63b34ae60faf498c623'}, {'sha': '7459637808b35887f85ed244dfb024ad7bccecda', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revise GraphQlTester documentation\n\nCloses gh-317', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/7459637808b35887f85ed244dfb024ad7bccecda'}, {'sha': '71881f5e476491cfb392dd6326776c30d4a39c2e', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Expose convenience String url methods\n\nSee gh-317', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/71881f5e476491cfb392dd6326776c30d4a39c2e'}, {'sha': '19793a6e742437473508b4918187196a77451653', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Revert ""Pin version to 1.0.0-M5 in samples""\n\nThis reverts commit b40375f1f2bffd2dade33653288b5027dcdc99ab.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/19793a6e742437473508b4918187196a77451653'}, {'sha': '4818ee6c817353fe68bc561d14424aeb1927107b', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Upgrade samples to match the GraphQlTest updates\n\nSee gh-310', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/4818ee6c817353fe68bc561d14424aeb1927107b'}, {'sha': 'f6b9fdfe7c0c61f1434616f0970b110fa3109055', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Fix issue with matchesJson when JSONPath is a String\n\nGraphQlTransport returns ExecutionResult with parsed JSON so for the\nmost part having MappingProvider is enough. However, when a JSONPath\nevaluates to String (vs Map or List), the JsonSmartJsonProvider used by\ndefault, throws UnsupportedOperationException from toJson.', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/f6b9fdfe7c0c61f1434616f0970b110fa3109055'}, {'sha': 'f42563424e2e037c1da7233173e39ba026a60568', 'author': {'email': 'rstoyanchev@vmware.com', 'name': 'rstoyanchev'}, 'message': 'Do not create ""error"" message from ExecutionResult\n\nFix gh-320', 'distinct': True, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits/f42563424e2e037c1da7233173e39ba026a60568'}]}",,Java
20658370271,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-09T12:47:38Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/320', 'id': 1163874172, 'node_id': 'I_kwDOEMJUCs5FX098', 'number': 320, 'title': 'GraphQlWebSocketHandler incorrectly turns ExecutionResult with errors into an ""error"" message', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 20, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-09T12:47:38Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-09T12:25:12Z', 'updated_at': '2022-03-09T12:47:38Z', 'closed_at': '2022-03-09T12:47:37Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently if the `ExecutionResult` for a single response operation (query or mutation) is turned into an ""error"" message. However, according to [the spec](https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md#error), an ""error"" relates to issues before request execution:\r\n\r\n> Operation execution error(s) triggered by the Next message happening before the actual execution, usually due to validation errors.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/timeline', 'performed_via_github_app': None}}",closed,Java
20658370091,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-09T12:47:37Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/317', 'id': 1161191017, 'node_id': 'I_kwDOEMJUCs5FNl5p', 'number': 317, 'title': 'Revisit GraphQlTester to align with GraphQlClient', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973762, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzYy', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20enhancement', 'name': 'type: enhancement', 'color': 'e3d9fc', 'default': False, 'description': 'A general enhancement'}], 'state': 'closed', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 6, 'closed_issues': 19, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-09T12:47:37Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-07T10:13:08Z', 'updated_at': '2022-03-09T12:47:37Z', 'closed_at': '2022-03-09T12:47:37Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': ""`GraphQlTester` came first and supported HTTP only but not WebSocket so it never explored design issues from the mismatch between HTTP and WebSocket as underlying transports.\r\n\r\n`GraphQlTester` needs to be updated to build on what's now available from the client work under #10, and to align it with the design approach. As part of that, it also needs to change for #310 for details, to use correct terminology, e.g. `document` vs `query`.\r\n\r\nTwo new contracts need to be incorporated,`GraphQlRequest` as the client side request representation of what goes on the wire and `GraphQlTransport` that decouples the client (or tester) from request execution. For implementations, the HTTP transports for client vs tester are `WebClient` vs `WebTestClient` based respectively, while the WebSocket transport is common.\r\n\r\n`GraphQlTester` took the approach of exposing transport details such as HTTP headers during request execution. WebSocket, however, is connection oriented with HTTP headers only relevant for the WebSocket handshake. Moreover, GraphQL over WebSocket defines a higher level mechanism with a `connection_init` and `connection_ack` message exchange after the WebSocket connection is established. `GraphQlClient` is modelled with connection-oriented, multiplexed transports in mind as a common denominator. It expects transport details to be configured at build time, and supports mutation as a first class mechanism so it's easy to create multiple, independent client instances. `GraphQlTester` will be aligned to follow the same approach.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/317/timeline', 'performed_via_github_app': None}}",closed,Java
20657971461,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-09T12:25:13Z,"{'action': 'opened', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/320', 'id': 1163874172, 'node_id': 'I_kwDOEMJUCs5FX098', 'number': 320, 'title': 'GraphQlWebSocketHandler incorrectly turns ExecutionResult with errors into an ""error"" message', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 2217973755, 'node_id': 'MDU6TGFiZWwyMjE3OTczNzU1', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/type:%20bug', 'name': 'type: bug', 'color': 'e3d9fc', 'default': False, 'description': 'A general bug'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 7, 'closed_issues': 18, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-09T12:25:12Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 0, 'created_at': '2022-03-09T12:25:12Z', 'updated_at': '2022-03-09T12:25:13Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Currently if the `ExecutionResult` for a single response operation (query or mutation) is turned into an ""error"" message. However, according to [the spec](https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md#error), an ""error"" relates to issues before request execution:\r\n\r\n> Operation execution error(s) triggered by the Next message happening before the actual execution, usually due to validation errors.\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/320/timeline', 'performed_via_github_app': None}}",opened,Java
20644910236,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T20:04:12Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316', 'id': 1160364106, 'node_id': 'I_kwDOEMJUCs5FKcBK', 'number': 316, 'title': 'Asynchronous execution and fetching field in parallel', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-03-05T14:20:30Z', 'updated_at': '2022-03-08T20:04:12Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': 'Asynchronous execution is key point to ensure high performance of query, details in [asynchronous-execution](https://www.graphql-java.com/documentation/execution#asynchronous-execution).\r\n\r\nIt seems that all the invoketion of @Controller handler method is serial by default. Will spring graphql support asynchronous execution of fetching field (probably similar to [mvc-ann-async](https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#mvc-ann-async))?\r\n\r\n\r\n', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062160006', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/316#issuecomment-1062160006', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/316', 'id': 1062160006, 'node_id': 'IC_kwDOEMJUCs4_T0aG', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T20:04:12Z', 'updated_at': '2022-03-08T20:04:12Z', 'author_association': 'CONTRIBUTOR', 'body': ""I'm not sure I understand what you're missing. You can return Flux, Mono from controller methods."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062160006/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20644861465,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T20:01:07Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312', 'id': 1155370282, 'node_id': 'I_kwDOEMJUCs5E3Y0q', 'number': 312, 'title': 'Define a schema using java instead of SDL', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 1, 'created_at': '2022-03-01T13:56:46Z', 'updated_at': '2022-03-08T20:01:07Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'We would like to be able to define the schema programmatically instead of through an SDL file.\r\nIn our first attempt we have used a GraphQlSourceBuilderCustomizer and used the schemaFactory method, but we noticed that the DefaultTypeResolver is not registered correctly and it is necessary to have an SDL file even if it is empty.\r\n\r\nCould you consider adding a method to the DefaultGraphQlSourceBuilder that would allow to directly insert a GraphQLSchema?\r\n\r\nMany thanks & regards,\r\nRubén', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062157304', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/312#issuecomment-1062157304', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/312', 'id': 1062157304, 'node_id': 'IC_kwDOEMJUCs4_Tzv4', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T20:01:07Z', 'updated_at': '2022-03-08T20:01:07Z', 'author_association': 'CONTRIBUTOR', 'body': ""Generally, SDL is what we aim to support support and that's what `GraphQlSource.Builder` is built for. I'm not sure we should aim to support the programmatic approach in the same builder. I would be concerned about the full implications of what that entails, what Builder options apply to which, but also what else might not work in combination.\r\n\r\nIf we wanted to support programmatic, it would maybe be a different builder, or perhaps the two builders could share a common base builder, but again I have not looked in detail and it is not planned currently.\r\n\r\nFor now, consider bypassing the builder and creating a `GraphQlSource` through your code. If there are issues with that approach we could consider small changes to make it possible at least.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062157304/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20644542995,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T19:40:01Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/301', 'id': 1148166162, 'node_id': 'I_kwDOEMJUCs5Eb6AS', 'number': 301, 'title': 'Extract zero-length nested input fields as zero-length list/collection instead of null', 'user': {'login': 'patrikbjork', 'id': 11442322, 'node_id': 'MDQ6VXNlcjExNDQyMzIy', 'avatar_url': 'https://avatars.githubusercontent.com/u/11442322?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/patrikbjork', 'html_url': 'https://github.com/patrikbjork', 'followers_url': 'https://api.github.com/users/patrikbjork/followers', 'following_url': 'https://api.github.com/users/patrikbjork/following{/other_user}', 'gists_url': 'https://api.github.com/users/patrikbjork/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/patrikbjork/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/patrikbjork/subscriptions', 'organizations_url': 'https://api.github.com/users/patrikbjork/orgs', 'repos_url': 'https://api.github.com/users/patrikbjork/repos', 'events_url': 'https://api.github.com/users/patrikbjork/events{/privacy}', 'received_events_url': 'https://api.github.com/users/patrikbjork/received_events', 'type': 'User', 'site_admin': False}, 'labels': [], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 5, 'closed_issues': 18, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-08T19:39:31Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-02-23T14:28:05Z', 'updated_at': '2022-03-08T19:40:01Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'When sending a mutation with a zero-length collection as a nested field, shouldn\'t it be extracted as a zero-length list instead of null?\r\n\r\nI tried adding a test to org.springframework.graphql.data.method.annotation.support.GraphQlArgumentInitializerTests. It fails since ""items"" is extracted as null.\r\n\r\n```\r\n@Test\r\nvoid shouldInstantiateEmptyNestedBeanLists() throws Exception {\r\n\tString payload = ""{\\""nestedList\\"": { \\""items\\"": [ ] } }"";\r\n\tDataFetchingEnvironment environment = initEnvironment(payload);\r\n\tObject result = initializer.initializeArgument(\r\n\t\t\tenvironment, ""nestedList"", ResolvableType.forClass(NestedList.class));\r\n\r\n\tassertThat(result).isNotNull().isInstanceOf(NestedList.class);\r\n\tassertThat(((NestedList) result).getItems()).hasSize(0);\r\n}\r\n```\r\n\r\nIs this correct behavior or should it be improved?', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062135171', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/301#issuecomment-1062135171', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/301', 'id': 1062135171, 'node_id': 'IC_kwDOEMJUCs4_TuWD', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T19:40:01Z', 'updated_at': '2022-03-08T19:40:01Z', 'author_association': 'CONTRIBUTOR', 'body': 'It sounds like it should be improved but need to have a closer look. ', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062135171/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20644479323,IssuesEvent,spring-projects/spring-graphql,0.0,2022-03-08T19:35:43Z,"{'action': 'closed', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/309', 'id': 1150215083, 'node_id': 'I_kwDOEMJUCs5EjuOr', 'number': 309, 'title': 'Subscription with SSE', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-02-25T09:13:53Z', 'updated_at': '2022-03-08T19:35:43Z', 'closed_at': '2022-03-08T19:35:42Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Are you planning to add support for subscriptions over Server-Side Event?\r\n\r\nMany thanks & regards', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/timeline', 'performed_via_github_app': None}}",closed,Java
20644479237,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T19:35:43Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/309', 'id': 1150215083, 'node_id': 'I_kwDOEMJUCs5EjuOr', 'number': 309, 'title': 'Subscription with SSE', 'user': {'login': 'ruben-garciapariente', 'id': 91736804, 'node_id': 'U_kgDOBXfK5A', 'avatar_url': 'https://avatars.githubusercontent.com/u/91736804?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/ruben-garciapariente', 'html_url': 'https://github.com/ruben-garciapariente', 'followers_url': 'https://api.github.com/users/ruben-garciapariente/followers', 'following_url': 'https://api.github.com/users/ruben-garciapariente/following{/other_user}', 'gists_url': 'https://api.github.com/users/ruben-garciapariente/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/ruben-garciapariente/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/ruben-garciapariente/subscriptions', 'organizations_url': 'https://api.github.com/users/ruben-garciapariente/orgs', 'repos_url': 'https://api.github.com/users/ruben-garciapariente/repos', 'events_url': 'https://api.github.com/users/ruben-garciapariente/events{/privacy}', 'received_events_url': 'https://api.github.com/users/ruben-garciapariente/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 2, 'created_at': '2022-02-25T09:13:53Z', 'updated_at': '2022-03-08T19:35:43Z', 'closed_at': '2022-03-08T19:35:42Z', 'author_association': 'NONE', 'active_lock_reason': None, 'body': 'Are you planning to add support for subscriptions over Server-Side Event?\r\n\r\nMany thanks & regards', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/reactions', 'total_count': 1, '+1': 1, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062131958', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/309#issuecomment-1062131958', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/309', 'id': 1062131958, 'node_id': 'IC_kwDOEMJUCs4_Ttj2', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T19:35:42Z', 'updated_at': '2022-03-08T19:35:42Z', 'author_association': 'CONTRIBUTOR', 'body': ""No plans to support SSE as there is no spec. Yes it can be done, but SSE by itself is only a way to define messages, like WebSocket. \r\n\r\nFor example, there is no way to map error and completion signals from a Subscription `Publisher`. For error, you could create a final `ExecutionResult` and close the connection, but the client can't properly turn that into an error signal to the client side subscription Flux. By comparison GraphQL over WebSocket defines an error message and in the new GraphQlClient, subscriptions can end with an error signal. See the [GraphQlTransport](https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/api/org/springframework/graphql/client/GraphQlTransport.html) for `executeSubscription`. We cannot support that contract for SSE without a protocol like GraphQL over WebSocket but for SSE.\r\n\r\nGraphQL for WebSocket also defines ping and pong messages which is important for connectivity issues with long running streams. For the time being, while there is no spec, we have no plans to support it.\r\n\r\n"", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062131958/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20643276555,PullRequestEvent,spring-projects/spring-graphql,0.0,2022-03-08T18:18:46Z,"{'action': 'closed', 'number': 299, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299', 'id': 861025584, 'node_id': 'PR_kwDOEMJUCs4zUjUw', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/299', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/299.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/299.patch', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299', 'number': 299, 'state': 'closed', 'locked': False, 'title': 'Support default datafetcherFactory', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'body': None, 'created_at': '2022-02-23T04:01:14Z', 'updated_at': '2022-03-08T18:18:46Z', 'closed_at': '2022-03-08T18:18:45Z', 'merged_at': None, 'merge_commit_sha': '0f882a371dfa48ae097f85686fb5ed96282f964f', 'assignee': None, 'assignees': [], 'requested_reviewers': [], 'requested_teams': [], 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'milestone': None, 'draft': True, 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299/commits', 'review_comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299/comments', 'review_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/comments', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/ce1133c016f7568fd5a1553dd81ebf8b72bc1ab2', 'head': {'label': 'dugenkui03:supportDefaultDataFetcherFactory', 'ref': 'supportDefaultDataFetcherFactory', 'sha': 'ce1133c016f7568fd5a1553dd81ebf8b72bc1ab2', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'repo': {'id': 377463720, 'node_id': 'MDEwOlJlcG9zaXRvcnkzNzc0NjM3MjA=', 'name': 'spring-graphql', 'full_name': 'dugenkui03/spring-graphql', 'private': False, 'owner': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'html_url': 'https://github.com/dugenkui03/spring-graphql', 'description': 'Spring integration for GraphQL ', 'fork': True, 'url': 'https://api.github.com/repos/dugenkui03/spring-graphql', 'forks_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/dugenkui03/spring-graphql/deployments', 'created_at': '2021-06-16T10:53:30Z', 'updated_at': '2021-12-21T15:10:21Z', 'pushed_at': '2022-03-08T16:25:48Z', 'git_url': 'git://github.com/dugenkui03/spring-graphql.git', 'ssh_url': 'git@github.com:dugenkui03/spring-graphql.git', 'clone_url': 'https://github.com/dugenkui03/spring-graphql.git', 'svn_url': 'https://github.com/dugenkui03/spring-graphql', 'homepage': '', 'size': 2231, 'stargazers_count': 0, 'watchers_count': 0, 'language': 'Java', 'has_issues': False, 'has_projects': True, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 0, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 2, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': [], 'visibility': 'public', 'forks': 0, 'open_issues': 2, 'watchers': 0, 'default_branch': 'main'}}, 'base': {'label': 'spring-projects:main', 'ref': 'main', 'sha': 'afb0b64d3a58d76291515462d44b2f0e48003762', 'user': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'repo': {'id': 281170954, 'node_id': 'MDEwOlJlcG9zaXRvcnkyODExNzA5NTQ=', 'name': 'spring-graphql', 'full_name': 'spring-projects/spring-graphql', 'private': False, 'owner': {'login': 'spring-projects', 'id': 317776, 'node_id': 'MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==', 'avatar_url': 'https://avatars.githubusercontent.com/u/317776?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/spring-projects', 'html_url': 'https://github.com/spring-projects', 'followers_url': 'https://api.github.com/users/spring-projects/followers', 'following_url': 'https://api.github.com/users/spring-projects/following{/other_user}', 'gists_url': 'https://api.github.com/users/spring-projects/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/spring-projects/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/spring-projects/subscriptions', 'organizations_url': 'https://api.github.com/users/spring-projects/orgs', 'repos_url': 'https://api.github.com/users/spring-projects/repos', 'events_url': 'https://api.github.com/users/spring-projects/events{/privacy}', 'received_events_url': 'https://api.github.com/users/spring-projects/received_events', 'type': 'Organization', 'site_admin': False}, 'html_url': 'https://github.com/spring-projects/spring-graphql', 'description': 'Spring Integration for GraphQL ', 'fork': False, 'url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'forks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/forks', 'keys_url': 'https://api.github.com/repos/spring-projects/spring-graphql/keys{/key_id}', 'collaborators_url': 'https://api.github.com/repos/spring-projects/spring-graphql/collaborators{/collaborator}', 'teams_url': 'https://api.github.com/repos/spring-projects/spring-graphql/teams', 'hooks_url': 'https://api.github.com/repos/spring-projects/spring-graphql/hooks', 'issue_events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/events{/number}', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/events', 'assignees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/assignees{/user}', 'branches_url': 'https://api.github.com/repos/spring-projects/spring-graphql/branches{/branch}', 'tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/tags', 'blobs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/blobs{/sha}', 'git_tags_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/tags{/sha}', 'git_refs_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/refs{/sha}', 'trees_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/trees{/sha}', 'statuses_url': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/{sha}', 'languages_url': 'https://api.github.com/repos/spring-projects/spring-graphql/languages', 'stargazers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/stargazers', 'contributors_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contributors', 'subscribers_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscribers', 'subscription_url': 'https://api.github.com/repos/spring-projects/spring-graphql/subscription', 'commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/commits{/sha}', 'git_commits_url': 'https://api.github.com/repos/spring-projects/spring-graphql/git/commits{/sha}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/comments{/number}', 'issue_comment_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments{/number}', 'contents_url': 'https://api.github.com/repos/spring-projects/spring-graphql/contents/{+path}', 'compare_url': 'https://api.github.com/repos/spring-projects/spring-graphql/compare/{base}...{head}', 'merges_url': 'https://api.github.com/repos/spring-projects/spring-graphql/merges', 'archive_url': 'https://api.github.com/repos/spring-projects/spring-graphql/{archive_format}{/ref}', 'downloads_url': 'https://api.github.com/repos/spring-projects/spring-graphql/downloads', 'issues_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues{/number}', 'pulls_url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls{/number}', 'milestones_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones{/number}', 'notifications_url': 'https://api.github.com/repos/spring-projects/spring-graphql/notifications{?since,all,participating}', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels{/name}', 'releases_url': 'https://api.github.com/repos/spring-projects/spring-graphql/releases{/id}', 'deployments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/deployments', 'created_at': '2020-07-20T16:35:00Z', 'updated_at': '2022-03-07T08:56:50Z', 'pushed_at': '2022-03-08T16:46:08Z', 'git_url': 'git://github.com/spring-projects/spring-graphql.git', 'ssh_url': 'git@github.com:spring-projects/spring-graphql.git', 'clone_url': 'https://github.com/spring-projects/spring-graphql.git', 'svn_url': 'https://github.com/spring-projects/spring-graphql', 'homepage': '', 'size': 1766, 'stargazers_count': 1030, 'watchers_count': 1030, 'language': 'Java', 'has_issues': True, 'has_projects': False, 'has_downloads': True, 'has_wiki': True, 'has_pages': False, 'forks_count': 137, 'mirror_url': None, 'archived': False, 'disabled': False, 'open_issues_count': 47, 'license': {'key': 'apache-2.0', 'name': 'Apache License 2.0', 'spdx_id': 'Apache-2.0', 'url': 'https://api.github.com/licenses/apache-2.0', 'node_id': 'MDc6TGljZW5zZTI='}, 'allow_forking': True, 'is_template': False, 'topics': ['graphql', 'spring-graphql'], 'visibility': 'public', 'forks': 137, 'open_issues': 47, 'watchers': 1030, 'default_branch': 'main'}}, '_links': {'self': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299'}, 'html': {'href': 'https://github.com/spring-projects/spring-graphql/pull/299'}, 'issue': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299'}, 'comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/comments'}, 'review_comments': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299/comments'}, 'review_comment': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/comments{/number}'}, 'commits': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299/commits'}, 'statuses': {'href': 'https://api.github.com/repos/spring-projects/spring-graphql/statuses/ce1133c016f7568fd5a1553dd81ebf8b72bc1ab2'}}, 'author_association': 'CONTRIBUTOR', 'auto_merge': None, 'active_lock_reason': None, 'merged': False, 'mergeable': True, 'rebaseable': False, 'mergeable_state': 'clean', 'merged_by': None, 'comments': 1, 'review_comments': 0, 'maintainer_can_modify': False, 'commits': 1, 'additions': 30, 'deletions': 2, 'changed_files': 3}}",closed,Java
20643276468,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T18:18:46Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/299', 'id': 1147603498, 'node_id': 'PR_kwDOEMJUCs4zUjUw', 'number': 299, 'title': 'Support default datafetcherFactory', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'closed', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': None, 'comments': 1, 'created_at': '2022-02-23T04:01:14Z', 'updated_at': '2022-03-08T18:18:46Z', 'closed_at': '2022-03-08T18:18:45Z', 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'draft': True, 'pull_request': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/pulls/299', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/299', 'diff_url': 'https://github.com/spring-projects/spring-graphql/pull/299.diff', 'patch_url': 'https://github.com/spring-projects/spring-graphql/pull/299.patch', 'merged_at': None}, 'body': None, 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062070124', 'html_url': 'https://github.com/spring-projects/spring-graphql/pull/299#issuecomment-1062070124', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/299', 'id': 1062070124, 'node_id': 'IC_kwDOEMJUCs4_Teds', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T18:18:45Z', 'updated_at': '2022-03-08T18:18:45Z', 'author_association': 'CONTRIBUTOR', 'body': ""Closing for now, let's continue the discussion under #300."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062070124/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
20643259156,IssueCommentEvent,spring-projects/spring-graphql,0.0,2022-03-08T18:17:42Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315', 'repository_url': 'https://api.github.com/repos/spring-projects/spring-graphql', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/labels{/name}', 'comments_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/comments', 'events_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/events', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/315', 'id': 1157962955, 'node_id': 'I_kwDOEMJUCs5FBRzL', 'number': 315, 'title': 'The thread safe of `ArgumentMethodArgumentResolver` and `QueryByExampleDataFetcher`', 'user': {'login': 'dugenkui03', 'id': 18216266, 'node_id': 'MDQ6VXNlcjE4MjE2MjY2', 'avatar_url': 'https://avatars.githubusercontent.com/u/18216266?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/dugenkui03', 'html_url': 'https://github.com/dugenkui03', 'followers_url': 'https://api.github.com/users/dugenkui03/followers', 'following_url': 'https://api.github.com/users/dugenkui03/following{/other_user}', 'gists_url': 'https://api.github.com/users/dugenkui03/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/dugenkui03/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/dugenkui03/subscriptions', 'organizations_url': 'https://api.github.com/users/dugenkui03/orgs', 'repos_url': 'https://api.github.com/users/dugenkui03/repos', 'events_url': 'https://api.github.com/users/dugenkui03/events{/privacy}', 'received_events_url': 'https://api.github.com/users/dugenkui03/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 3181146776, 'node_id': 'MDU6TGFiZWwzMTgxMTQ2Nzc2', 'url': 'https://api.github.com/repos/spring-projects/spring-graphql/labels/status:%20waiting-for-triage', 'name': 'status: waiting-for-triage', 'color': 'fef2c0', 'default': False, 'description': ""An issue we've not yet triaged""}], 'state': 'open', 'locked': False, 'assignee': None, 'assignees': [], 'milestone': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7', 'html_url': 'https://github.com/spring-projects/spring-graphql/milestone/7', 'labels_url': 'https://api.github.com/repos/spring-projects/spring-graphql/milestones/7/labels', 'id': 7591954, 'node_id': 'MI_kwDOEMJUCs4Ac9gS', 'number': 7, 'title': '1.0.0-M6', 'description': '', 'creator': {'login': 'bclozel', 'id': 103264, 'node_id': 'MDQ6VXNlcjEwMzI2NA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/103264?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/bclozel', 'html_url': 'https://github.com/bclozel', 'followers_url': 'https://api.github.com/users/bclozel/followers', 'following_url': 'https://api.github.com/users/bclozel/following{/other_user}', 'gists_url': 'https://api.github.com/users/bclozel/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/bclozel/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/bclozel/subscriptions', 'organizations_url': 'https://api.github.com/users/bclozel/orgs', 'repos_url': 'https://api.github.com/users/bclozel/repos', 'events_url': 'https://api.github.com/users/bclozel/events{/privacy}', 'received_events_url': 'https://api.github.com/users/bclozel/received_events', 'type': 'User', 'site_admin': False}, 'open_issues': 4, 'closed_issues': 18, 'state': 'open', 'created_at': '2022-01-20T08:29:29Z', 'updated_at': '2022-03-08T18:16:42Z', 'due_on': '2022-03-17T07:00:00Z', 'closed_at': None}, 'comments': 1, 'created_at': '2022-03-03T04:42:02Z', 'updated_at': '2022-03-08T18:17:42Z', 'closed_at': None, 'author_association': 'CONTRIBUTOR', 'active_lock_reason': None, 'body': '>Note: Due to its reliance on PropertyEditors, SimpleTypeConverter is not thread-safe. Use a separate instance for each thread.\r\nhttps://github.com/spring-projects/spring-framework/blob/68757073b0cf69c41d5c17e8abdffbc388cdbabe/spring-beans/src/main/java/org/springframework/beans/SimpleTypeConverter.java#L26\r\n\r\nIt seems that all the concurrent operations in `ArgumentMethodArgumentResolver` share one `SimpleTypeConverter`, as well as `QueryByExampleDataFetcher`.', 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062069281', 'html_url': 'https://github.com/spring-projects/spring-graphql/issues/315#issuecomment-1062069281', 'issue_url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/315', 'id': 1062069281, 'node_id': 'IC_kwDOEMJUCs4_TeQh', 'user': {'login': 'rstoyanchev', 'id': 401908, 'node_id': 'MDQ6VXNlcjQwMTkwOA==', 'avatar_url': 'https://avatars.githubusercontent.com/u/401908?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/rstoyanchev', 'html_url': 'https://github.com/rstoyanchev', 'followers_url': 'https://api.github.com/users/rstoyanchev/followers', 'following_url': 'https://api.github.com/users/rstoyanchev/following{/other_user}', 'gists_url': 'https://api.github.com/users/rstoyanchev/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/rstoyanchev/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/rstoyanchev/subscriptions', 'organizations_url': 'https://api.github.com/users/rstoyanchev/orgs', 'repos_url': 'https://api.github.com/users/rstoyanchev/repos', 'events_url': 'https://api.github.com/users/rstoyanchev/events{/privacy}', 'received_events_url': 'https://api.github.com/users/rstoyanchev/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-08T18:17:42Z', 'updated_at': '2022-03-08T18:17:42Z', 'author_association': 'CONTRIBUTOR', 'body': ""It does look like a possible issue. I've scheduled it for M6 to have a closer look."", 'reactions': {'url': 'https://api.github.com/repos/spring-projects/spring-graphql/issues/comments/1062069281/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,Java
