event_id,event_type,event_repository,code_sample_event,event_created_at,event_payload,event_action,language
21274820492,WatchEvent,google/private-compute-services,0.0,2022-04-13T17:30:39Z,{'action': 'started'},started,Java
21271934038,WatchEvent,copy/v86,0.0,2022-04-13T14:57:44Z,{'action': 'started'},started,Rust
20753893769,IssueCommentEvent,tensorflow/tensorflow,0.0,2022-03-15T10:19:49Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'repository_url': 'https://api.github.com/repos/tensorflow/tensorflow', 'labels_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/labels{/name}', 'comments_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/comments', 'events_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/events', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123', 'id': 1162232166, 'node_id': 'I_kwDOArmXAs5FRkFm', 'number': 55123, 'title': 'A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)', 'user': {'login': 'douzaikongcheng', 'id': 48850789, 'node_id': 'MDQ6VXNlcjQ4ODUwNzg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/48850789?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/douzaikongcheng', 'html_url': 'https://github.com/douzaikongcheng', 'followers_url': 'https://api.github.com/users/douzaikongcheng/followers', 'following_url': 'https://api.github.com/users/douzaikongcheng/following{/other_user}', 'gists_url': 'https://api.github.com/users/douzaikongcheng/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/douzaikongcheng/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/douzaikongcheng/subscriptions', 'organizations_url': 'https://api.github.com/users/douzaikongcheng/orgs', 'repos_url': 'https://api.github.com/users/douzaikongcheng/repos', 'events_url': 'https://api.github.com/users/douzaikongcheng/events{/privacy}', 'received_events_url': 'https://api.github.com/users/douzaikongcheng/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 404586594, 'node_id': 'MDU6TGFiZWw0MDQ1ODY1OTQ=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower', 'name': 'stat:awaiting tensorflower', 'color': 'f4b400', 'default': False, 'description': 'Status  - Awaiting response from tensorflower'}, {'id': 473184161, 'node_id': 'MDU6TGFiZWw0NzMxODQxNjE=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/type:support', 'name': 'type:support', 'color': '159b2e', 'default': False, 'description': 'Support issues'}, {'id': 3835861157, 'node_id': 'LA_kwDOArmXAs7kopil', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/TFLiteGooglePlayServices', 'name': 'TFLiteGooglePlayServices', 'color': '27FAE2', 'default': False, 'description': 'For issues related to TensorFlow Lite in Google Play Services'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 9, 'created_at': '2022-03-08T05:19:19Z', 'updated_at': '2022-03-15T10:19:49Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**System information**\r\n- Android Device information (use `adb shell getprop ro.build.fingerprint`\r\n  if possible):\r\n- TensorFlow Lite in Play Services SDK version (found in `build.gradle`):\r\n- Google Play Services version\r\n  (`Settings` > `Apps` > `Google Play Services` > `App details`):\r\n`\r\nD/goldfish-address-space: allocate: Ask for block of size 0x100\r\nD/goldfish-address-space: allocate: ioctl allocate returned offset 0x3fb9b8000 size 0x2000\r\nD/HostConnection: HostComposition ext ANDROID_EMU_CHECKSUM_HELPER_v1 ANDROID_EMU_native_sync_v2 ANDROID_EMU_native_sync_v3 ANDROID_EMU_native_sync_v4 ANDROID_EMU_dma_v1 ANDROID_EMU_direct_mem ANDROID_EMU_host_composition_v1 ANDROID_EMU_host_composition_v2 ANDROID_EMU_vulkan ANDROID_EMU_deferred_vulkan_commands ANDROID_EMU_vulkan_null_optional_strings ANDROID_EMU_vulkan_create_resources_with_requirements ANDROID_EMU_YUV_Cache ANDROID_EMU_async_unmap_buffer ANDROID_EMU_vulkan_ignored_handles ANDROID_EMU_vulkan_free_memory_sync ANDROID_EMU_vulkan_shader_float16_int8 ANDROID_EMU_vulkan_async_queue_submit GL_OES_vertex_array_object GL_KHR_texture_compression_astc_ldr ANDROID_EMU_host_side_tracing ANDROID_EMU_gles_max_version_2 \r\nI/tflite: Initialized TensorFlow Lite runtime.\r\nI/super_resolution::: Interpreter is created successfully\r\nI/System.out: s-------------------------------------------------\r\nA/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)`\r\n\r\n\r\nwhen i run a image(250 * 250), a very lagre image(default size 50 * 50), an error is  A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution). So how to run a big image with tflite in tensorflowlite\r\n\r\nprivate static final int LR_IMAGE_HEIGHT = 250;\r\nprivate static final int LR_IMAGE_WIDTH = 250;\r\n\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to or attach code demonstrating\r\nthe problem.\r\n`/*\r\n * Copyright 2020 The TensorFlow Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the ""License"");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     https://www.apache.org/licenses/LICENSE2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an ""AS IS"" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage org.tensorflow.lite.examples.superresolution;\r\n\r\nimport android.content.res.AssetFileDescriptor;\r\nimport android.content.res.AssetManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.SystemClock;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.WorkerThread;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.MappedByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\n\r\n/** A super resolution class to generate super resolution images from low resolution images * */\r\npublic class MainActivity extends AppCompatActivity {\r\n  static {\r\n    System.loadLibrary(""SuperResolution"");\r\n  }\r\n\r\n  private static final String TAG = ""SuperResolution"";\r\n  private static final String MODEL_NAME = ""ESRGAN.tflite"";\r\n  private static final int LR_IMAGE_HEIGHT = 250;\r\n  private static final int LR_IMAGE_WIDTH = 250;\r\n  private static final int UPSCALE_FACTOR = 4;\r\n  private static final int SR_IMAGE_HEIGHT = LR_IMAGE_HEIGHT * UPSCALE_FACTOR;\r\n  private static final int SR_IMAGE_WIDTH = LR_IMAGE_WIDTH * UPSCALE_FACTOR;\r\n  private static final String LR_IMG_1 = ""lr-1.jpg"";\r\n  private static final String LR_IMG_2 = ""lr-2.jpg"";\r\n  private static final String LR_IMG_3 = ""lr-3.jpg"";\r\n\r\n  private MappedByteBuffer model;\r\n  private long superResolutionNativeHandle = 0;\r\n  private Bitmap selectedLRBitmap = null;\r\n  private boolean useGPU = false;\r\n\r\n  private ImageView lowResImageView1;\r\n  private ImageView lowResImageView2;\r\n  private ImageView lowResImageView3;\r\n  private TextView selectedImageTextView;\r\n  private Switch gpuSwitch;\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n\r\n    final Button superResolutionButton = findViewById(R.id.upsample_button);\r\n    lowResImageView1 = findViewById(R.id.low_resolution_image_1);\r\n    lowResImageView2 = findViewById(R.id.low_resolution_image_2);\r\n    lowResImageView3 = findViewById(R.id.low_resolution_image_3);\r\n    selectedImageTextView = findViewById(R.id.chosen_image_tv);\r\n    gpuSwitch = findViewById(R.id.switch_use_gpu);\r\n\r\n    ImageView[] lowResImageViews = {lowResImageView1, lowResImageView2, lowResImageView3};\r\n\r\n    AssetManager assetManager = getAssets();\r\n    try {\r\n      InputStream inputStream1 = assetManager.open(LR_IMG_1);\r\n      Bitmap bitmap1 = BitmapFactory.decodeStream(inputStream1);\r\n      lowResImageView1.setImageBitmap(bitmap1);\r\n\r\n      InputStream inputStream2 = assetManager.open(LR_IMG_2);\r\n      Bitmap bitmap2 = BitmapFactory.decodeStream(inputStream2);\r\n      lowResImageView2.setImageBitmap(bitmap2);\r\n\r\n      InputStream inputStream3 = assetManager.open(LR_IMG_3);\r\n      Bitmap bitmap3 = BitmapFactory.decodeStream(inputStream3);\r\n      lowResImageView3.setImageBitmap(bitmap3);\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Failed to open an low resolution image"");\r\n    }\r\n\r\n    for (ImageView iv : lowResImageViews) {\r\n      setLRImageViewListener(iv);\r\n    }\r\n\r\n    superResolutionButton.setOnClickListener(\r\n        new View.OnClickListener() {\r\n          @Override\r\n          public void onClick(View view) {\r\n            if (selectedLRBitmap == null) {\r\n              Toast.makeText(\r\n                      getApplicationContext(),\r\n                      ""Please choose one low resolution image"",\r\n                      Toast.LENGTH_LONG)\r\n                  .show();\r\n              return;\r\n            }\r\n\r\n            if (superResolutionNativeHandle == 0) {\r\n                superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            } else if (useGPU != gpuSwitch.isChecked()) {\r\n              // We need to reinitialize interpreter when execution hardware is changed\r\n              deinit();\r\n              superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            }\r\n            useGPU = gpuSwitch.isChecked();\r\n            if (superResolutionNativeHandle == 0) {\r\n              showToast(""TFLite interpreter failed to create!"");\r\n              return;\r\n            }\r\n\r\n            int[] lowResRGB = new int[LR_IMAGE_HEIGHT * LR_IMAGE_WIDTH];\r\n            selectedLRBitmap.getPixels(\r\n                lowResRGB, 0, LR_IMAGE_WIDTH, 0, 0, LR_IMAGE_WIDTH, LR_IMAGE_HEIGHT);\r\n\r\n            final long startTime = SystemClock.uptimeMillis();\r\n            int[] superResRGB = doSuperResolution(lowResRGB);\r\n            final long processingTimeMs = SystemClock.uptimeMillis() - startTime;\r\n            if (superResRGB == null) {\r\n              showToast(""Super resolution failed!"");\r\n              return;\r\n            }\r\n\r\n            final LinearLayout resultLayout = findViewById(R.id.result_layout);\r\n            final ImageView superResolutionImageView = findViewById(R.id.super_resolution_image);\r\n            final ImageView nativelyScaledImageView = findViewById(R.id.natively_scaled_image);\r\n            final TextView superResolutionTextView = findViewById(R.id.super_resolution_tv);\r\n            final TextView nativelyScaledImageTextView =\r\n                findViewById(R.id.natively_scaled_image_tv);\r\n            final TextView logTextView = findViewById(R.id.log_view);\r\n\r\n            // Force refreshing the ImageView\r\n            superResolutionImageView.setImageDrawable(null);\r\n            Bitmap srImgBitmap =\r\n                Bitmap.createBitmap(\r\n                    superResRGB, SR_IMAGE_WIDTH, SR_IMAGE_HEIGHT, Bitmap.Config.ARGB_8888);\r\n            superResolutionImageView.setImageBitmap(srImgBitmap);\r\n            nativelyScaledImageView.setImageBitmap(selectedLRBitmap);\r\n            resultLayout.setVisibility(View.VISIBLE);\r\n            logTextView.setText(""Inference time: "" + processingTimeMs + ""ms"");\r\n          }\r\n        });\r\n  }\r\n\r\n  @Override\r\n  public void onDestroy() {\r\n    super.onDestroy();\r\n    deinit();\r\n  }\r\n\r\n  private void setLRImageViewListener(ImageView iv) {\r\n    iv.setOnTouchListener(\r\n        new View.OnTouchListener() {\r\n          @Override\r\n          public boolean onTouch(View v, MotionEvent event) {\r\n            if (v.equals(lowResImageView1)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView1.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 1 (""\r\n                      + getResources().getString(R.string.low_resolution_1)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView2)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView2.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 2 (""\r\n                      + getResources().getString(R.string.low_resolution_2)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView3)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView3.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 3 (""\r\n                      + getResources().getString(R.string.low_resolution_3)\r\n                      + "")"");\r\n            }\r\n            return false;\r\n          }\r\n        });\r\n  }\r\n\r\n  @WorkerThread\r\n  public synchronized int[] doSuperResolution(int[] lowResRGB) {\r\n    return superResolutionFromJNI(superResolutionNativeHandle, lowResRGB);\r\n  }\r\n\r\n  private MappedByteBuffer loadModelFile() throws IOException {\r\n    try (AssetFileDescriptor fileDescriptor =\r\n            AssetsUtil.getAssetFileDescriptorOrCached(getApplicationContext(), MODEL_NAME);\r\n        FileInputStream inputStream = new FileInputStream(fileDescriptor.getFileDescriptor())) {\r\n      FileChannel fileChannel = inputStream.getChannel();\r\n      long startOffset = fileDescriptor.getStartOffset();\r\n      long declaredLength = fileDescriptor.getDeclaredLength();\r\n      return fileChannel.map(FileChannel.MapMode.READ_ONLY, startOffset, declaredLength);\r\n    }\r\n  }\r\n\r\n  private void showToast(String str) {\r\n    Toast.makeText(getApplicationContext(), str, Toast.LENGTH_LONG).show();\r\n  }\r\n\r\n  private long initTFLiteInterpreter(boolean useGPU) {\r\n    try {\r\n      model = loadModelFile();\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Fail to load model"", e);\r\n    }\r\n    return initWithByteBufferFromJNI(model, useGPU);\r\n  }\r\n\r\n  private void deinit() {\r\n    deinitFromJNI(superResolutionNativeHandle);\r\n  }\r\n\r\n  private native int[] superResolutionFromJNI(long superResolutionNativeHandle, int[] lowResRGB);\r\n\r\n  private native long initWithByteBufferFromJNI(MappedByteBuffer modelBuffer, boolean useGPU);\r\n\r\n  private native void deinitFromJNI(long superResolutionNativeHandle);\r\n}\r\n`\r\n\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem.\r\nIf including tracebacks, please include the full traceback. Large logs and files\r\nshould be attached.\r\n\r\n\r\nSDK version: 28\r\ndevice information： huawei p40\r\nlog\r\nhttps://github.com/douzaikongcheng/log/blob/main/test.txt\r\n', 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1067804268', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123#issuecomment-1067804268', 'issue_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'id': 1067804268, 'node_id': 'IC_kwDOArmXAs4_pWZs', 'user': {'login': 'sheepmaster', 'id': 12303, 'node_id': 'MDQ6VXNlcjEyMzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12303?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sheepmaster', 'html_url': 'https://github.com/sheepmaster', 'followers_url': 'https://api.github.com/users/sheepmaster/followers', 'following_url': 'https://api.github.com/users/sheepmaster/following{/other_user}', 'gists_url': 'https://api.github.com/users/sheepmaster/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sheepmaster/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sheepmaster/subscriptions', 'organizations_url': 'https://api.github.com/users/sheepmaster/orgs', 'repos_url': 'https://api.github.com/users/sheepmaster/repos', 'events_url': 'https://api.github.com/users/sheepmaster/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sheepmaster/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-15T10:19:49Z', 'updated_at': '2022-03-15T10:19:49Z', 'author_association': 'NONE', 'body': ""Sorry, I haven't had a chance yet to try the sample (I'm not directly on the TF team, I just came across this bug and found an obvious issue). Maybe @chunduriv can take a look?"", 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1067804268/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,C++
20676917143,IssueCommentEvent,tensorflow/tensorflow,0.0,2022-03-10T10:09:33Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'repository_url': 'https://api.github.com/repos/tensorflow/tensorflow', 'labels_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/labels{/name}', 'comments_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/comments', 'events_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/events', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123', 'id': 1162232166, 'node_id': 'I_kwDOArmXAs5FRkFm', 'number': 55123, 'title': 'A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)', 'user': {'login': 'douzaikongcheng', 'id': 48850789, 'node_id': 'MDQ6VXNlcjQ4ODUwNzg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/48850789?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/douzaikongcheng', 'html_url': 'https://github.com/douzaikongcheng', 'followers_url': 'https://api.github.com/users/douzaikongcheng/followers', 'following_url': 'https://api.github.com/users/douzaikongcheng/following{/other_user}', 'gists_url': 'https://api.github.com/users/douzaikongcheng/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/douzaikongcheng/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/douzaikongcheng/subscriptions', 'organizations_url': 'https://api.github.com/users/douzaikongcheng/orgs', 'repos_url': 'https://api.github.com/users/douzaikongcheng/repos', 'events_url': 'https://api.github.com/users/douzaikongcheng/events{/privacy}', 'received_events_url': 'https://api.github.com/users/douzaikongcheng/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 404586594, 'node_id': 'MDU6TGFiZWw0MDQ1ODY1OTQ=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower', 'name': 'stat:awaiting tensorflower', 'color': 'f4b400', 'default': False, 'description': 'Status  - Awaiting response from tensorflower'}, {'id': 473184161, 'node_id': 'MDU6TGFiZWw0NzMxODQxNjE=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/type:support', 'name': 'type:support', 'color': '159b2e', 'default': False, 'description': 'Support issues'}, {'id': 3835861157, 'node_id': 'LA_kwDOArmXAs7kopil', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/TFLiteGooglePlayServices', 'name': 'TFLiteGooglePlayServices', 'color': '27FAE2', 'default': False, 'description': 'For issues related to TensorFlow Lite in Google Play Services'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 5, 'created_at': '2022-03-08T05:19:19Z', 'updated_at': '2022-03-10T10:09:33Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**System information**\r\n- Android Device information (use `adb shell getprop ro.build.fingerprint`\r\n  if possible):\r\n- TensorFlow Lite in Play Services SDK version (found in `build.gradle`):\r\n- Google Play Services version\r\n  (`Settings` > `Apps` > `Google Play Services` > `App details`):\r\n`\r\nD/goldfish-address-space: allocate: Ask for block of size 0x100\r\nD/goldfish-address-space: allocate: ioctl allocate returned offset 0x3fb9b8000 size 0x2000\r\nD/HostConnection: HostComposition ext ANDROID_EMU_CHECKSUM_HELPER_v1 ANDROID_EMU_native_sync_v2 ANDROID_EMU_native_sync_v3 ANDROID_EMU_native_sync_v4 ANDROID_EMU_dma_v1 ANDROID_EMU_direct_mem ANDROID_EMU_host_composition_v1 ANDROID_EMU_host_composition_v2 ANDROID_EMU_vulkan ANDROID_EMU_deferred_vulkan_commands ANDROID_EMU_vulkan_null_optional_strings ANDROID_EMU_vulkan_create_resources_with_requirements ANDROID_EMU_YUV_Cache ANDROID_EMU_async_unmap_buffer ANDROID_EMU_vulkan_ignored_handles ANDROID_EMU_vulkan_free_memory_sync ANDROID_EMU_vulkan_shader_float16_int8 ANDROID_EMU_vulkan_async_queue_submit GL_OES_vertex_array_object GL_KHR_texture_compression_astc_ldr ANDROID_EMU_host_side_tracing ANDROID_EMU_gles_max_version_2 \r\nI/tflite: Initialized TensorFlow Lite runtime.\r\nI/super_resolution::: Interpreter is created successfully\r\nI/System.out: s-------------------------------------------------\r\nA/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)`\r\n\r\n\r\nwhen i run a image(250 * 250), a very lagre image(default size 50 * 50), an error is  A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution). So how to run a big image with tflite in tensorflowlite\r\n\r\nprivate static final int LR_IMAGE_HEIGHT = 250;\r\nprivate static final int LR_IMAGE_WIDTH = 250;\r\n\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to or attach code demonstrating\r\nthe problem.\r\n`/*\r\n * Copyright 2020 The TensorFlow Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the ""License"");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     https://www.apache.org/licenses/LICENSE2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an ""AS IS"" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage org.tensorflow.lite.examples.superresolution;\r\n\r\nimport android.content.res.AssetFileDescriptor;\r\nimport android.content.res.AssetManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.SystemClock;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.WorkerThread;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.MappedByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\n\r\n/** A super resolution class to generate super resolution images from low resolution images * */\r\npublic class MainActivity extends AppCompatActivity {\r\n  static {\r\n    System.loadLibrary(""SuperResolution"");\r\n  }\r\n\r\n  private static final String TAG = ""SuperResolution"";\r\n  private static final String MODEL_NAME = ""ESRGAN.tflite"";\r\n  private static final int LR_IMAGE_HEIGHT = 250;\r\n  private static final int LR_IMAGE_WIDTH = 250;\r\n  private static final int UPSCALE_FACTOR = 4;\r\n  private static final int SR_IMAGE_HEIGHT = LR_IMAGE_HEIGHT * UPSCALE_FACTOR;\r\n  private static final int SR_IMAGE_WIDTH = LR_IMAGE_WIDTH * UPSCALE_FACTOR;\r\n  private static final String LR_IMG_1 = ""lr-1.jpg"";\r\n  private static final String LR_IMG_2 = ""lr-2.jpg"";\r\n  private static final String LR_IMG_3 = ""lr-3.jpg"";\r\n\r\n  private MappedByteBuffer model;\r\n  private long superResolutionNativeHandle = 0;\r\n  private Bitmap selectedLRBitmap = null;\r\n  private boolean useGPU = false;\r\n\r\n  private ImageView lowResImageView1;\r\n  private ImageView lowResImageView2;\r\n  private ImageView lowResImageView3;\r\n  private TextView selectedImageTextView;\r\n  private Switch gpuSwitch;\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n\r\n    final Button superResolutionButton = findViewById(R.id.upsample_button);\r\n    lowResImageView1 = findViewById(R.id.low_resolution_image_1);\r\n    lowResImageView2 = findViewById(R.id.low_resolution_image_2);\r\n    lowResImageView3 = findViewById(R.id.low_resolution_image_3);\r\n    selectedImageTextView = findViewById(R.id.chosen_image_tv);\r\n    gpuSwitch = findViewById(R.id.switch_use_gpu);\r\n\r\n    ImageView[] lowResImageViews = {lowResImageView1, lowResImageView2, lowResImageView3};\r\n\r\n    AssetManager assetManager = getAssets();\r\n    try {\r\n      InputStream inputStream1 = assetManager.open(LR_IMG_1);\r\n      Bitmap bitmap1 = BitmapFactory.decodeStream(inputStream1);\r\n      lowResImageView1.setImageBitmap(bitmap1);\r\n\r\n      InputStream inputStream2 = assetManager.open(LR_IMG_2);\r\n      Bitmap bitmap2 = BitmapFactory.decodeStream(inputStream2);\r\n      lowResImageView2.setImageBitmap(bitmap2);\r\n\r\n      InputStream inputStream3 = assetManager.open(LR_IMG_3);\r\n      Bitmap bitmap3 = BitmapFactory.decodeStream(inputStream3);\r\n      lowResImageView3.setImageBitmap(bitmap3);\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Failed to open an low resolution image"");\r\n    }\r\n\r\n    for (ImageView iv : lowResImageViews) {\r\n      setLRImageViewListener(iv);\r\n    }\r\n\r\n    superResolutionButton.setOnClickListener(\r\n        new View.OnClickListener() {\r\n          @Override\r\n          public void onClick(View view) {\r\n            if (selectedLRBitmap == null) {\r\n              Toast.makeText(\r\n                      getApplicationContext(),\r\n                      ""Please choose one low resolution image"",\r\n                      Toast.LENGTH_LONG)\r\n                  .show();\r\n              return;\r\n            }\r\n\r\n            if (superResolutionNativeHandle == 0) {\r\n                superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            } else if (useGPU != gpuSwitch.isChecked()) {\r\n              // We need to reinitialize interpreter when execution hardware is changed\r\n              deinit();\r\n              superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            }\r\n            useGPU = gpuSwitch.isChecked();\r\n            if (superResolutionNativeHandle == 0) {\r\n              showToast(""TFLite interpreter failed to create!"");\r\n              return;\r\n            }\r\n\r\n            int[] lowResRGB = new int[LR_IMAGE_HEIGHT * LR_IMAGE_WIDTH];\r\n            selectedLRBitmap.getPixels(\r\n                lowResRGB, 0, LR_IMAGE_WIDTH, 0, 0, LR_IMAGE_WIDTH, LR_IMAGE_HEIGHT);\r\n\r\n            final long startTime = SystemClock.uptimeMillis();\r\n            int[] superResRGB = doSuperResolution(lowResRGB);\r\n            final long processingTimeMs = SystemClock.uptimeMillis() - startTime;\r\n            if (superResRGB == null) {\r\n              showToast(""Super resolution failed!"");\r\n              return;\r\n            }\r\n\r\n            final LinearLayout resultLayout = findViewById(R.id.result_layout);\r\n            final ImageView superResolutionImageView = findViewById(R.id.super_resolution_image);\r\n            final ImageView nativelyScaledImageView = findViewById(R.id.natively_scaled_image);\r\n            final TextView superResolutionTextView = findViewById(R.id.super_resolution_tv);\r\n            final TextView nativelyScaledImageTextView =\r\n                findViewById(R.id.natively_scaled_image_tv);\r\n            final TextView logTextView = findViewById(R.id.log_view);\r\n\r\n            // Force refreshing the ImageView\r\n            superResolutionImageView.setImageDrawable(null);\r\n            Bitmap srImgBitmap =\r\n                Bitmap.createBitmap(\r\n                    superResRGB, SR_IMAGE_WIDTH, SR_IMAGE_HEIGHT, Bitmap.Config.ARGB_8888);\r\n            superResolutionImageView.setImageBitmap(srImgBitmap);\r\n            nativelyScaledImageView.setImageBitmap(selectedLRBitmap);\r\n            resultLayout.setVisibility(View.VISIBLE);\r\n            logTextView.setText(""Inference time: "" + processingTimeMs + ""ms"");\r\n          }\r\n        });\r\n  }\r\n\r\n  @Override\r\n  public void onDestroy() {\r\n    super.onDestroy();\r\n    deinit();\r\n  }\r\n\r\n  private void setLRImageViewListener(ImageView iv) {\r\n    iv.setOnTouchListener(\r\n        new View.OnTouchListener() {\r\n          @Override\r\n          public boolean onTouch(View v, MotionEvent event) {\r\n            if (v.equals(lowResImageView1)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView1.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 1 (""\r\n                      + getResources().getString(R.string.low_resolution_1)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView2)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView2.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 2 (""\r\n                      + getResources().getString(R.string.low_resolution_2)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView3)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView3.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 3 (""\r\n                      + getResources().getString(R.string.low_resolution_3)\r\n                      + "")"");\r\n            }\r\n            return false;\r\n          }\r\n        });\r\n  }\r\n\r\n  @WorkerThread\r\n  public synchronized int[] doSuperResolution(int[] lowResRGB) {\r\n    return superResolutionFromJNI(superResolutionNativeHandle, lowResRGB);\r\n  }\r\n\r\n  private MappedByteBuffer loadModelFile() throws IOException {\r\n    try (AssetFileDescriptor fileDescriptor =\r\n            AssetsUtil.getAssetFileDescriptorOrCached(getApplicationContext(), MODEL_NAME);\r\n        FileInputStream inputStream = new FileInputStream(fileDescriptor.getFileDescriptor())) {\r\n      FileChannel fileChannel = inputStream.getChannel();\r\n      long startOffset = fileDescriptor.getStartOffset();\r\n      long declaredLength = fileDescriptor.getDeclaredLength();\r\n      return fileChannel.map(FileChannel.MapMode.READ_ONLY, startOffset, declaredLength);\r\n    }\r\n  }\r\n\r\n  private void showToast(String str) {\r\n    Toast.makeText(getApplicationContext(), str, Toast.LENGTH_LONG).show();\r\n  }\r\n\r\n  private long initTFLiteInterpreter(boolean useGPU) {\r\n    try {\r\n      model = loadModelFile();\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Fail to load model"", e);\r\n    }\r\n    return initWithByteBufferFromJNI(model, useGPU);\r\n  }\r\n\r\n  private void deinit() {\r\n    deinitFromJNI(superResolutionNativeHandle);\r\n  }\r\n\r\n  private native int[] superResolutionFromJNI(long superResolutionNativeHandle, int[] lowResRGB);\r\n\r\n  private native long initWithByteBufferFromJNI(MappedByteBuffer modelBuffer, boolean useGPU);\r\n\r\n  private native void deinitFromJNI(long superResolutionNativeHandle);\r\n}\r\n`\r\n\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem.\r\nIf including tracebacks, please include the full traceback. Large logs and files\r\nshould be attached.\r\n\r\n\r\nSDK version: 28\r\ndevice information： huawei p40\r\nlog\r\nhttps://github.com/douzaikongcheng/log/blob/main/test.txt\r\n', 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1063883429', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123#issuecomment-1063883429', 'issue_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'id': 1063883429, 'node_id': 'IC_kwDOArmXAs4_aZKl', 'user': {'login': 'sheepmaster', 'id': 12303, 'node_id': 'MDQ6VXNlcjEyMzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12303?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sheepmaster', 'html_url': 'https://github.com/sheepmaster', 'followers_url': 'https://api.github.com/users/sheepmaster/followers', 'following_url': 'https://api.github.com/users/sheepmaster/following{/other_user}', 'gists_url': 'https://api.github.com/users/sheepmaster/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sheepmaster/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sheepmaster/subscriptions', 'organizations_url': 'https://api.github.com/users/sheepmaster/orgs', 'repos_url': 'https://api.github.com/users/sheepmaster/repos', 'events_url': 'https://api.github.com/users/sheepmaster/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sheepmaster/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-10T10:09:33Z', 'updated_at': '2022-03-10T10:09:33Z', 'author_association': 'NONE', 'body': ""I don't have the model that you've been using, but you will definitely also have to change the size in native code (https://github.com/tensorflow/examples/blob/master/lite/examples/super_resolution/android/app/src/main/cc/SuperResolution.h#L35)."", 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1063883429/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,C++
20669255199,WatchEvent,warpcoil/em-dosbox,0.0,2022-03-09T23:11:54Z,{'action': 'started'},started,C++
20659014157,IssueCommentEvent,tensorflow/tensorflow,0.0,2022-03-09T13:22:44Z,"{'action': 'created', 'issue': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'repository_url': 'https://api.github.com/repos/tensorflow/tensorflow', 'labels_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/labels{/name}', 'comments_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/comments', 'events_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/events', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123', 'id': 1162232166, 'node_id': 'I_kwDOArmXAs5FRkFm', 'number': 55123, 'title': 'A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)', 'user': {'login': 'douzaikongcheng', 'id': 48850789, 'node_id': 'MDQ6VXNlcjQ4ODUwNzg5', 'avatar_url': 'https://avatars.githubusercontent.com/u/48850789?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/douzaikongcheng', 'html_url': 'https://github.com/douzaikongcheng', 'followers_url': 'https://api.github.com/users/douzaikongcheng/followers', 'following_url': 'https://api.github.com/users/douzaikongcheng/following{/other_user}', 'gists_url': 'https://api.github.com/users/douzaikongcheng/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/douzaikongcheng/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/douzaikongcheng/subscriptions', 'organizations_url': 'https://api.github.com/users/douzaikongcheng/orgs', 'repos_url': 'https://api.github.com/users/douzaikongcheng/repos', 'events_url': 'https://api.github.com/users/douzaikongcheng/events{/privacy}', 'received_events_url': 'https://api.github.com/users/douzaikongcheng/received_events', 'type': 'User', 'site_admin': False}, 'labels': [{'id': 404586594, 'node_id': 'MDU6TGFiZWw0MDQ1ODY1OTQ=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower', 'name': 'stat:awaiting tensorflower', 'color': 'f4b400', 'default': False, 'description': 'Status  - Awaiting response from tensorflower'}, {'id': 473184161, 'node_id': 'MDU6TGFiZWw0NzMxODQxNjE=', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/type:support', 'name': 'type:support', 'color': '159b2e', 'default': False, 'description': 'Support issues'}, {'id': 3835861157, 'node_id': 'LA_kwDOArmXAs7kopil', 'url': 'https://api.github.com/repos/tensorflow/tensorflow/labels/TFLiteGooglePlayServices', 'name': 'TFLiteGooglePlayServices', 'color': '27FAE2', 'default': False, 'description': 'For issues related to TensorFlow Lite in Google Play Services'}], 'state': 'open', 'locked': False, 'assignee': {'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}, 'assignees': [{'login': 'chunduriv', 'id': 74177924, 'node_id': 'MDQ6VXNlcjc0MTc3OTI0', 'avatar_url': 'https://avatars.githubusercontent.com/u/74177924?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/chunduriv', 'html_url': 'https://github.com/chunduriv', 'followers_url': 'https://api.github.com/users/chunduriv/followers', 'following_url': 'https://api.github.com/users/chunduriv/following{/other_user}', 'gists_url': 'https://api.github.com/users/chunduriv/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/chunduriv/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/chunduriv/subscriptions', 'organizations_url': 'https://api.github.com/users/chunduriv/orgs', 'repos_url': 'https://api.github.com/users/chunduriv/repos', 'events_url': 'https://api.github.com/users/chunduriv/events{/privacy}', 'received_events_url': 'https://api.github.com/users/chunduriv/received_events', 'type': 'User', 'site_admin': False}], 'milestone': None, 'comments': 3, 'created_at': '2022-03-08T05:19:19Z', 'updated_at': '2022-03-09T13:22:44Z', 'closed_at': None, 'author_association': 'NONE', 'active_lock_reason': None, 'body': '**System information**\r\n- Android Device information (use `adb shell getprop ro.build.fingerprint`\r\n  if possible):\r\n- TensorFlow Lite in Play Services SDK version (found in `build.gradle`):\r\n- Google Play Services version\r\n  (`Settings` > `Apps` > `Google Play Services` > `App details`):\r\n`\r\nD/goldfish-address-space: allocate: Ask for block of size 0x100\r\nD/goldfish-address-space: allocate: ioctl allocate returned offset 0x3fb9b8000 size 0x2000\r\nD/HostConnection: HostComposition ext ANDROID_EMU_CHECKSUM_HELPER_v1 ANDROID_EMU_native_sync_v2 ANDROID_EMU_native_sync_v3 ANDROID_EMU_native_sync_v4 ANDROID_EMU_dma_v1 ANDROID_EMU_direct_mem ANDROID_EMU_host_composition_v1 ANDROID_EMU_host_composition_v2 ANDROID_EMU_vulkan ANDROID_EMU_deferred_vulkan_commands ANDROID_EMU_vulkan_null_optional_strings ANDROID_EMU_vulkan_create_resources_with_requirements ANDROID_EMU_YUV_Cache ANDROID_EMU_async_unmap_buffer ANDROID_EMU_vulkan_ignored_handles ANDROID_EMU_vulkan_free_memory_sync ANDROID_EMU_vulkan_shader_float16_int8 ANDROID_EMU_vulkan_async_queue_submit GL_OES_vertex_array_object GL_KHR_texture_compression_astc_ldr ANDROID_EMU_host_side_tracing ANDROID_EMU_gles_max_version_2 \r\nI/tflite: Initialized TensorFlow Lite runtime.\r\nI/super_resolution::: Interpreter is created successfully\r\nI/System.out: s-------------------------------------------------\r\nA/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution)`\r\n\r\n\r\nwhen i run a image(250 * 250), a very lagre image(default size 50 * 50), an error is  A/libc: Fatal signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb9124f40 in tid 9093 (superresolution), pid 9093 (superresolution). So how to run a big image with tflite in tensorflowlite\r\n\r\nprivate static final int LR_IMAGE_HEIGHT = 250;\r\nprivate static final int LR_IMAGE_WIDTH = 250;\r\n\r\n\r\n**Standalone code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate\r\nthe problem. If possible, please share a link to or attach code demonstrating\r\nthe problem.\r\n`/*\r\n * Copyright 2020 The TensorFlow Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the ""License"");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     https://www.apache.org/licenses/LICENSE2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an ""AS IS"" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage org.tensorflow.lite.examples.superresolution;\r\n\r\nimport android.content.res.AssetFileDescriptor;\r\nimport android.content.res.AssetManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.SystemClock;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.WorkerThread;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.MappedByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\n\r\n/** A super resolution class to generate super resolution images from low resolution images * */\r\npublic class MainActivity extends AppCompatActivity {\r\n  static {\r\n    System.loadLibrary(""SuperResolution"");\r\n  }\r\n\r\n  private static final String TAG = ""SuperResolution"";\r\n  private static final String MODEL_NAME = ""ESRGAN.tflite"";\r\n  private static final int LR_IMAGE_HEIGHT = 250;\r\n  private static final int LR_IMAGE_WIDTH = 250;\r\n  private static final int UPSCALE_FACTOR = 4;\r\n  private static final int SR_IMAGE_HEIGHT = LR_IMAGE_HEIGHT * UPSCALE_FACTOR;\r\n  private static final int SR_IMAGE_WIDTH = LR_IMAGE_WIDTH * UPSCALE_FACTOR;\r\n  private static final String LR_IMG_1 = ""lr-1.jpg"";\r\n  private static final String LR_IMG_2 = ""lr-2.jpg"";\r\n  private static final String LR_IMG_3 = ""lr-3.jpg"";\r\n\r\n  private MappedByteBuffer model;\r\n  private long superResolutionNativeHandle = 0;\r\n  private Bitmap selectedLRBitmap = null;\r\n  private boolean useGPU = false;\r\n\r\n  private ImageView lowResImageView1;\r\n  private ImageView lowResImageView2;\r\n  private ImageView lowResImageView3;\r\n  private TextView selectedImageTextView;\r\n  private Switch gpuSwitch;\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n\r\n    final Button superResolutionButton = findViewById(R.id.upsample_button);\r\n    lowResImageView1 = findViewById(R.id.low_resolution_image_1);\r\n    lowResImageView2 = findViewById(R.id.low_resolution_image_2);\r\n    lowResImageView3 = findViewById(R.id.low_resolution_image_3);\r\n    selectedImageTextView = findViewById(R.id.chosen_image_tv);\r\n    gpuSwitch = findViewById(R.id.switch_use_gpu);\r\n\r\n    ImageView[] lowResImageViews = {lowResImageView1, lowResImageView2, lowResImageView3};\r\n\r\n    AssetManager assetManager = getAssets();\r\n    try {\r\n      InputStream inputStream1 = assetManager.open(LR_IMG_1);\r\n      Bitmap bitmap1 = BitmapFactory.decodeStream(inputStream1);\r\n      lowResImageView1.setImageBitmap(bitmap1);\r\n\r\n      InputStream inputStream2 = assetManager.open(LR_IMG_2);\r\n      Bitmap bitmap2 = BitmapFactory.decodeStream(inputStream2);\r\n      lowResImageView2.setImageBitmap(bitmap2);\r\n\r\n      InputStream inputStream3 = assetManager.open(LR_IMG_3);\r\n      Bitmap bitmap3 = BitmapFactory.decodeStream(inputStream3);\r\n      lowResImageView3.setImageBitmap(bitmap3);\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Failed to open an low resolution image"");\r\n    }\r\n\r\n    for (ImageView iv : lowResImageViews) {\r\n      setLRImageViewListener(iv);\r\n    }\r\n\r\n    superResolutionButton.setOnClickListener(\r\n        new View.OnClickListener() {\r\n          @Override\r\n          public void onClick(View view) {\r\n            if (selectedLRBitmap == null) {\r\n              Toast.makeText(\r\n                      getApplicationContext(),\r\n                      ""Please choose one low resolution image"",\r\n                      Toast.LENGTH_LONG)\r\n                  .show();\r\n              return;\r\n            }\r\n\r\n            if (superResolutionNativeHandle == 0) {\r\n                superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            } else if (useGPU != gpuSwitch.isChecked()) {\r\n              // We need to reinitialize interpreter when execution hardware is changed\r\n              deinit();\r\n              superResolutionNativeHandle = initTFLiteInterpreter(gpuSwitch.isChecked());\r\n            }\r\n            useGPU = gpuSwitch.isChecked();\r\n            if (superResolutionNativeHandle == 0) {\r\n              showToast(""TFLite interpreter failed to create!"");\r\n              return;\r\n            }\r\n\r\n            int[] lowResRGB = new int[LR_IMAGE_HEIGHT * LR_IMAGE_WIDTH];\r\n            selectedLRBitmap.getPixels(\r\n                lowResRGB, 0, LR_IMAGE_WIDTH, 0, 0, LR_IMAGE_WIDTH, LR_IMAGE_HEIGHT);\r\n\r\n            final long startTime = SystemClock.uptimeMillis();\r\n            int[] superResRGB = doSuperResolution(lowResRGB);\r\n            final long processingTimeMs = SystemClock.uptimeMillis() - startTime;\r\n            if (superResRGB == null) {\r\n              showToast(""Super resolution failed!"");\r\n              return;\r\n            }\r\n\r\n            final LinearLayout resultLayout = findViewById(R.id.result_layout);\r\n            final ImageView superResolutionImageView = findViewById(R.id.super_resolution_image);\r\n            final ImageView nativelyScaledImageView = findViewById(R.id.natively_scaled_image);\r\n            final TextView superResolutionTextView = findViewById(R.id.super_resolution_tv);\r\n            final TextView nativelyScaledImageTextView =\r\n                findViewById(R.id.natively_scaled_image_tv);\r\n            final TextView logTextView = findViewById(R.id.log_view);\r\n\r\n            // Force refreshing the ImageView\r\n            superResolutionImageView.setImageDrawable(null);\r\n            Bitmap srImgBitmap =\r\n                Bitmap.createBitmap(\r\n                    superResRGB, SR_IMAGE_WIDTH, SR_IMAGE_HEIGHT, Bitmap.Config.ARGB_8888);\r\n            superResolutionImageView.setImageBitmap(srImgBitmap);\r\n            nativelyScaledImageView.setImageBitmap(selectedLRBitmap);\r\n            resultLayout.setVisibility(View.VISIBLE);\r\n            logTextView.setText(""Inference time: "" + processingTimeMs + ""ms"");\r\n          }\r\n        });\r\n  }\r\n\r\n  @Override\r\n  public void onDestroy() {\r\n    super.onDestroy();\r\n    deinit();\r\n  }\r\n\r\n  private void setLRImageViewListener(ImageView iv) {\r\n    iv.setOnTouchListener(\r\n        new View.OnTouchListener() {\r\n          @Override\r\n          public boolean onTouch(View v, MotionEvent event) {\r\n            if (v.equals(lowResImageView1)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView1.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 1 (""\r\n                      + getResources().getString(R.string.low_resolution_1)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView2)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView2.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 2 (""\r\n                      + getResources().getString(R.string.low_resolution_2)\r\n                      + "")"");\r\n            } else if (v.equals(lowResImageView3)) {\r\n              selectedLRBitmap = ((BitmapDrawable) lowResImageView3.getDrawable()).getBitmap();\r\n              selectedImageTextView.setText(\r\n                  ""You are using low resolution image: 3 (""\r\n                      + getResources().getString(R.string.low_resolution_3)\r\n                      + "")"");\r\n            }\r\n            return false;\r\n          }\r\n        });\r\n  }\r\n\r\n  @WorkerThread\r\n  public synchronized int[] doSuperResolution(int[] lowResRGB) {\r\n    return superResolutionFromJNI(superResolutionNativeHandle, lowResRGB);\r\n  }\r\n\r\n  private MappedByteBuffer loadModelFile() throws IOException {\r\n    try (AssetFileDescriptor fileDescriptor =\r\n            AssetsUtil.getAssetFileDescriptorOrCached(getApplicationContext(), MODEL_NAME);\r\n        FileInputStream inputStream = new FileInputStream(fileDescriptor.getFileDescriptor())) {\r\n      FileChannel fileChannel = inputStream.getChannel();\r\n      long startOffset = fileDescriptor.getStartOffset();\r\n      long declaredLength = fileDescriptor.getDeclaredLength();\r\n      return fileChannel.map(FileChannel.MapMode.READ_ONLY, startOffset, declaredLength);\r\n    }\r\n  }\r\n\r\n  private void showToast(String str) {\r\n    Toast.makeText(getApplicationContext(), str, Toast.LENGTH_LONG).show();\r\n  }\r\n\r\n  private long initTFLiteInterpreter(boolean useGPU) {\r\n    try {\r\n      model = loadModelFile();\r\n    } catch (IOException e) {\r\n      Log.e(TAG, ""Fail to load model"", e);\r\n    }\r\n    return initWithByteBufferFromJNI(model, useGPU);\r\n  }\r\n\r\n  private void deinit() {\r\n    deinitFromJNI(superResolutionNativeHandle);\r\n  }\r\n\r\n  private native int[] superResolutionFromJNI(long superResolutionNativeHandle, int[] lowResRGB);\r\n\r\n  private native long initWithByteBufferFromJNI(MappedByteBuffer modelBuffer, boolean useGPU);\r\n\r\n  private native void deinitFromJNI(long superResolutionNativeHandle);\r\n}\r\n`\r\n\r\n\r\n**Any other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem.\r\nIf including tracebacks, please include the full traceback. Large logs and files\r\nshould be attached.\r\n\r\n\r\nSDK version: 28\r\ndevice information： huawei p40\r\nlog\r\nhttps://github.com/douzaikongcheng/log/blob/main/test.txt\r\n', 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'timeline_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123/timeline', 'performed_via_github_app': None}, 'comment': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1062916491', 'html_url': 'https://github.com/tensorflow/tensorflow/issues/55123#issuecomment-1062916491', 'issue_url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/55123', 'id': 1062916491, 'node_id': 'IC_kwDOArmXAs4_WtGL', 'user': {'login': 'sheepmaster', 'id': 12303, 'node_id': 'MDQ6VXNlcjEyMzAz', 'avatar_url': 'https://avatars.githubusercontent.com/u/12303?v=4', 'gravatar_id': '', 'url': 'https://api.github.com/users/sheepmaster', 'html_url': 'https://github.com/sheepmaster', 'followers_url': 'https://api.github.com/users/sheepmaster/followers', 'following_url': 'https://api.github.com/users/sheepmaster/following{/other_user}', 'gists_url': 'https://api.github.com/users/sheepmaster/gists{/gist_id}', 'starred_url': 'https://api.github.com/users/sheepmaster/starred{/owner}{/repo}', 'subscriptions_url': 'https://api.github.com/users/sheepmaster/subscriptions', 'organizations_url': 'https://api.github.com/users/sheepmaster/orgs', 'repos_url': 'https://api.github.com/users/sheepmaster/repos', 'events_url': 'https://api.github.com/users/sheepmaster/events{/privacy}', 'received_events_url': 'https://api.github.com/users/sheepmaster/received_events', 'type': 'User', 'site_admin': False}, 'created_at': '2022-03-09T13:22:44Z', 'updated_at': '2022-03-09T13:22:44Z', 'author_association': 'NONE', 'body': 'Hi @douzaikongcheng, if you change the size of the input image, you will also need to retrain/re-convert the model (see https://github.com/tensorflow/examples/blob/master/lite/examples/super_resolution/ml/super_resolution.ipynb) and change the corresponding values in the native code. I suspect the mismatch between these is what is causing the crash.', 'reactions': {'url': 'https://api.github.com/repos/tensorflow/tensorflow/issues/comments/1062916491/reactions', 'total_count': 0, '+1': 0, '-1': 0, 'laugh': 0, 'hooray': 0, 'confused': 0, 'heart': 0, 'rocket': 0, 'eyes': 0}, 'performed_via_github_app': None}}",created,C++
